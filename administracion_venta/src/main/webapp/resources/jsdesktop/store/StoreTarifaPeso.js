Ext.define('MyDesktop.store.StoreTarifaPeso', {	extend: 'Ext.data.Store',    model: 'MyDesktop.models.ModeloTarifas',    autoDestroy: false,    loadMask : true,	autoSave: false,    autoSync: false,    autoLoad: false,	idProperty: 'idtarifapeso',  	proxy: {        type: 'ajax',        api: {            read: '../tarifapeso/getDatos',            create:'../tarifapeso/insertJson',            update:'../tarifapeso/updateJson',            destroy:'../tarifapeso/deleteJson'		         },        reader: {                 type: 'json',                 successProperty: 'success',                 root : 'proxiArray',                 messageProperty: 'message',                 totalProperty : 'totalCount',        },        writer: {            	 type: 'json',                 writeAllFields: true,                 encode: false,                 root: 'proxiArray'        },        listeners: {             exception: function(proxy, response, operation){            	 if (operation.error==null){            		 return;            	 }            	 var error ='';            	 	 if (operation.error!= undefined){            	 		error =operation.error;            	 	 }else {            	 		error =operation.getError();            	 	 }                     Ext.MessageBox.show({                         title: 'REMOTE EXCEPTION',                         msg: error,                          icon: Ext.MessageBox.ERROR,                         buttons: Ext.Msg.OK                     });                 }        },        afterRequest: function (request, success)         {                 //Verifica las llamadas                 if (request.action == 'read') {                     this.readCallback(request);                 }                                  else if (request.action == 'create') {                     this.createCallback(request);                 }                                  else if (request.action == 'update') {                     this.updateCallback(request);                 }                                  else if (request.action == 'destroy') {                     this.deleteCallback(request);                 }         },         readCallback: function (request) {                 if (!request.operation.success)                  {                     Ext.Msg.show(                                     {                                    	 title: 'Warning',                                         msg:  request.operation.error,                                         buttons: Ext.Msg.OK,                                         icon: Ext.Msg.WARNING                                     });                 }             },         deleteCallback: function (request) {	        		    	 	 	             if (!request.operation.success) 	             {	            	 var error ='';		    	 	 if (operation.error!= undefined){		    	 		error =operation.error;		    	 	 }else {		    	 		error =operation.getError();		    	 	 }		    	 	this.rejectChanges();	                 Ext.Msg.show(	                                 {	                                	 title: 'Warning',	                                     msg: error,//'No pudo realizar la operación de borrado',	                                     buttons: Ext.Msg.OK,	                                     icon: Ext.Msg.WARNING	                                 });			             }			 },			 updateCallback: function (request) {		             if (!request.operation.success) 		             {		                 Ext.Msg.show(		                                 {		                                	 title: 'Warning',		                                	    msg: request.operation.error,		                                     buttons: Ext.Msg.OK,		                                     icon: Ext.Msg.WARNING		                                 });				             }		 	},     		 	createCallback: function (request) {	             if (!request.operation.success) 	             {	                 Ext.Msg.show(	                                 {	                                	 title: 'Warning',	                                	    msg:  request.operation.error,	                                     buttons: Ext.Msg.OK,	                                     icon: Ext.Msg.WARNING	                                 });			             }			}		 	         }, 			        sorters: [{            property: 'idtarifapeso',            direction: 'ASC'        }]});