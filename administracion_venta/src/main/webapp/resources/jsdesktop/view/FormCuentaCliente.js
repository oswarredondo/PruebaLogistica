Ext.define('MyDesktop.view.FormCuentaCliente', { extend: 'Ext.form.Panel',    xtype: 'cuenta-cliente-form',    frame: false,    width: 400,    layout: 'anchor',    border: false,    bodyPadding: 10,    fieldDefaults: {       // labelAlign: 'top',        labelWidth: 125,        labelStyle: 'font-weight:bold'    },	comboTipos:undefined,	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '0 0 10 0'    },	forma: undefined,	myscope:undefined,	idcliente:undefined,	operacion:undefined,	identidad:undefined,	idorganizacion:undefined,	identificador:undefined,	initComponent: function () {				var operacion_aplicar = this.operacion;		this.comboTipos = Ext.create('MyDesktop.store.StoreTiposBusquedaCuentasClientes',{});		this.myscope=this;		this.items= [			{xtype:'hidden', name:'iddireccion'},			{xtype:'hidden', name:'identidad', value:this.identidad},			{xtype:'hidden', name:'idorganizacion', value:this.idorganizacion},			{xtype:'hidden', name:'identificador', value:this.identificador},									{  xtype: 'myUpperCaseTextField', name: 'numCliente',fieldLabel: 'Num. Cliente',					emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:40},			{						xtype: 'fieldcontainer',						labelStyle: 'font-weight:bold;padding:0',						layout: 'hbox',						emptyText: 'Cliente',						defaultType: 'textfield',						fieldDefaults: {							//labelAlign: 'top'						},						items: [						    {xtype: 'myUpperCaseTextField', flex: 3,fieldLabel: 'Cuenta Maestra',name:'cuentaMaestra',width:100,margins: '0 0 0 0' },							{ xtype:'button', flex: 1, width:80, margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',scope:this.myscope,								handler: function(){									//Muestra el grid para la seccion de los clientes									this.consultaclientes();								}							}						]			}, 			{  xtype: 'myUpperCaseTextField', name: 'razonSocial',fieldLabel: 'Razón Social',				emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:40},							{  xtype: 'myUpperCaseTextField', name: 'atencion',fieldLabel: 'Atención',emptyText: '',					allowBlank: true,enforceMaxLength:true,maxLength:40},						{  xtype: 'myUpperCaseTextField', name: 'rfc',fieldLabel: 'R.F.C',emptyText: '',						allowBlank: true,enforceMaxLength:true,maxLength:40},			{  xtype: 'myUpperCaseTextField', name: 'calle',fieldLabel: 'Calle',emptyText: '',						allowBlank: false,enforceMaxLength:true,maxLength:40},			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				fieldLabel: 'C.P.',				defaultType: 'textfield',				fieldDefaults: {					//labelAlign: 'top'				},				items: [					{  xtype: 'myUpperCaseTextField',flex: 1, name: 'cp', emptyText:'', allowBlank: false, margins: '0 0 0 0',enforceMaxLength:true,maxLength:5 },					{ xtype:'button', margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarCP_'+this.id,						handler: this.myscope.showGridCps,scope:this					}				]			},			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				fieldLabel: 'Colonia',				defaultType: 'textfield',				fieldDefaults: {					//labelAlign: 'top'				},				items: [					{   xtype: 'myUpperCaseTextField',flex: 1, name: 'colonia', emptyText:'', allowBlank: false,enforceMaxLength:true,maxLength:40 },					{ xtype:'button',  margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarColonia_'+this.id,						handler: this.myscope.showGridCps,scope:this					}				]			},			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				defaultType: 'textfield',				fieldLabel: 'Municipio',				fieldDefaults: {					//labelAlign: 'top'				},				items: [										{   xtype: 'myUpperCaseTextField',flex: 1, name: 'municipio', emptyText:'', allowBlank: false, margins: '0 0 0 0',enforceMaxLength:true,maxLength:40},					{ xtype:'button',  margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarMunicipio_'+this.id,						handler: this.myscope.showGridCps,scope:this					}				]			}, 			{  xtype: 'myUpperCaseTextField',flex: 1, name: 'estado', emptyText:'', allowBlank: false,				enforceMaxLength:true,maxLength:40,fieldLabel: 'Estado', },			{  xtype: 'myUpperCaseTextField',flex: 1, xtype: 'textfield',margins: '0 0 0 5',emptyText:'',				name: 'correoe',vtype: 'email',allowBlank: true,enforceMaxLength:true,maxLength:40,fieldLabel: 'Email'},			{  xtype: 'myUpperCaseTextField',flex: 1,name: 'telefono',emptyText:'',					allowBlank: true,enforceMaxLength:true,maxLength:40,fieldLabel: 'Telefono'},			{  xtype: 'myUpperCaseTextField',flex: 1,margins: '0 0 0 5',emptyText:'',name: 'movil',						allowBlank: true,enforceMaxLength:true,maxLength:20, fieldLabel: 'Movil'},			{				xtype: 'myUpperCaseTextArea',				fieldLabel: 'Observaciones',				enforceMaxLength:true,				maxLength:100,				labelAlign: 'top',				 name: 'observacion',				height: 90,				margin: '0',				allowBlank: true			}					],			this.buttons= [				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key, value){								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando información espere..."});							myMask.show();														form.submit({								clientValidation: true,								url: '../catalogo/cuentasclientes/' + operacion_aplicar,								success: function(form, action) {									myMask.hide( );									myMask.disable();									alertMsg('Confirmaci�n',action.result.message);												},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		if ( (action.result!=undefined) && (action.result.message!=undefined)){										alertMsg('Error' , action.result.message);									}else{										//Busca si existe un response del servier										if (action.response.responseText!=null){											alertMsg(action.response.statusText , action.response.responseText);										}									}								}							});																			}else{							alertMsg('Complete los campos requeridos.');						}					}			}//,			//{text: 'Salir'},		];			this.callParent();			},       	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){		var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma					valor = record.get(field.getName());					if (valor!=undefined){						//alert('Campo:' + field.getName() + ', valor:' +valor);						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	},		showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			alert('Tipo de consulta inválida.');		}						var gridcps = Ext.create('MyDesktop.view.GridConsultaCPs', { 			isEditable:true,			cp_field:'cp' ,colonia_field:'colonia', municipio_field:'municipio',estado_field:'estado',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 		  		var buscacps_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_window.close();}}		        ]			}); 		gridcps.setScopeWin(buscacps_window);			 buscacps_window.show();		},		setIdCliente:function(idcliente){		this.idcliente=idcliente;	},	consultaclientes:function(){			var mysope=this;				//Crea una forma de clientes para agregar los datos		var grid_cte_cuenta_cte_consulta = Ext.create('MyDesktop.view.GridConsultaDireccionesCliente',{id:'grid_con_cuenta_clientes_dir'}); 		var windows_consulta_dir_cuenta_cliente =Ext.create('widget.window', {			id:'utils-win-consultar-clientes-cotizaciones-disponibles',			title: "Clientes Disponibles",			width: 900,			height: 400,			modal:true,			plain: true,			layout: 'fit',			iconCls:'clientes_white',			items: grid_cte_cuenta_cte_consulta,			buttons:[				{iconCls:'seleccionar_white',text:'Seleccionar',handler:					function(){						var registro = grid_cte_cuenta_cte_consulta.getRegistro();						if (registro!=undefined){							mysope.updateFieldCte(registro.get('idcliente'), 'cuentaMaestra');							mysope.updateFieldCte(registro.get('numcliente'), 'numCliente');							mysope.updateFieldCte(registro.get('descripcion'), 'razonSocial');							mysope.updateFieldCte(registro.get('telefono'), 'telefono');														var calle= registro.get('calle')==undefined?"":registro.get('calle');							var numinterior= registro.get('numinterior')==undefined?"":registro.get('numinterior');							var numexterior= registro.get('numexterior')==undefined?"":registro.get('numexterior');							calle = calle + " " + numinterior +" "+numexterior;							mysope.updateFieldCte(calle, 'calle');														mysope.updateFieldCte(registro.get('cp'), 'cp');							mysope.updateFieldCte(registro.get('colonia'), 'colonia');							mysope.updateFieldCte(registro.get('municipio'), 'municipio');							mysope.updateFieldCte(registro.get('estado'), 'estado');							windows_consulta_dir_cuenta_cliente.close();						}else{							Ext.Msg.alert('Verificar',"Seleccione registro de dirección.");				     		return;						}					}				}			]		}).show();	},	showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ; 		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			alert('Tipo de consulta inválida.');		}						var gridcps_cuenta_cte = Ext.create('MyDesktop.view.GridConsultaCPs', { 			id:'GridConsultaCPs_Consulta_Cuenta_Cte',			isEditable:true,			cp_field:'cp' ,colonia_field:'colonia', municipio_field:'municipio',estado_field:'estado',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 				var buscacps_cuenta_cte_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps_cuenta_cte,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_cuenta_cte_window.close();}}		        ]			}); 		gridcps_cuenta_cte.setScopeWin(buscacps_cuenta_cte_window);			buscacps_cuenta_cte_window.show();		},	updateFieldCte:function(valor, campo){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if ((field.getName()!=undefined) && (field.getName()==campo)){					field.setValue(valor);								}			}		}	},	});