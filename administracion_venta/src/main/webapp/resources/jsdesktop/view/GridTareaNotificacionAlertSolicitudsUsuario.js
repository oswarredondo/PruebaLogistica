Ext.define('MyDesktop.view.GridTareaNotificacionAlertSolicitudsUsuario', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridTareaNotificacionAlertSolicitudsUsuario',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	store_cofigurado:undefined,	showMostrarEditar:false,    initComponent: function () {		 this.editing = Ext.create('Ext.grid.plugin.CellEditing',{clicksToEdit: 1});		 this.plugins = this.editing;		 this.myScope=this;		 var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		 this.bbar=[												{ text: 'Mostrar Detalles',iconCls: 'detalles',handler:this.showDetails, scope:this.myScope },						{xtype: 'tbfill'},						{ text: 'Cambiar Estatus',iconCls: 'editar',handler:this.modificar, scope:this.myScope, hidden:!this.showMostrarEditar }			];		 if (this.store_cofigurado!=undefined){			 this.store=this.store_cofigurado;		 }else{			 this.store = Ext.create('MyDesktop.store.StoreTareas',{					proxy: {				        type: 'ajax',				        api: {				        	 read: '../tareas/getTareaUsuarioSesion'				        },				        reader: {				                 type: 'json',				                 successProperty: 'success',				                 root : 'proxiArray',				                 messageProperty: 'message',				                 totalProperty : 'totalCount',				        }				      },				      sorters: [{				            property: 'importancia',				            direction: 'DESC'				        }]														}); 		 }				this.selType= 'checkboxmodel';        this.columns = [                        //idtarea					{                		xtype: 'actioncolumn',menuDisabled: true,sortable: true,width: 30,text: '',						items: [							{								getClass: function(v, meta, rec) { return rec.get('estatus'); },								getTip: function(v, meta, rec) {return rec.get('estatus'); },								handler: function(grid, rowIndex, colIndex) {									//var rec = grid.getStore().getAt(rowIndex),									//action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');									//alertMsg(action, action + ' ' + rec.get('nombre'));								}							}						]					}, 					{                		xtype: 'actioncolumn',menuDisabled: true,sortable: true,width: 30	,text: '',						items: [							{								getClass: function(v, meta, rec) { return rec.get('tipo'); },								getTip: function(v, meta, rec) {return rec.get('tipo'); },								handler: function(grid, rowIndex, colIndex) {									//var rec = grid.getStore().getAt(rowIndex),									//action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');									//alertMsg(action, action + ' ' + rec.get('nombre'));								}							}						]					}, 					{                		xtype: 'actioncolumn',menuDisabled: true,sortable: true,width: 30,text: '',						items: [							{								getClass: function(v, meta, rec) { return rec.get('importancia'); },								getTip: function(v, meta, rec) {return rec.get('importancia'); },								handler: function(grid, rowIndex, colIndex) {									//var rec = grid.getStore().getAt(rowIndex),									//action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');									//alertMsg(action, action + ' ' + rec.get('nombre'));								}							}						]					}, 					{text: 'Expira el',width: 100,sortable : true,dataIndex: 'fechaexpira'},					{text: 'Creador',width: 100,sortable : true,dataIndex: 'idusuariogenero'},					{text: 'Responsable',width: 100,sortable : true,dataIndex: 'idusuarioresponsable'},					{text: 'Titulo ',width: 360,sortable : true,dataIndex: 'titulo', hidden:false}			];        			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormTarea',{id:'agregar_tarea',operacion:'insert',			main_grid:this}); 		var wind = Ext.create('widget.window', {			id:'utils-win-agregar-Tarea',			title: "Agregar Datos Tarea",			iconCls: 'agregar',			width: 750,			height: 570,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					});		forma_agregar.setMainWindows(wind);		wind.show();							},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe un registro para modificar.");     		return;     	}		if(rows.length >1){			mensajeAlert("Seleccione solamente un registro a modificar.");     		return;     	}		if(rows[0].get('tipo')!='SOLICITUD'){     		mensajeAlert("Solo puede cambiar el estatus a las tareas de tipo SOLICITUD");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormSolicitarDescuentoTarea',				{id:'agregar_tarea',operacion:'update', main_grid:this, showRespuesta:true}		); 		forma_agregar.updateCampos(rows[0]);				var wind =  Ext.create('widget.window', {			id:'utils-win-update-Tarea',			title: "Actualiza Datos Tarea",			iconCls: 'editar',			width: 750,			height: 570,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					});				forma_agregar.setMainWindows(wind);		wind.show();	},			eliminar:function(){			var rows =  this.getView().getSelectionModel().getSelection();			var myscope= this;	     	if(rows.length <=0){	     		mensajeAlert("Seleccione los registros que desea borrar.");	     		return;	     	}				      	 Ext.MessageBox.confirm('Confirmar','Desea eliminar los registros seleccionados?', function(id, text){		       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 		       		//Obtiene todos los registros seleccionados		       			var registros ='';		       			for (i=0;i<rows.length;i++){		       						       				registros = registros+  rows[i].get('idtarea')+ "|";		       			}		       			var conn = new Ext.data.Connection();		       			conn.request({		       				url: '../tareas/delete' ,		       				params:{ids:registros, estatus:0},		       				success: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeConfirm(obj.message)		       					myscope.loadInfo();		       				},		       				failure: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					alertMsg('Error',obj.message);		       				}		       			});		       		}		       	 },this);	},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		alertMsg('Verificar',"Debe un registro para consultar.");     		return;     	}		if(rows.length >1){     		alertMsg('Verificar',"Seleccione solamente un registro a consultar.");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormTarea',{id:'consultar_tarea',operacion:'ninguna', main_grid:this, showReadOnly:true}); 		forma_agregar.updateCampos(rows[0]);			Ext.create('widget.window', {			id:'utils-win-consulta-Tarea',			title: "Datos de la Tarea",			iconCls: 'detalles',			width: 750,			height: 570,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();		},	loadInfo:function(){		this.getView().getStore().load();		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();		},	getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	}	});