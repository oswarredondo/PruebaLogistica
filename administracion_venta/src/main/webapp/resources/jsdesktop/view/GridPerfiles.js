Ext.define('MyDesktop.view.GridPerfiles', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridPerfiles',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	    initComponent: function () {		this.myScope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}				var store_niveles_perfiles = Ext.create('MyDesktop.store.StoreTiposPerfiles',{});		store_niveles_perfiles.load();		this.store = Ext.create('MyDesktop.store.StorePerfil',{});		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.selType= 'checkboxmodel';        this.columns = [			{ xtype: 'actioncolumn',width: 50,                items: [					{						getClass: function(v, meta, rec) {          // Or return a class from a function							if (rec.get('estatus') == 'A') {								return 'activo' ;							} else {								return 'desactivado';							}						},						handler: function(grid, rowIndex, colIndex) {							var rec = storeperfiles.getAt(rowIndex);							//alert(rec.get('idperfil')+ ":" +rec.get('descripcion') );						}					}				]			},			 { text: 'ID',width: 150, sortable : true,dataIndex: 'idperfil'},            { text: 'Descipci�n', width: 400, sortable : true, dataIndex: 'descripcion_perfil'},            {text: 'Nivel',width: 150,sortable : true,dataIndex: 'nivel',				renderer: function (value, metaData, record, rowIndex, colIndex, store) {					var myrecord=undefined;					if (store_niveles_perfiles.getCount() > 0) {						store_niveles_perfiles.each(function(r) {							if (r.data['idtipo'] == value) {								myrecord = r;							}						});					}					if (myrecord!=undefined){						return myrecord.get('descripcion');					}					return value;				}			}            		];						this.callParent();    },	agregar:function(identidad,idorganizacion){		//Crea una forma de clientes para agregar los datos		if ((identidad==undefined) || (idorganizacion==undefined)){			alertMsg('Confirmaci�n' , 'Debe seleccionar entidad y organización.');			return;		} 		//TODO: Obtiener IdEntidad y IdOrganizacion y pasarlos como parametro		var forma_agregar = Ext.create('MyDesktop.view.FormPerfil',				{id:'agregar_perfil',height: 400, operacion:'insertPerfil',consecutivo:-1,			identidad:identidad,idorganizacion:idorganizacion, grid_consulta:this}); 		Ext.create('widget.window', {			id:'utils-win-agregar-perfil',			title: "Agregar Perfil",			width: 450,			height: 200,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(identidad,idorganizacion){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormPerfil',				{id:'modificar_perfil', operacion:'updatePerfil', consecutivo:rows[0].get('consecutivo'),			identidad:identidad,idorganizacion:idorganizacion, 			grid_consulta:this}); 				forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-perfil',			title: "Modificar Perfil",			width: 450,			height: 200,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},		activar:function(){				this.activarFunction(this,				this.getView().getSelectionModel().getSelection(),				'�Desea activar los registros seleccionados?','A');				},	desactivar:function(){		this.activarFunction(this,					this.getView().getSelectionModel().getSelection(),					'Desea desactivar los registros seleccionados?','B');	},		activarFunction:function(myscope,rows, mensaje, estatus){     	if(rows.length <=0){     		 Ext.MessageBox.alert('Verificar',"Seleccione los registros que desea procesar");     		return;     	}				 Ext.MessageBox.confirm('Confirmar',mensaje, function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('consecutivo')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../perfilopcion/cambiarestatus' ,	       				params:{ids:registros, estatus:estatus},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					//Ext.MessageBox.alert('Confirmaci�n',obj.message);	       					myscope.reload(rows[0].get('identidad'),rows[0].get('idorganizacion'));	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },myscope);					},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormConvenio',{id:'showdetails_convenio',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Detalles Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},	reload:function(identidad, idorganizacion){		this.getView().getStore().reload(				{					params:{identidad:identidad,idorganizacion:idorganizacion},					callback:function(r,options,success){						 if (r.length<=0){						 }					 }	  				});			}	});