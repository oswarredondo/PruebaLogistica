Ext.define('MyDesktop.view.GridCuentasClientes', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridCuentasClientes',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	identidad:undefined,	idorganizacion:undefined,    initComponent: function () {		this.myScope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}		this.store = Ext.create('MyDesktop.store.StoreClientes',{				autoLoad:false,				proxy: {			        type: 'ajax',			        url : '../catalogo/cuentasclientes/getDatos',			        reader: {		                 type: 'json',		                 successProperty: 'success',		                 root : 'proxiArray',		                 messageProperty: 'message',		                 totalProperty : 'totalCount',			        }			    },				baseParams:				{					identidad:this.identidad,					idorganizacion:this.idorganizacion				}				});		// 						this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.loadMask=true;                this.columns = [						{ xtype: 'actioncolumn',width: 50,sortable : true,						    items: [								{									getClass: function(v, meta, rec) {          // Or return a class from a function										if (rec.get('estatus') == 'true') {											return 'activo' ;										} else {											return 'desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										var rec = storeperfiles.getAt(rowIndex);									}								}							]						},                        {text     : 'Id',width:30,sortable : false,dataIndex: 'identificador', hidden:true},                        {text     : 'idcliente',flex     : 1,sortable : true,dataIndex: 'idcliente',hidden:true},                        {text     : 'Tipo Control',flex     : 1,sortable : false,dataIndex: 'tipofolio',                        	renderer:function(value, metaData, record, rowIndex, colIndex, store){								if (value==1){									return '<font color=#5B2C6F>CONVENIO</font>';								}								return '<font color=#A04000>FOLIOS</font>';															}	                        },						{text     : 'Num.Cliente',flex     : 1,sortable : true,dataIndex: 'numCliente'},						{text     : 'Razon Social',flex     : 1,sortable : false,dataIndex: 'razonSocial'},						{text     : 'R.F.C',flex     : 1,sortable : false,dataIndex: 'rfc'},						{text     : 'Atencion',flex     : 1,sortable : false,dataIndex: 'atencion'},						{text     : 'Calle',flex     : 1,sortable : false,dataIndex: 'calle'},						{text     : 'C.P',flex     : 1,sortable : true,dataIndex: 'cp'},						{text     : 'Colonia',flex     : 1,sortable : false,dataIndex: 'colonia'},						{text     : 'Municipio',flex     : 1,sortable : true,dataIndex: 'municipio'},						{text     : 'Telefono',flex     : 1,sortable : false,dataIndex: 'telefono'},						{text     : 'Email',flex     : 1,sortable : false,dataIndex: 'correoe'}			];			this.callParent();    },	agregar:function(entidad, organizacion){				//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormCuentaCliente',				{id:'agregar_cuenta_cliente',operacion:'insert',			identidad:entidad,idorganizacion:organizacion,}); 				Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Agregar Datos Cuenta",			iconCls: 'agregar',			width: 470,			height: 550,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(entidad, organizacion){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		if(rows[0].get('estatus') =='false'){     		Ext.Msg.alert('Verificar',"Registro esta dado de baja, no puede ser modificado")     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormCuentaCliente',{id:'modificar_cliente_cuenta',			operacion:'update',identificador:rows[0].get('identificador'), identidad:entidad, idorganizacion:organizacion}); 		forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-modificar-cuenta-cliente',			title: "Modificar Datos Cuenta",			width: 470,			height: 550,			iconCls: 'editar',			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},		showDetails:function(){				},	setProxyURL:function(url){		//Actualiza el URL para poder redireccionar el cargado de datos		this.getView().getStore().getProxy().url = url;		this.getView().getStore().load();	},	reload:function(idcliente){			},		buscar:function(tipobusqueda, patronbusqueda, identidad, idorganizacion){		this.getView().getStore().reload(					{						params:{tipobusqueda:tipobusqueda,							patronbusqueda:patronbusqueda,							identidad:identidad,idorganizacion:idorganizacion},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe informaciÃ³n con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});	},	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >1){			return rows[0];		}		return undefined;	},	tipomanejo:function(scope, tipo){		alert(tipo);	}		});