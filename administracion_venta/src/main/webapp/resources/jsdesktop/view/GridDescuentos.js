Ext.define('MyDesktop.view.GridDescuentos', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridDescuentos',    title: undefined,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,    initComponent: function () {		this.myScope = this;		//Los datos de Title y iconCls con configuradoa al momento de invocar el grid						//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}		var store_tipos_agrupamiento= Ext.create('MyDesktop.store.StoreAgrupamiento',{});		var store_tipos_descuentos = Ext.create('MyDesktop.store.StoreTiposDescuento',{});		var store_tipos_nivel_usuario = Ext.create('MyDesktop.store.StoreNivelUsuario',				{baseParams:{vertodos:true}});		//store_tipos_nivel_usuario.getProxy().setExtraParam("vertodos", true);		//Solo los nives disponibles 		store_tipos_nivel_usuario.load();		this.store = Ext.create('MyDesktop.store.StoreDescuentos',{});				this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;                this.columns = [						{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							width: 50,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'activo' ;										} else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'Activo' ;										} else {												return 'Desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										var rec = grid.getStore().getAt(rowIndex),										action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');										Ext.Msg.alert(action, action + ' ' + rec.get('nombre'));									}								}							]						},						/*{ text: 'Agrupamiento', width: 100, sortable : true, dataIndex: 'idagrupamiento',							renderer:function(value, metaData, record, rowIndex, colIndex, store){								var myrecord=undefined;								if (store_tipos_agrupamiento.getCount() > 0) {									store_tipos_agrupamiento.each(function(r) {										if (r.data['idagrupamiento'] == value) {											myrecord = r;										}									});								}								if (myrecord!=undefined){									return myrecord.get('descripcion');								}								return value;							}						},*/ 						{text     : 'Tipo',flex     : 1,sortable : true,dataIndex: 'tipo',							renderer: function (value, metaData, record, rowIndex, colIndex, store) {								var myrecord=undefined;								if (store_tipos_descuentos.getCount() > 0) {									store_tipos_descuentos.each(function(r) {										if (r.data['identificador'] == value) {											myrecord = r;										}									});								}								if (myrecord!=undefined){									return myrecord.get('descripcion');								}								return value;							}						},						{text     : 'Nombre',flex     : 1,sortable : true,dataIndex: 'nombre'},						{text     : 'Descripcion',flex     : 1,sortable : true,dataIndex: 'descripcion'},						{text     : 'Fecha Alta',flex     : 1,sortable : true,dataIndex: 'fechaalta'},						{text     : 'Fec. Activacion',flex     : 1,sortable : true,dataIndex: 'fechaactivacion'},						{text     : 'Fecha Termino',flex     : 1,sortable : true,dataIndex: 'fechatermino'},						//{text     : 'Descuento Fijo',flex     : 1,sortable : true,dataIndex: 'descuentofijo'},						{text     : '% Descuento',flex     : 1,sortable : true,dataIndex: 'porcentaje'},						{text     : 'Nivel',flex     : 1,sortable : true,dataIndex: 'nivel',							renderer: function (value, metaData, record, rowIndex, colIndex, store) {								/*if (record.get('tipo') == 4){									return 'GLOBAL';								}*/								var myrecord=undefined;								if (store_tipos_nivel_usuario.getCount() > 0) {									store_tipos_nivel_usuario.each(function(r) {										//alert("r.data['identificador']:  " + r.data['identificador'] + ",value: "+value);										if (r.data['identificador'] == value) {											myrecord = r;										}									});								}								if (myrecord!=undefined){									return myrecord.get('descripcion');								}								return value;							}						},															];			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormDescuento',{id:'agregar_descuento',operacion:'insert'}); 		Ext.create('widget.window', {			id:'utils-win-agregar-descuento',			title: "Agregar Datos descuento",			width: 450,			height: 610,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		if(rows[0].get('estatus') !=1){     		Ext.Msg.alert('Verificar',"Registro esta dado de baja, no puede ser modificado.");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormDescuento',{id:'modificar_datos_descuento',operacion:'update'}); 		forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-modificar-descuento',			title: "Modificar Datos descuento",			width: 450,			height: 610,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},		showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		if (rows[0].get('estatus')=='0'){			Ext.Msg.alert('Error',"Registro esta dado de baja no puede modificarlo.");     		return;		}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormClientes',{id:'showdetails_cliente',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-descuento',			title: "Detalles Datos descuento",			width: 600,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}				if(!confirm('Desea desactivar los clientes seleccionados?')){     		return;     	}		alert('Clientes desactivados');	},	activar:function(){		var myscope= this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.MessageBox.alert('Verificar',"Seleccione los registros que desea activar");     		return;     	}				 Ext.MessageBox.confirm('Confirmar','Desea activar los descuentos seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('iddescuento')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../descuento/activar' ,	       				params:{ids:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       				 Ext.MessageBox.alert('Confirmación',obj.message);	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					},	desactivar:function(){		var rows =  this.getView().getSelectionModel().getSelection();		var myscope= this;     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea desactivar");     		return;     	}		     	 Ext.MessageBox.confirm('Confirmar','Desea desactivar los descuentos seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('iddescuento')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../descuento/desactivar' ,	       				params:{ids:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Confirmaci�n',obj.message);	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					},	loadInfo:function(){		this.getView().getStore().load();		},	buscar:function(tipobusqueda,fechainicial,fechafinal,patron){		this.getView().getStore().reload(					{						params:{tipobusqueda:tipobusqueda,fechainicial:fechainicial,fechafinal:fechafinal,patron:patron},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		},	getRegistro:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >0){			return rows[0];		}		return undefined;	}	});