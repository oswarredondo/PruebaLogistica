Ext.define('MyDesktop.view.GridSeguros', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridSeguros',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	//id:undefined,	isConsulta:false,	myScope:undefined,	idtarifa:undefined,    initComponent: function () {		this.myScope = this;		this.store = Ext.create('MyDesktop.store.StoreSeguros');		this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		        this.columns = [					{text     : 'Nombre Del Seguro',width: 400,sortable : false,dataIndex: 'ciaseguro',}			];			this.callParent();    },        buscar:function(){		this.getView().getStore().reload(					{						params:{idserviciotarifa:this.idserviciotarifa},						callback:function(r,options,success){							 if (r.length<=0){								 /*Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe informaciï¿½n con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  */																 }						 }	  					});		},	agregar:function(){		  var rec = new MyDesktop.models.ModeloTarifas({			  idserviciotarifa:0,			 // idserviciotarifazona:this.idserviciotarifazona,			  idtarifapeso:0,			  idserviciotarifazona:0,			  idtarifapeso:0,			  idrangoenvios:0,			  idtarifa:this.idtarifa,			  pesoinicial:0,			  pesofinal:0,			  estatus:1 ,			  pesoamparado:0,			  idrangoinicial:0,			  idrangofinal:0,			  kminicial:1,			  kmfinal:1,			  precio:1.0,			  preciokgsp:0,			  sobrepeso:0,			  idservicio:'',			  idformapago:'',			  nombre:'',			  descripcion:'',			  zona:'',			  es_visible_pdv:'0'	        }), edit = this.editing;		  var renglon = this.store.count();	      edit.cancelEdit();	      this.store.insert(renglon, rec);	        edit.startEditByPosition({	            row: renglon,	            column: 1	      });	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}	},	eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}		var myscope =this;    	 Ext.MessageBox.confirm('Confirmacion', 'Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			       			var store = this.getView().getStore();       			store.remove(rows);  //step 4       			var scope_this = this;       			store.sync({        			    success: function (proxy, operations) {       			    	scope_this.commitInfo();       			    	myscope.buscar();       			    }, failure: function (proxy, operations) {       			    	 if (proxy.exceptions != undefined){       			    		 if (proxy.exceptions.length>0){       			    			 Ext.Msg.show(    	                                 {    	                                	 title: 'Warning',    	                                     msg: proxy.exceptions[0].error,    	                                     buttons: Ext.Msg.OK,    	                                     icon: Ext.Msg.WARNING    	                                 });       			    		 	}       			    		 }       			        store.rejectChanges();       			    }       			});       			       			//this.getView().getStore().remove(rows);  //step 4       			//this.commitInfo();       		}       	 },this);	},	setProxyURL:function(url){		//Actualiza el URL para poder redireccionar el cargado de datos		this.getView().getStore().getProxy().url = url;		this.getView().getStore().load();	},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		updateSyncStore(this,this.getView().getStore(), true);		/*this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.buscar();*/		},	showDetails:function(){				var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro que desea visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro.");     		return;     	}		//Crea una forma de clientes para agregar los datos		var grid_rangos_peso_tarifa_servicio= Ext.create('MyDesktop.view.GridTarifaPeso',				{					id:'showdetails_tarifa_rango_peso',					isConsulta:false,					idrangoenvios:rows[0].get('idrangoenvios'),					idtarifa:rows[0].get('idtarifa'),					idservicio:rows[0].get('idservicio'),					idformapago:rows[0].get('idformapago')				}		); 		grid_rangos_peso_tarifa_servicio.buscar();		//forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa-rango_peso',			title: "Detalles Rangos Peso Tarifa",			width: 750,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_rangos_peso_tarifa_servicio		}).show();	},		getRegistro:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >0){			return rows[0];		}		return undefined;	}	});