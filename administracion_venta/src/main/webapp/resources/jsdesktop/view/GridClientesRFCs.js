Ext.define('MyDesktop.view.GridClientesRFCs', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'     ],    stateful: true,    collapsible: false,    multiSelect: true,   // title: 'Clientes',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },   	id:undefined,	isConsulta:false,	myScope:undefined,	combo_tipos_busqueda:undefined,	grid_direcciones:undefined,	grid_contactos:undefined,    initComponent: function () {		this.myScope = this;		//this.iconCls='clientes';		//Si el grid no es de consulta entonces muestra la barra para administrar los datos				if (!this.isConsulta){			 this.bbar=[			            { text: 'Desactivar',iconCls: 'desactivado',handler:this.desactivar,scope:this.myScope },			            { text: 'Activar',iconCls: 'activo',handler:this.activar,scope:this.myScope },            	  	    { text: 'Bloquear', iconCls: 'password_blue',handler:this.bloquear,scope:this.myScope },            	  	  { text: 'Desbloquear', iconCls: 'unlock_blue',handler:this.desbloquear,scope:this.myScope },  					  			    	 			            {xtype:'tbfill'},						{ text: 'Agregar',iconCls: 'agregar',handler:this.agregar, scope:this.myScope },						{xtype:'tbseparator'},						{ text: 'Modificar',iconCls: 'editar',handler:this.modificar,scope:this.myScope },										];		}		this.combo_tipos_busqueda= Ext.create('Ext.form.ComboBox', {			fieldLabel: '',			disabled: false,			editable:false,			forceSelection:true,			store: Ext.create('MyDesktop.store.StoreTiposBusquedaClientes',{}) ,			queryMode: 'local',			emptyText: 'Seleccione Tipo',			displayField: 'descripcion',			valueField: 'idtipo'		});		this.tbar=[		       	{xtype: 'label', text:'Buscar por:'	},				this.combo_tipos_busqueda,				{xtype: 'label', text:'Patr�n:'	},				{xtype: 'myUpperCaseTextField', id:'idpatronCliente_'+ this.id, allowBlank: false},				{ iconCls: 'buscar_blue',handler:this.buscar, scope:this},				{xtype: 'tbfill'}   							];					this.store = Ext.create('MyDesktop.store.StoreClientesRFCs',{});		this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.loadMask=true;                this.columns = [                        {						menuDisabled: true,						sortable: false,						xtype: 'actioncolumn',						width:30,						items: [						{							getClass: function(v, meta, rec) {								if (rec.get('estatus_int') == 1) {									return 'activo' ;								}if (rec.get('estatus_int') == 3) {									return 'clientebloqueado';								}else {									return 'desactivado';								}							},							getTip: function(v, meta, rec) {								if (rec.get('estatus_int') == 1) {									return 'Activo' ;								}if (rec.get('estatus_int') == 3) {									return 'Bloqueado';								} else {									return 'Desactivado';								}							},							handler: function(grid, rowIndex, colIndex) {								var rec = grid.getStore().getAt(rowIndex),								action = (rec.get('estatus_int') ==1 ? 'Activo' : 'Desactivado');												mensajeConfirm( action + ' ' + rec.get('razonSocial'));							}						}						]					},						{text     : 'Rotula',width:70,sortable : true,dataIndex: 'rotula'},						{text     : 'R.F.C',width:130,sortable : true,dataIndex: 'rfc'},                        {text     : '#Cliente',width:70,sortable : true,dataIndex: 'numCliente'},                        {text     : 'Raz�n Soc.',width:150,sortable : true,dataIndex: 'razonSocial'},						{text     : 'Atenci�n',width:150,sortable : true,dataIndex: 'atencion'},						 {text     : 'Calle',width:150,sortable : true,dataIndex: 'calle'},						 {text     : 'Num. Int.',width:80,sortable : true,dataIndex: 'numinterior'},						 {text     : 'Num. Ext.',width:80,sortable : true,dataIndex: 'numexterior'},						 {text     : 'Colonia',width:150,sortable : true,dataIndex: 'colonia'}, 						 {text     : 'Mun/Del',width:150,sortable : true,dataIndex: 'municipio'}, 						{text     : 'C.P',width:70,sortable : true,dataIndex: 'cp'},						{text     : 'Estado',width:100,sortable : true,dataIndex: 'estado'},						{text     : 'Tel.',width:90,sortable : true,dataIndex: 'telefono'},						{text     : 'Ext.',width:90,sortable : true,dataIndex: 'extencion'},						{text     : 'Correo-e.',width:100,sortable : true,dataIndex: 'correoe'}															];		   			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormDireccionClienteRFCs',				{id:'agregar_cliente',operacion:'insert', main_grid:this}); 		forma_agregar		var main_window = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Agregar Datos Cliente",			iconCls: 'agregar',			width: 520,			height: 530,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					});		main_window.show();		forma_agregar.setMainWindow(main_window);	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a modificar");     		return;     	}		for (i=0;i<rows.length;i++){     		if (rows[i].get('estatus')==3){     			mensajeAlert("Registro "+rows[i].get('razonSocial')+ " esta bloqueado, operación inválida.");         		return;     		}						}				//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormDireccionClienteRFCs',{id:'modificar_cliente',			operacion:'update',idcliente:rows[0].get('idAutonumerico'), main_grid:this}); 		forma_modificar.updateCampos(rows[0]);		var main_window = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Modificar Datos Cliente",			width: 520,			iconCls: 'editar',			height: 530,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					});		forma_modificar.setMainWindow(main_window);		forma_modificar.setIdCliente(rows[0].get('idAutonumerico'));		main_window.show();			},			eliminar:function(){			}, 			setProxyURL:function(url){		//Actualiza el URL para poder redireccionar el cargado de datos		this.getView().getStore().getProxy().url = url;		this.getView().getStore().load();	},	reload:function(idcliente){			},		buscar:function(tipobusqueda, patronbusqueda, direccionesatencionfacturacion){				//Busca los clientes de acuerdo al patrion seleccionado				var tipobusqueda = (this.combo_tipos_busqueda.getValue()!=undefined &&		Ext.util.Format.trim(this.combo_tipos_busqueda.getValue()) !='')?Ext.util.Format.trim(this.combo_tipos_busqueda.getValue()):'';				var patronbusqueda = Ext.util.Format.trim(Ext.getCmp('idpatronCliente_'+ this.id).getValue());		if (tipobusqueda==''){			tipobusqueda='00';		}		if (tipobusqueda!='00'){			if (patronbusqueda==''){				mensajeAlert('Indique coincidencia a buscar.');				return;			}		}				//Limpia los grids e inicia la busqueda		if (this.grid_direcciones!=undefined){			this.grid_direcciones.reload(-1);		}		if (this.grid_contactos!=undefined){			this.grid_contactos.reload(-1);		}				//this.grid_clientes.buscar(tipobusqueda,patronbusqueda);				this.getView().getStore().reload(					{						params:{								tipobusqueda:tipobusqueda,								patronbusqueda:patronbusqueda,								direccionesatencionfacturacion:direccionesatencionfacturacion==undefined?'':true							},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});	},	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >0){			return rows[0];		}		return undefined;	},	bloquear:function(){	    	this.cambiaEstatus(3);	},	desbloquear:function(){	  	this.cambiaEstatus(1);	},	    	cambiaEstatus:function(estatus){		var myscope= this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 mensajeAlert("Seleccione los registros que desea afectar.");     		return;     	}		var mensaje = 'Desea bloquear los clientes seleccionados?';		if (estatus==1){			mensaje = 'Desea reactivar los clientes seleccionados?';		}		 Ext.MessageBox.confirm('Confirmar',mensaje, function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idAutonumerico')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/clientesrfc/bloquear' ,	       				params:{idsclientes:registros, estatus:estatus},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       				// Ext.MessageBox.alert('Confirmaci�n',obj.message);	       						       					myscope.buscar('00', '');	       						       						       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);	},	activar:function(){		var myscope= this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Seleccione los registros que desea activar");     		return;     	}		     	for (i=0;i<rows.length;i++){     		if (rows[i].get('estatus')==3){     			mensajeAlert("Registro "+rows[i].get('razonSocial')+ " esta bloqueado, operaci�n inválida.");         		return;     		}						}     			 Ext.MessageBox.confirm('Confirmar','Desea activar los clientes seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idAutonumerico')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/clientesrfc/activar' ,	       				params:{idsclientes:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeConfirm(obj.message);	       						       					myscope.buscar('00', '');	       						       						       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					},	desactivar:function(){		var rows =  this.getView().getSelectionModel().getSelection();		var myscope= this;     	if(rows.length <=0){     		mensajeAlert("Seleccione los registros que desea desactivar");     		return;     	}		    	for (i=0;i<rows.length;i++){     		if (rows[i].get('estatus')==3){     			mensajeAlert("Registro "+rows[i].get('razonSocial')+ " esta bloqueado, operaci�n inválida.");         		return;     		}						}    	     	 Ext.MessageBox.confirm('Confirmar','Desea desactivar los clientes seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idAutonumerico')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/clientesrfc/desactivar' ,	       				params:{idsclientes:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeConfirm(obj.message);	       						       					myscope.buscar('00', '');	       						       						       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					}	});