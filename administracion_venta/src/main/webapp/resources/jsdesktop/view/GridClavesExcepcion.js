Ext.define('MyDesktop.view.GridClavesExcepcion', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridClavesExcepcion',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,    initComponent: function () {		this.myScope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){			this.tbar=[			           {xtype: 'tbfill'},					   { text: 'Mostrar Detalles',iconCls: 'detalles',handler:this.filtrar,handler:this.showDetails, scope:this.myScope },						{xtype:'tbseparator'},						{ text: 'Agregar',iconCls: 'agregar',handler:this.filtrar,handler:this.agregar, scope:this.myScope },						{ text: 'Modificar',iconCls: 'editar',handler:this.modificar,scope:this.myScope },						{ text: 'Desactivar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope }													];    	}		this.store = Ext.create('MyDesktop.store.StoreClavesExcepcion',{});		this.selType= 'checkboxmodel';        this.columns = [												{text     : 'Clave',width: 80,sortable : true,dataIndex: 'clave'},						{text     : 'Descripcion',width: 250,sortable : true,dataIndex: 'descripcion'}									];			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormConvenio',{id:'agregar_convenio',height: 400}); 		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Agregar Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormConvenio',{id:'modificar_convenio'}); 		forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Modificar Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}				if(!confirm('Desea desactivar los clientes seleccionados?')){     		return;     	}		alert('Clientes desactivados');	},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormConvenio',{id:'showdetails_convenio',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Detalles Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows[0];		}		return undefined;	},	getRows:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows;		}		return undefined;	}	});