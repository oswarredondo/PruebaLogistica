Ext.define('MyDesktop.view.GridOrdenServicio', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridDescuentos',    title: undefined,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,    initComponent: function () {		this.myScope = this;		//Los datos de Title y iconCls con configuradoa al momento de invocar el grid						//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}				this.store = Ext.create('MyDesktop.store.StoreOrdenServicio',{});		this.selType= 'checkboxmodel';		                this.columns = [						{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							width: 50,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'activo' ;										} else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'Activo' ;										} else {												return 'Desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										var rec = grid.getStore().getAt(rowIndex),										action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');										Ext.Msg.alert(action, action + ' ' + rec.get('nombre'));									}								}							]						},						{text     : 'Nombre',flex     : 1,sortable : false,dataIndex: 'nombre'},						{text     : 'Descripcion',flex     : 1,sortable : false,dataIndex: 'descripcion'},						{text     : 'Modalidad',flex     : 1,sortable : false,dataIndex: 'porcentajedescuento'},						{text     : '% Descuento',flex     : 1,sortable : false,dataIndex: 'colonia'}									];			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormClientes',{id:'agregar_cliente'}); 		Ext.create('widget.window', {			id:'utils-win-agregar-descuento',			title: "Agregar Datos descuento",			width: 600,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormClientes',{id:'modificar_cliente'}); 		forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-descuento',			title: "Modificar Datos descuento",			width: 600,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},		showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormClientes',{id:'showdetails_cliente',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-descuento',			title: "Detalles Datos descuento",			width: 600,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}				if(!confirm('Desea desactivar los clientes seleccionados?')){     		return;     	}		alert('Clientes desactivados');	}	});