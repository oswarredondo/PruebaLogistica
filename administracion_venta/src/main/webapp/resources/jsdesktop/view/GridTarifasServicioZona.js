Ext.define('MyDesktop.view.GridTarifasServicioZona', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridTarifasServicioZona',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	//id:undefined,	isConsulta:false,	myScope:undefined,	idserviciotarifa:undefined,    initComponent: function () {		this.myScope = this;				//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){			 this.editing = Ext.create('Ext.grid.plugin.CellEditing',{clicksToEdit: 1});			 this.plugins = this.editing;			 			 this.tbar=[				  		{ text: 'Salvar Cambios',iconCls: 'reload_blue',handler:this.saveInfo, scope:this.myScope },						];			 			 			 this.bbar=[						//{ text: 'Rango Precio',iconCls: 'detalles',handler:this.showDetails,scope:this.myScope },						{xtype: 'tbfill'},						{xtype:'tbseparator'},						{ text: 'Agregar',iconCls: 'agregar',handler:this.filtrar,handler:this.agregar, scope:this.myScope },						{ text: 'Borrar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope }					];		}				this.store = Ext.create('MyDesktop.store.StoreTarifaServicioZona',{baseParams:{idserviciotarifa:this.idserviciotarifa}});		this.store.getProxy().setExtraParam("idserviciotarifa", this.idserviciotarifa);				this.selType= 'checkboxmodel';        this.columns = [						{text     : 'Zona',width: 70,sortable : false,dataIndex: 'zona',							field: {								xtype: 'myUpperCaseTextField',			                    maxLength:5,			                    minLength:1,			                    required:true,			                    enforceMaxLength:true			                    			                    							}									},						{text     : 'KM. Inicial',width: 95,sortable : false,dataIndex: 'kminicial',							field: {								xtype: 'numberfield',								value: 1,								maxValue: 999999,			                    required:true,			                    minValue: 1,			                    decimalPrecision:0							}									},						{text     : 'KM. Final',width: 95,sortable : false,dataIndex: 'kmfinal',							field: {								xtype: 'numberfield',								value: 1,								maxValue: 999999,			                    required:true,			                    minValue: 1,			                    decimalPrecision:0							}									},						{text     : 'Precio',width: 95,sortable : false,dataIndex: 'precio',							align: 'right',renderer: 'usMoney',							field: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',														        required:true,						        minValue: 1.0						       							}									},						{text     : 'Precio Kg SP',width: 95,sortable : false,dataIndex: 'preciokgsp',							align: 'right',renderer: 'usMoney',							field: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',														        required:true,						        minValue: 1.0						       							}									},						{text     : 'Precio Kg SP',width: 95,sortable : false,dataIndex: 'preciokgsp',							align: 'right',renderer: 'usMoney',							field: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',														        required:true,						        minValue: 1.0						       							}									}						/* CAMBIO CITAS EVIDENCIAS MANIOBRAS						{text     : 'Citas',width: 95,sortable : false,dataIndex: 'preciocitas',							align: 'center',renderer: 'usMoney',							field: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',														        required:true,						        minValue: 1.0						       							}									},						{text     : 'Evidencia',width: 95,sortable : false,dataIndex: 'precioevidencia',							align: 'center',renderer: 'usMoney',							field: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',														        required:true,						        minValue: 1.0						       							}									}						 FIN CAMBIO CITAS EVIDENCIAS MANIOBRAS*/		];        		this.callParent();    },    buscar:function(){		this.getView().getStore().reload(					{						params:{idserviciotarifa:this.idserviciotarifa},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe informaciÃ³n con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		},	agregar:function(){			  var rec = new MyDesktop.models.ModeloTarifas({			  idserviciotarifa:this.idserviciotarifa,			  idserviciotarifazona:0,			  idrangoenvios:0,			  idtarifapeso:0,			  idtarifa:0,			  pesoinicial:0,			  pesofinal:0,			  estatus:1 ,			  pesoamparado:0,			  idrangoinicial:0,			  idrangofinal:0,			  kminicial:1,			  kmfinal:1,			  precio:0,			  preciokgsp:0,			  sobrepeso:0,			  idservicio:'',			  idformapago:'',			  nombre:'',			  descripcion:'',			  zona:'',			  es_visible_pdv:'0'	        }), edit = this.editing;	      edit.cancelEdit();	      var renglon = this.store.count();	      this.store.insert(renglon, rec);	        edit.startEditByPosition({	            row: renglon,	            column: 1	      });	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		},		showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro que desea visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro.");     		return;     	}		var grid_rangos_tarifa_servicio_zona_envios= Ext.create('MyDesktop.view.GridTarifasServicioZonaEnvios',				{					id:'showdetails_tarifa_servicio_zona_envios',					isConsulta:false,					idserviciotarifazona:rows[0].get('idserviciotarifazona')		}); 				grid_rangos_tarifa_servicio_zona_envios.buscar();		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa-servicio-zona-envios',			title: "Rangos Envios Precios",			width: 550,			height: 400,			modal:true,			plain: true,			headerPosition: 'left',			layout: 'fit',			items: grid_rangos_tarifa_servicio_zona_envios					}).show();	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}    	var myscope =this;    	 Ext.MessageBox.confirm('Confirmacion', 'Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			var store = this.getView().getStore();       			store.remove(rows);  //step 4       			var scope_this = this;       			store.sync({        			    success: function (proxy, operations) {       			    	scope_this.commitInfo();       			    	myscope.buscar();       			    }, failure: function (proxy, operations) {       			    	 if (proxy.exceptions != undefined){       			    		 if (proxy.exceptions.length>0){       			    			 Ext.Msg.show(    	                                 {    	                                	 title: 'Warning',    	                                     msg: proxy.exceptions[0].error,    	                                     buttons: Ext.Msg.OK,    	                                     icon: Ext.Msg.WARNING    	                                 });       			    		 	}       			    		 }       			        store.rejectChanges();       			    }       			});       		}       	 },this);	},	setProxyURL:function(url){		//Actualiza el URL para poder redireccionar el cargado de datos		this.getView().getStore().getProxy().url = url;		this.getView().getStore().load();	},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		updateSyncStore(this,this.getView().getStore(), true);		/*this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.buscar();*/		}	});