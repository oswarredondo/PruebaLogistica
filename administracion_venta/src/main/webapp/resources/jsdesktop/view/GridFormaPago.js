Ext.define('MyDesktop.view.GridFormaPago', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridFormaPago',    //title: 'Convenios',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,    initComponent: function () {		this.myScope = this;		//this.iconCls='contratos_blue';		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){			 this.editing = Ext.create('Ext.grid.plugin.CellEditing');			 this.plugins = this.editing;		}		this.tbar=[			{ text: 'Salvar Cambios',iconCls: 'reload_blue',handler:this.saveInfo, scope:this.myScope },								{xtype: 'tbfill'},			{ text: 'Agregar',iconCls: 'agregar',handler:this.agregar, scope:this.myScope },			{ text: 'Borrar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope }								];		this.store = Ext.create('MyDesktop.store.StoreFormaPago',{});		this.selType= 'checkboxmodel';        this.columns = [						/*{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							width: 50,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'activo' ;										} else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'Activo' ;										} else {												return 'Desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										var rec = grid.getStore().getAt(rowIndex),										action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');										Ext.Msg.alert(action, action + ' ' + rec.get('nombre'));									}								}							]						},*/						{text     : 'Clave',flex     : 1,sortable : false,dataIndex: 'clave',							field: {								xtype: 'myUpperCaseTextField',			                    maxLength:2,			                    minLength:1,			                    required:true,			                    enforceMaxLength:true			                    			                    							}								},						{text     : 'Descripcion',flex     : 1,sortable : false,dataIndex: 'descripcion',							field: {								xtype: 'myUpperCaseTextField',			                    maxLength:30,			                    minLength:1,			                    required:true,			                    enforceMaxLength:true			                    			                    							}								}									];			this.callParent();    },	agregar:function(){		  var rec = new MyDesktop.models.ModeloFormaPago({			  identificador: 0,			  clave:'',			  descripcion: ''	        }), edit = this.editing;	      edit.cancelEdit();	      this.store.insert(0, rec);	        edit.startEditByPosition({	            row: 0,	            column: 1	      });		},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}		    	 Ext.MessageBox.confirm('Confirmacion', 'Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			this.getView().getStore().remove(rows);  //step 4       			this.commitInfo();       		}       	 },this);	},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}	},	loadInfo:function(){		this.getView().getStore().load();		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();		}	});