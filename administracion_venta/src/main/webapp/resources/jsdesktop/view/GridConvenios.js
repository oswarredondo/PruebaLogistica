Ext.define('MyDesktop.view.GridConvenios', {	    extend: 'Ext.grid.Panel',	    requires: [	               'Ext.grid.column.Action',	               //'Ext.ux.grid.FiltersFeature' 	               'Ext.ux.grid.FiltersFeature'	            ],	    stateful: true,	    collapsible: false,	    multiSelect: true,	    stateId: 'stateGridConvenios',	   // title: 'Cotizaciones',	    viewConfig: {	        stripeRows: true,	        enableTextSelection: true	    },		id:undefined,		isConsulta:false,		myScope:undefined,		scope_view_principal:undefined,	    initComponent: function () {	        // for this demo configure local and remote urls for demo purposes	        var url = {	           // local:  'grid-filter.json',  // static data file	            remote: '../convenio/getDatos'	        };	        	  	  	// configure whether filter query is encoded or not (initially)    	    var encode = false;    	    // configure whether filtering is performed locally or remotely (initially)    	    var local = true; 	    	var filters = {	    		        ftype: 'filters',	    		        // encode and local configuration options defined previously for easier reuse	    		        encode: encode, // json encode the filter query	    		        local: local,   // defaults to false (remote filtering)	    		        // Filters are most naturally placed in the column definition, but can also be	    		        // added here.	    		        filters: [{	    		            type: 'boolean',	    		            dataIndex: 'visible'	    		        }]	    		    };	    	 	    	    				this.myScope = this;			//this.iconCls='contratos_blue';			//Si el grid no es de consulta entonces muestra la barra para administrar los datos			if (!this.isConsulta){							}			//Cambia el URL para que se busque sobre el controller del Convenio			this.store = Ext.create('MyDesktop.store.StoreConvenios',{proxy: {		        type: 'ajax',		        api: {		            read: '../convenio/getDatos'		        },		        reader: {		                 type: 'json',		                 successProperty: 'success',		                 root : 'proxiArray',		                 messageProperty: 'message',		                 totalProperty : 'totalCount',		        }		      }			});						this.features= [filters];			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;	        this.columns = [							{								menuDisabled: true,								sortable: false,								xtype: 'actioncolumn',								width: 30,								items: [									{										getClass: function(v, meta, rec) {											return 'estatus' + rec.get('estatus') ;										},										getTip: function(v, meta, rec) {											if (rec.get('estatus') == ESTATUS_ACTIVA) {												return 'Activo' ;											} if (rec.get('estatus') == ESTATUS_EN_DOCUMENTACION){												return 'En Documentaci�n';											} if (rec.get('estatus') == ESTATUS_REVISION){												return 'En Revisi�n';											} if (rec.get('estatus') == ESTATUS_AUTORIZADO){												return 'Convenio autorizado';												} if (rec.get('estatus') >= ESTATUS_CERRADO){												return 'Cerrado:['+rec.get('tipocierre')+"] " + rec.get('descripciontipocierre') ;											}else {													return 'desactivado';											}																					},										handler: function(grid, rowIndex, colIndex) {										}									}								]							},							{text     : 'Id',width: 40,sortable : true,dataIndex: 'idconvenio', filterable: true},							{text     : 'Creado por',flex     : 1,sortable : true,dataIndex: 'login'								/*, filter: {						                type: 'string'						                // specify disabled to disable the filter menu						                //, disabled: true						            }*/														},							//{text     : 'Ref.B�squeda',width: 150,sortable : true,dataIndex: 'nombre'},							{text     : 'Lista Precios',width: 90,sortable : true,dataIndex: 'tipo_precios',								renderer:function(value, metaData, record, rowIndex, colIndex, store){									if (value==1){										return '<font color=#0404B4>TODA</font>';									}									return '';								}							},														{text     : 'Fecha',width: 100,sortable : true,dataIndex: 'fechadocumento'},							{text     : 'Cliente',width: 150,sortable : true,dataIndex: 'razonsocial_cte'},							{text     : 'Atenci�n',width: 150,sortable : true,dataIndex: 'contacto_cte'},							{text     : 'Direcci�n',width: 200,sortable : true,dataIndex: 'calle_cte', 								renderer:function(value, metaData, record, rowIndex, colIndex, store){									metaData.attr = 'style="white-space:normal"';									var direccion = record.get('calle_cte')+ ', Col.'+  record.get('colonia_cte')+', C.P.' + 									record.get('cp_cte') +', Mun/Del.' + record.get('municipio_cte');									return direccion																}							},							{text     : 'Tarifa',width: 200,sortable : true,dataIndex: 'descripcionTarifarango'},							{text     : 'Descuento',width: 200,sortable : true,dataIndex: 'descripcionDescuento'},							{text     : 'Rango envios',width: 200,sortable : true,dataIndex: 'rangoenvios'},							/* DATOS SEGURO */														{text     : 'ASEGURA?',width: 100,sortable : true,dataIndex: 'asegura',								renderer:function(value, metaData, record, rowIndex, colIndex, store){									if (value==1){										return '<font color=##4CFF33>SI</font>';									}									return '<font color=#FF5733>NO</font>';								}							},							{text     : 'Nombre Seguro',width: 200,sortable : true,dataIndex: 'nombre_seguro'},							{text     : '%',width: 100,sortable : true,dataIndex: 'porcentaje_seguro'}				];				this.callParent();	    },		agregar:function(){			//Crea una forma de clientes para agregar los datos			var forma_agregar = Ext.create('MyDesktop.view.FormCotizacion',{id:'agregar_cotizacion_pre',operacion:'insert'}); 			Ext.create('widget.window', {				id:'utils-win-cotizacion-agregar',				title: "Agregar Datos Cotización",				width: 500,				height: 650,				modal:true,				plain: true,				headerPosition: 'right',				layout: 'fit',				items: forma_agregar							}).show();		},		modificar:function(scope_view_pricipal){			var rows =  this.getView().getSelectionModel().getSelection();	     	if(rows.length <=0){	     		alertMsg('Verificar',"Debe un registro para modificar.");	     		return;	     	}			if(rows.length >1){				mensajeAlert("Seleccione solamente un registro a modificar.");	     		return;	     	}			if(rows[0].get('estatus') ==ESTATUS_INACTIVA){				mensajeAlert("Registro dado de baja, operación inválida");	     		return;	     	}			if(rows[0].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){				mensajeAlert("Registro convertido a un convenio, operación inválida");	     		return;	     	}			if(rows[0].get('estatus') ==ESTATUS_AUTORIZADO){				mensajeAlert("Cotizaci�n ya autorizada, operación inválida");	     		return;	     	}			//Crea una forma de clientes para agregar los datos			var forma_modificar = Ext.create('MyDesktop.view.FormCotizacion',					{id:'modificar_cotizacion_pre',operacion:'update',				scope_view_pricipal:scope_view_pricipal}); 			forma_modificar.updateCampos(rows[0]);			Ext.create('widget.window', {				id:'utils-win-agregar-cliente',				title: "Modificar Datos Cotizaci�n",				width: 500,				height: 650,				modal:true,				plain: true,				headerPosition: 'right',				layout: 'fit',				items: forma_modificar							}).show();		},						eliminar:function(){			var rows =  this.getView().getSelectionModel().getSelection();	     	if(rows.length <=0){	     		mensajeAlert("Seleccione los registros que desea eliminar");	     		return;	     	}						if(!confirm('Desea desactivar los clientes seleccionados?')){	     		return;	     	}				},		showDetails:function(){					var rows =  this.getView().getSelectionModel().getSelection();	     	if(rows.length <=0){	     		mensajeAlert("Debe un registro para visualizar");	     		return;	     	}			if(rows.length >1){				mensajeAlert("Seleccione solamente un registro a visualizar");	     		return;	     	}			//Verifica si el registro si la lista de precios es toda la lista de precios NO DEBE PERMITIR 			//Capturar detalle			if(rows[0].get('tipo_precios')==1){				mensajeAlert("Cotizaci�n configurada con toda la lista de precios, no es permitido el detalle.");	     		return;	     	}			//Crea una forma de clientes para agregar los datos			var forma_showdetails = Ext.create('MyDesktop.view.FormConvenio',{				id:'showdetails_convenio',showReadOnly:true}); 			forma_showdetails.updateFieldReadOnly(rows[0]);			Ext.create('widget.window', {				id:'utils-win-agregar-cliente',				title: "Detalles Datos Convenio",				width: 600,				height: 400,				modal:true,				plain: true,				headerPosition: 'right',				layout: 'fit',				items: forma_showdetails							}).show();		},		autorizar:function(scope_view_principal){			var myscope= this;			var rows =  this.getView().getSelectionModel().getSelection();			if (!myscope.checkSelectedRecord(rows)){				return;			}	     				    	if(rows[0].get('numcliente') ==''){	     		mensajeAlert("Registro " + rows[0].get('nombre') +	     				" no tiene n�mero de cliente asignado, operaci�n inválida");	     		return;	     	}	    				 Ext.MessageBox.confirm('Confirmar','Desea autorizar el convenio, ya no podr� realizar ning�n cambio al conveio seleccionados?', function(id, text){		       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 		       		//Obtiene todos los registros seleccionados		       			var registros ='';		       			for (i=0;i<rows.length;i++){		       						       				registros = registros+  rows[i].get('idconvenio')+ "|";		       			}		       			var conn = new Ext.data.Connection();		       			conn.request({		       				url: '../convenio/cambiarestatus' ,		       				params:{ids:registros,estatus:ESTATUS_AUTORIZADO},		       				success: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeConfirm(obj.message);			       				 			       				if (scope_view_principal!=undefined){		       						scope_view_principal.filtrar();		       					}		       						       				},		       				failure: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeAlert(obj.message);		       				}		       			});		       		}		       	 },this);								},		activar:function(scope_view_principal){			var myscope= this;			var rows =  this.getView().getSelectionModel().getSelection();						if (!myscope.checkSelectedRecord(rows)){				return;			}	     						 Ext.MessageBox.confirm('Confirmar','Desea activar los convenios seleccionados?', function(id, text){		       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 		       		//Obtiene todos los registros seleccionados		       			var registros ='';		       			for (i=0;i<rows.length;i++){		       						       				registros = registros+  rows[i].get('idconvenio')+ "|";		       			}		       			var conn = new Ext.data.Connection();		       			conn.request({		       				url: '../convenio/cambiarestatus' ,		       				params:{ids:registros,estatus:ESTATUS_ACTIVA},		       				success: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					alertMsg('Confirmaci�n',obj.message);			       				 			       				if (scope_view_principal!=undefined){		       						scope_view_principal.filtrar();		       					}		       						       				},		       				failure: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeAlert(obj.message);		       				}		       			})		       		}		       	 },this);								},		desactivar:function(scope_view_principal){			var rows =  this.getView().getSelectionModel().getSelection();			var myscope= this;			if (!myscope.checkSelectedRecord(rows)){				return;			}	     	    					     	 Ext.MessageBox.confirm('Confirmar','Desea desactivar los convenios seleccionados?', function(id, text){		       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 		       		//Obtiene todos los registros seleccionados		       			var registros ='';		       			for (i=0;i<rows.length;i++){		       						       				registros = registros+  rows[i].get('idconvenio')+ "|";		       			}		       			var conn = new Ext.data.Connection();		       			conn.request({		       				url: '../convenio/cambiarestatus' ,		       				params:{ids:registros, estatus:ESTATUS_INACTIVA},		       				success: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeConfirm(obj.message);		       							       					if (scope_view_principal!=undefined){		       						scope_view_principal.filtrar();		       					}		       				},		       				failure: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					mensajeAlert(obj.message);		       				}		       			});		       		}		       	 },this);								},		reload:function(idcliente){				},		loadInfo:function(){			this.getView().getStore().load();				},		buscar:function(tipobusqueda,fecha,patron, mes){			var solo_en_revision = !checkEnable('solo.convenios.en.revision')?'true':'';			this.getView().getStore().reload(						{							params:{tipobusqueda:tipobusqueda,fecha:fecha,patron:patron,mes:mes,								solo_en_revision: solo_en_revision},							callback:function(r,options,success){								 if (r.length<=0){									 Ext.Msg.show({										 title: 'Aviso',										 msg: 'No existe información con el criterio de busqueda selecionado.',										 modal: false,										 icon: Ext.Msg.INFO,										 buttons: Ext.Msg.OK															 });  																	 }							 }	  						});				},		getRegistro:function(){			var rows =  this.getView().getSelectionModel().getSelection();			if(rows.length >0){				return rows[0];			}			return undefined;		},		reasignar:function(scope_view_principal){			var myscope =this;			var rows =  this.getView().getSelectionModel().getSelection();	     	if(rows.length <=0){	     		mensajeAlert("Debe de Seleccionar solo un registro para modificar");	     		return;	     	}			if(rows.length >1){				mensajeAlert("Seleccione solamente un registro a modificar");	     		return;	     	}			//Crea una forma de clientes para agregar los datos			var gridUsuarios = Ext.create('MyDesktop.view.GridUsuariosMismoAgrupamiento',{}); 			var windows_reasignar = Ext.create('widget.window', {				id:'utils-win-agregar-cliente',				title: "Usuarios disponibles",				width: 500,				height: 500,				modal:true,				plain: true,				headerPosition: 'right',				layout: 'fit',				items: gridUsuarios,				buttons:[				         {text:'Asignar', handler:function(){				        	   //Obtiene los registros seleccionados del grid				        	   var registro = gridUsuarios.getRowSelected();				        	   if (registro==undefined){				        		   mensajeAlert('Seleccione el registro deseado.');				        		   return;				        	   }				        	   				        	   Ext.MessageBox.confirm('Confirmar',"Desea reasignar el convenio al usuario seleccionado?",				        			   function(id, text){				   	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 				   	       							   	       			var conn = new Ext.data.Connection();				   	       			conn.request({				   	       				url: '../convenio/updateUsuarioCreador' ,				   	       				params:{login:registro.get('login'), idconvenio:rows[0].get('idconvenio')},				   	       				success: function(response, opts) {				   	       										   	       				var obj = Ext.decode(response.responseText);					       					//mensajeConfirm(obj.message);					       										       					if (scope_view_principal!=undefined){					       						scope_view_principal.filtrar();					       					}					       					windows_reasignar.close();				   	       				},				   	       				failure: function(response, opts) {				   	       					var obj = Ext.decode(response.responseText);				   	       					mensajeAlert(obj.message);				   	       				}				   	       			});				   	       		}				   	       	 },this);				         					         	}				      }				  ]							});			windows_reasignar.show();								},		cambiaestatus:function(estatus ,scope_view_principal){						var rows =  this.getView().getSelectionModel().getSelection();			var myscope= this;			if (!myscope.checkSelectedRecord(rows)){				return;			}						var registros ='';      			for (i=0;i<rows.length;i++){      				      				registros = registros+  rows[i].get('idconvenio')+ "|";      			}	     	     	//Cambia el estado 	     	var dlg =  Ext.MessageBox.prompt('Cambio Estatus', 'Observación del cambio:',  function (btn, text){				 	if ((btn=='OK') || (btn=='ok') || (btn=='SI') || (btn=='si')|| (btn=='YES') || (btn=='yes')){				 		var conn = new Ext.data.Connection();		       			conn.request({		       				url: '../convenio/cambiarestatus' ,		       				params:{observacion:text,ids:registros, estatus:estatus},		       				success: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					scope_view_principal.filtrar();		       				},		       				failure: function(response, opts) {		       					var obj = Ext.decode(response.responseText);		       					Ext.Msg.alert('Error',obj.message);		       				}		       			});				 	}			    });	     	//Limita el texto 	      	var textboxEl = dlg.getEl().query('input')[0];	     	textboxEl.setAttribute('maxlength', 100);					},		cerrar:function(scope_view_principal){			var rows =  this.getView().getSelectionModel().getSelection();			var myscope= this;						if (!myscope.checkSelectedRecord(rows)){				return;			}			    		     	var gridexcepciones = Ext.create('MyDesktop.view.GridClavesExcepcion',{isConsulta:true}); 	     				var windows_cerrar = Ext.create('widget.window', {				id:'utils-win-agregar-cliente',				title: "Excepciones disponibles",				width: 500,				height: 500,				modal:true,				plain: true,				headerPosition: 'right',				layout: 'fit',				items: gridexcepciones,				buttons:[				         {text:'Cerrar convenio', handler:function(){				        	   //Obtiene los registros seleccionados del grid				        	   var registro = gridexcepciones.getRowSelected();				        	   if (registro==undefined){				        		   mensajeAlert('Seleccione el registro deseado.');				        		   return;				        	   }				        	   				        	   Ext.MessageBox.confirm('Confirmar','Desea cerrar los convenios seleccionados?', function(id, text){					   	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 					   	       		//Obtiene todos los registros seleccionados					   	       			var registros ='';					   	       			for (i=0;i<rows.length;i++){					   	       									   	       				registros = registros+  rows[i].get('idconvenio')+ "|";					   	       			}					   	       								   									   	       			var conn = new Ext.data.Connection();					   	       			conn.request({					   	       				url: '../cotizacionpreconvenio/cambiarestatus' ,					   	       				params:{ids:registros, estatus:90,tipocierre:registro.get('clave'), 					   	       				descripciontipocierre:registro.get('descripcion')					   	       					},					   	       				success: function(response, opts) {					   	       					var obj = Ext.decode(response.responseText);					   	       					//mensajeConfirm(obj.message);					   	       					//Filtra desde la forma del view principal					   	       				    scope_view_principal.filtrar();					   	       				    windows_cerrar.close();					   	       				},					   	       				failure: function(response, opts) {					   	       					var obj = Ext.decode(response.responseText);					   	       					mensajeAlert(obj.message);					   	       				}					   	       			});					   	       		}				   	       	 	},myscope);				         					         	}				      }				  ]							});						windows_cerrar.show();		},		checkSelectedRecord:function(rows){			if(rows.length <=0){	     		 mensajeAlert("Seleccione los registros que desea procesar");	     		return false;	     	}				     	for(i=0;i<rows.length;i++){	     		if(rows[i].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){	         		mensajeAlert("Registro " + rows[i].get('nombre') + 	         				" fue convertido a un convenio, operación inválida");	         		return false;	         	}	     		if(rows[i].get('estatus') ==ESTATUS_AUTORIZADO){	         		mensajeAlert("Registro " + rows[i].get('nombre') + 	         				" fue autorizado , operación inválida");	         		return false;	         	}	     		if(rows[i].get('estatus') ==ESTATUS_CERRADO){	         		mensajeAlert("Registro " + rows[i].get('nombre') + 	         				" fue cerrado previamente, operación inválida");	         		return false;	         	}	     	}	     		     	return true;		}					});