Ext.define('MyDesktop.view.GridOrganizacion', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridOrganizacion',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	gridentidad: undefined,    initComponent: function () {		this.myScope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}		this.tbar=[			{xtype: 'tbfill'},						{xtype:'tbseparator'},						{ text: 'Agregar',iconCls: 'agregar',handler:this.filtrar,handler:this.agregar, scope:this.myScope },						{ text: 'Modificar',iconCls: 'editar',handler:this.modificar,scope:this.myScope },						{ text: 'Activar',iconCls: 'activo',handler:this.activar,scope:this.myScope },						{ text: 'Desactivar',iconCls: 'desactivado',handler:this.desactivar,scope:this.myScope }								];				this.store = Ext.create('MyDesktop.store.StoreOrganizacion',{baseParams:{onlyActive:false}});		this.store.getProxy().setExtraParam("onlyActive", false);				this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;        this.columns = [			{ xtype: 'actioncolumn',width: 30,                items: [					{						getClass: function(v, meta, rec) {          // Or return a class from a function							if (rec.get('estatus') == 'A') {								return 'activo' ;							} else {								return 'desactivado';							}						},						handler: function(grid, rowIndex, colIndex) {							var rec = storeperfiles.getAt(rowIndex);							//alert(rec.get('idperfil')+ ":" +rec.get('descripcion') );						}					}				]			},			{ text: 'IDEntidad',width: 30, sortable : false,dataIndex: 'identidad', hidden:true},                  { text: 'ID',width: 50, sortable : false,dataIndex: 'idorganizacion'},            { text: 'Descipción', width: 300, sortable : true, dataIndex: 'descripcion'}            		];		this.callParent();    },    agregar:function(){		var myscope = this;		rows = this.gridentidad.getSelectionModel().getSelection();		if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Seleccione una entidad.");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Debe seleccionar solo una entidad");     		return;     	}		 Ext.MessageBox.prompt('Descripción Organización', 'Indique la descripción:',  function (btn, text){			 	if ((btn=='OK') || (btn=='ok') || (btn=='SI') || (btn=='si')|| (btn=='YES') || (btn=='yes')){			 		var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/entidadorganizacion/insertOrganizacionDeEntidad' ,	       				params:{identidad:rows[0].get('identidad'), descripcion:text},	       				success: function(response, opts) {	       					//var obj = Ext.decode(response.responseText);	       					myscope.reload(rows[0].get('identidad'));	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});			 	}		    });	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		var myscope = this;		 Ext.MessageBox.prompt('Descripción', 'Modificar descripci�n de entidad:',  function (btn, text){			 	if ((btn=='OK') || (btn=='ok') || (btn=='SI') || (btn=='si')|| (btn=='YES') || (btn=='yes')){			 		var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/entidadorganizacion/updateOrganizacionEntidad' ,	       				params:{identidad:rows[0].get('identidad'),idorganizacion:rows[0].get('idorganizacion'),descripcion:text},	       				success: function(response, opts) {	       					myscope.reload(rows[0].get('identidad'));	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});			 	}		    },myscope, false,rows[0].get('descripcion'));	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}				if(!confirm('Desea desactivar los clientes seleccionados?')){     		return;     	}		alert('Clientes desactivados');	},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormConvenio',{id:'showdetails_convenio',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Detalles Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},	activar:function(){		this.getView().getStore()		this.activarFunction(this,				this.getView().getSelectionModel().getSelection(),				'Desea activar los registros seleccionados?','A');				},	desactivar:function(){		this.activarFunction(this,					this.getView().getSelectionModel().getSelection(),					'Desea desactivar los registros seleccionados?','B');	},		activarFunction:function(myscope,rows, mensaje, estatus){     	if(rows.length <=0){     		 Ext.MessageBox.alert('Verificar',"Seleccione los registros que desea activar");     		return;     	}				 Ext.MessageBox.confirm('Confirmar',mensaje, function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idorganizacion')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../catalogo/entidadorganizacion/activarDesactivarOrganizacion' ,	       				params:{ids:registros, estatus:estatus, identidad:rows[0].get('identidad')},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					myscope.reload(rows[0].get('identidad'));	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },myscope);					},	reload:function(identidad){		this.getView().getStore().reload(				{					params:{identidad:identidad},					callback:function(r,options,success){						 if (r.length<=0){						 }					 }	  				});			}	});