Ext.define('MyDesktop.view.FormDireccionClienteRFCs', { extend: 'Ext.form.Panel',    xtype: 'clienterfc-form',    frame: false,    width: 400,    layout: 'anchor',    border: false,    bodyPadding: 10,    fieldDefaults: {       // labelAlign: 'top',        labelWidth: 100,        labelStyle: 'font-weight:bold'    },	comboTipos:undefined,	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '0 0 10 0'    },	forma: undefined,	myscope:undefined,	idcliente:undefined,	operacion:undefined,	main_grid:undefined, 	main_window:undefined,	initComponent: function () {		var main_grid = this.main_grid;		var operacion_aplicar = this.operacion;		var idcliente_id = this.idcliente==undefined?'':this.idcliente;					this.comboTipos = Ext.create('MyDesktop.store.StoreTiposPersona',{});		this.myscope=this;		var scope_main = this;				var store_sino = Ext.create('MyDesktop.store.StoreSINO',{			data : [					{"identificador":"SI", "descripcion":"SI"},					{"identificador":"NO", "descripcion":"NO"}				]					});				this.items= [		             {xtype:'hidden', name:'iddireccion'},		             {xtype:'hidden', name:'identificador' , value:idcliente_id},		             {    						xtype: 'fieldcontainer',    						labelStyle: 'font-weight:bold;padding:0',    						layout: 'hbox',    						//fieldLabel: 'R.F.C<font color=red>*</font>',    						defaultType: 'textfield',    						fieldDefaults: {    							//labelAlign: 'top'    						},    						items: [    						       					        {  xtype: 'myUpperCaseTextField', flex: 3,name: 'rfc',fieldLabel: 'R.F.C<font color=red>*</font>',    					            	 emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:20},    							{ xtype:'button', flex: 1, width:80, margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',    						    	iconMask: true,  iconAlign:'center',                						    	scope:this.myscope,    								handler: function(){    									//Muestra el grid para la seccion de los clientes    									this.consultaclientes();    								}    							}    						        						]    					},     							             {  xtype: 'myUpperCaseTextField', name: 'numCliente',fieldLabel: '#Cliente<font color=red>*</font>',		            		 emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:10},		             {  xtype: 'myUpperCaseTextField', name: 'razonSocial',fieldLabel: 'Razon Social<font color=red>*</font>',		            			 emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:40},					    {xtype: 'myUpperCaseTextField', flex: 4,fieldLabel: 'Contacto',name:'atencion',width:100,		            				 margins: '0 0 0 0',allowBlank: true,					    	enforceMaxLength:true,maxLength:40},		             {  xtype: 'myUpperCaseTextField', name: 'calle',fieldLabel: 'Calle<font color=red>*</font>',					    		emptyText: '',allowBlank: false,enforceMaxLength:true,maxLength:40},						{xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'Num.Exterior<font color=red>*</font>',		            	 	name:'numexterior',width:100,							margins: '0 0 0 5',enforceMaxLength:true,maxLength:10,allowBlank: false},		             {xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'Num.Interior',name:'numinterior',width:100, 						margins: '0 0 0 5',enforceMaxLength:true,maxLength:10,allowBlank: true},					{						xtype: 'fieldcontainer',						labelStyle: 'font-weight:bold;padding:0',						layout: 'hbox',						emptyText: 'C.P',						defaultType: 'textfield',						fieldDefaults: {							//labelAlign: 'top'						},						items: [ 						   						        {xtype: 'myUpperCaseTextField',  flex: 3,fieldLabel: 'C.P<font color=red>*</font>',name:'cp',width:100, 						        	margins: '0 0 0 0',enforceMaxLength:true,maxLength:5,allowBlank: false },						        { xtype:'button', flex: 1,width:80,  margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',						        		scope:this.myscope,id:'btnBuscarCP_'+this.id,		       								handler:this.showGridCps}						]					},									{						xtype: 'fieldcontainer',						labelStyle: 'font-weight:bold;padding:0',						layout: 'hbox',						emptyText: 'Colonia',						defaultType: 'textfield',						fieldDefaults: {							//labelAlign: 'top'						},						items: [						   								{xtype: 'myUpperCaseTextField', flex: 3,fieldLabel: 'Colonia<font color=red>*</font>',name:'colonia',									width:100,margins: '0 0 0 0',enforceMaxLength:true,maxLength:50,allowBlank: false},									  { xtype:'button', flex: 1,width:80,  margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',						        		scope:this.myscope,id:'btnBuscarColonia_'+this.id,		       								handler:this.showGridCps}						]					},					{						xtype: 'fieldcontainer',						labelStyle: 'font-weight:bold;padding:0',						layout: 'hbox',						emptyText: 'Municipio',						defaultType: 'textfield',						fieldDefaults: {							//labelAlign: 'top'						},						items: [								{xtype: 'myUpperCaseTextField', flex: 3,fieldLabel: 'Municipio<font color=red>*</font>',name:'municipio',width:100, 									margins: '0 0 0 0',enforceMaxLength:true,maxLength:50,allowBlank: false},									  { xtype:'button', flex: 1,width:80,  margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',						        		scope:this.myscope,id:'btnBuscarMunicipio_'+this.id,		       								handler:this.showGridCps}							]					},				{xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'Estado',name:'estado',width:100,  margins: '0 0 0 0',enforceMaxLength:true,maxLength:40},				{					xtype: 'combobox',					fieldLabel: 'Rotula Etiq.<font color=red>*</font>',					name: 'rotula',					allowBlank: false,					//store: Ext.create('MyDesktop.store.StoreSINO'),					store: store_sino,					valueField: 'identificador',					displayField: 'descripcion',					forceSelection:true,					typeAhead: true,					queryMode: 'local',					emptyText: ''				},				{xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'Telefono',name:'telefono',width:100,  margins: '0 0 0 0',enforceMaxLength:true,maxLength:20},				{xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'Ext',name:'extencion',width:100,  margins: '0 0 0 0',enforceMaxLength:true,maxLength:20},				{  xtype: 'myUpperCaseTextField',flex: 1, xtype: 'textfield',margins: '0 0 0 0',fieldLabel:'Correo',name: 'correoe',readOnly:true , 					vtype: 'email',allowBlank: true,enforceMaxLength:true,maxLength:40, width:300},				   		],			this.buttons= [				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key, value){								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando informaci�n espere..."});							myMask.show();														form.submit({								clientValidation: true,								submitEmptyText: false,								url: '../catalogo/clientesrfc/' + operacion_aplicar,								success: function(form, action) {									myMask.hide( );									myMask.disable();																		if (main_grid!=undefined){										main_grid.buscar(0,0);									}																		if (scope_main.main_window!=undefined){										scope_main.main_window.close();									}									mensajeConfirm(action.result.message);												},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		alertMsg('Error' , action.result.message);								}							});																			}else{							alertMsg('Complete los campos requeridos.');						}					}			}//,			//{text: 'Salir'},		];			this.callParent();			},       	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){		var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma					valor = record.get(field.getName());					if (valor!=undefined){						//alert('Campo:' + field.getName() + ', valor:' +valor);						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	},		showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			alert('Tipo de consulta inválida.');		}						var gridcps = Ext.create('MyDesktop.view.GridConsultaCPs', { 			isEditable:true,			cp_field:'cp' ,colonia_field:'colonia', municipio_field:'municipio',estado_field:'estado',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 		  		var buscacps_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_window.close();}}		        ]			}); 		gridcps.setScopeWin(buscacps_window);			 buscacps_window.show();		},		setIdCliente:function(idcliente){		this.idcliente=idcliente;				//actualiza el dato del campo		this.updateFieldCte(idcliente,'identificador');	},	setMainWindow:function(mainwin){		this.main_window= mainwin;	},		updateFieldCte:function(valor, campo){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if ((field.getName()!=undefined) && (field.getName()==campo)){					field.setValue(valor);								}			}		}	},		consultaclientes:function(){			var mysope=this;		var rfc = mysope.getValueField('rfc');		//Crea una forma de clientes para agregar los datos			var store_dir = Ext.create('MyDesktop.store.StoreDireccionClienteConsulta',{		 autoSync: false,		    autoLoad: true,			idProperty: 'cp',  			proxy: {		        type: 'ajax',		        api: {		            read: '../catalogo/direccion/getDatosConsulta?patronbusqueda='+rfc+		            "&direccionesatencionfacturacion=true&tipobusqueda=1"		        },		        reader: {		                 type: 'json',		                 successProperty: 'success',		                 root : 'proxiArray',		                 messageProperty: 'message',		                 totalProperty : 'totalCount',		        },		        writer: {		            	 type: 'json',		                 writeAllFields: true,		                 encode: false,		                 root: 'proxiArray'		        }		       }, 		       sorters: [{		            property: 'identificador',		            direction: 'ASC'		        }]		});				var grid_cte_rfc_consulta = Ext.create('MyDesktop.view.GridConsultaDireccionesCliente',				{					ocultaFiltros:true,					patronbusqueda:'rfc',					direccionesatencionfacturacion:true,					hiddenAttention:false,					hiddenRFC:false,					store_dir:store_dir			}); 						var windows_consulta =Ext.create('widget.window', {			//id:'utils-win-consultar-clientes-rfc-disponibles',			title: "Clientes Facturaci�n Disponibles",			width: 1000,			height: 400,			modal:true,			plain: true,			layout: 'fit',			iconCls:'clientes_white',			items: grid_cte_rfc_consulta,			buttons:[				{iconCls:'seleccionar_white',text:'Seleccionar',handler:					function(){						var registro = undefined;												var rows =  grid_cte_rfc_consulta.getSelectionModel().getSelection();						if(rows.length >0){							registro =  rows[0];						}																		if (registro!=undefined){							mysope.updateFieldCte(registro.get('numCliente'), 'numcliente');							if ((rfc==undefined) || (rfc=='')){								mysope.updateFieldCte(registro.get('rfc'), 'rfc');							}							mysope.updateFieldCte(registro.get('razonSocial'), 'razonSocial');							          							  mysope.updateFieldCte(registro.get('atencion'), 'atencion');							mysope.updateFieldCte(registro.get('calle'), 'calle');							mysope.updateFieldCte(registro.get('numinterior'), 'numinterior');							mysope.updateFieldCte(registro.get('numexterior'), 'numexterior');							mysope.updateFieldCte(registro.get('cp'), 'cp');							mysope.updateFieldCte(registro.get('colonia'), 'colonia');							mysope.updateFieldCte(registro.get('municipio'), 'municipio');							mysope.updateFieldCte(registro.get('estado'), 'estado');							mysope.updateFieldCte(registro.get('rfc'), 'rfc');							mysope.updateFieldCte(registro.get('telefono'), 'telefono');							mysope.updateFieldCte(registro.get('email'), 'correoe');							mysope.updateFieldCte(registro.get('extencion'), 'extencion');							windows_consulta.close();													}else{							Ext.Msg.alert('Verificar',"Seleccione registro de dirección.");				     		return;						}					}				}			]		});		windows_consulta.show();					},	getValueField:function(campo){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var valor = '';		var items = fields.items;		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if ((field.getName()!=undefined) && (field.getName()==campo)){					valor= field.getValue();								}			}		}		return valor;	}			});