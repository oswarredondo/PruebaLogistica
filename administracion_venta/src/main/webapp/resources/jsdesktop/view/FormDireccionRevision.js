Ext.define('MyDesktop.view.FormDireccionRevision', { extend: 'Ext.form.Panel',    xtype: 'direccion-revision-form',            frame: false,    border: false,    bodyPadding: 10,    autoScroll:true,    fieldDefaults: {        //labelAlign: 'top',        labelWidth: 100,        labelStyle: 'font-weight:bold'    },	comboTipos:undefined,	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '0 0 10 0'    },	forma: undefined,	myscope:undefined,	idcliente:undefined,	operacion:undefined,	scope_view_pricipal:undefined,	initComponent: function () {		var scope_view_pricipal = this.scope_view_pricipal;				var operacion_aplicar = this.operacion;		var idcliente_id = this.idcliente==undefined?'':this.idcliente;		var scopemy=this;		this.comboTipos = Ext.create('MyDesktop.store.StoreTiposPersona',{});		this.myscope=this;		this.items= [		       {			    layout:'column',			    items:[			           {					xtype: 'fieldset',					columnWidth:.55,					title: 'Datos Generales',					defaultType: 'textfield',					height:450,					width:600,					defaults: {						anchor: '100%'					},					items: [					        { xtype: 'hidden', allowBlank:true,  name: 'rfc' },					        { xtype: 'hidden', allowBlank:true, fieldLabel: 'Convenio', name: 'estatus', readOnly:true },		    	        {xtype:'hidden', name:'iddireccion'},		    	        {xtype:'hidden', name:'idcliente' , value:idcliente_id},		    	        {xtype:'hidden', name:'idconvenio'},						{xtype: 'myUpperCaseTextField', flex: 1,fieldLabel: 'D�as de Revisi�n',name:'diasrevision',width:100,  margins: '0 0 0 0',enforceMaxLength:true,maxLength:50 },						  {       						xtype: 'fieldcontainer',       						labelStyle: 'font-weight:bold;padding:0',       						layout: 'hbox',       						fieldLabel: 'Responsable',       						defaultType: 'textfield',       						fieldDefaults: {       							//labelAlign: 'top'       						},       						items: [       						          						    {xtype: 'myUpperCaseTextField', flex: 3,name:'responsable_rev',width:100,margins: '0 0 0 0',allowBlank: true, readOnly:true  },       							{ xtype:'button', flex: 1, width:80, margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',scope:this.myscope,       								handler: function(){       									this.myscope.consultacontactos();       								}       							}       						           						]       					}, 						{  xtype: 'myUpperCaseTextField',fieldLabel: 'Tel�fono',name: 'telefono_rev',emptyText:'',allowBlank: true,enforceMaxLength:true,maxLength:40, width:300,readOnly:true  },						{  xtype: 'myUpperCaseTextField',fieldLabel: 'Móvil',margins: '0 0 0 0',emptyText:'',name: 'movil_rev',allowBlank: true,enforceMaxLength:true,maxLength:20, width:300,readOnly:true  },						{  xtype: 'myUpperCaseTextField',flex: 1, xtype: 'textfield',margins: '0 0 0 0',fieldLabel:'Email',name: 'email_resp_rev',readOnly:true , 							vtype: 'email',allowBlank: true,enforceMaxLength:true,maxLength:40, width:300},						 {       						xtype: 'fieldcontainer',       						labelStyle: 'font-weight:bold;padding:0',       						layout: 'hbox',       						fieldLabel: 'Direcci�n',       						defaultType: 'textfield',       						fieldDefaults: {       							//labelAlign: 'top'       						},       						items: [       						          						    {xtype: 'myUpperCaseTextField', flex: 3,name:'calle_rev',width:100,margins: '0 0 0 0',readOnly:true , allowBlank: false,enforceMaxLength:true,maxLength:40 },       							{ xtype:'button', flex: 1, width:80, margins: '0 0 0 5',  iconCls:'buscar_white',text:'Buscar',scope:this.myscope,id:'btnBuscarCP_'+this.id,       								 handler: this.myscope.consultaclientes,scope:this       							}       						           						]       					},        											{  xtype: 'myUpperCaseTextField', name: 'numexterior_rev', fieldLabel:'Num. Exterior', allowBlank: false,enforceMaxLength:true,maxLength:10, width:300,readOnly:true },						{  xtype: 'myUpperCaseTextField',name: 'numinterior_rev', fieldLabel:'Num. Interior', allowBlank: true, margins: '0 0 0 0',enforceMaxLength:true,maxLength:10, width:300,readOnly:true },						{xtype: 'myUpperCaseTextField', fieldLabel: 'C.P.', flex: 3,name:'cp_rev',width:100,margins: '0 0 0 0',allowBlank: false, readOnly:true,enforceMaxLength:true,maxLength:5 ,readOnly:true   },						{xtype: 'myUpperCaseTextField', fieldLabel: 'Colonia',   flex: 3,name:'colonia_rev',width:100,margins: '0 0 0 0',allowBlank: false, readOnly:true,enforceMaxLength:true,maxLength:40 ,readOnly:true   },						{xtype: 'myUpperCaseTextField', fieldLabel: 'Del/Mun' ,flex: 3,name:'municipio_rev',width:100,margins: '0 0 0 0',allowBlank: false, readOnly:true,enforceMaxLength:true,maxLength:40 ,readOnly:true   },						{  xtype: 'myUpperCaseTextField', name: 'estado_rev', fieldLabel:'Estado', allowBlank: false,enforceMaxLength:true,maxLength:40, width:300 ,readOnly:true }				   				]			      }			    ]  		     }		];			this.buttons= [				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if ( scopemy.getValueField('estatus')=='3'){							mensajeAlert("Convenio ya fue autorizado, no puede modificar datos");	  						return;	  					} 												if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key, value){								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando información espere..."});							myMask.show();														form.submit({								clientValidation: true,								url: '../convenio/updateDirRevision',								success: function(form, action) {									myMask.hide( );									myMask.disable();									alertMsg('Confirmaci�n',action.result.message);																		if (scope_view_pricipal!=undefined){																				scope_view_pricipal.filtrar();									}																					},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		alertMsg('Error' , action.result.message);								}							});																			}else{							alertMsg('Complete los campos requeridos.');						}					}			}//,			//{text: 'Salir'},		];			this.callParent();			},       	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){		var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma					valor = record.get(field.getName());					if (valor!=undefined){						//alert('Campo:' + field.getName() + ', valor:' +valor);						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	},		showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp_rev',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia_rev',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio_rev',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			mensajeAlert('Tipo de consulta inválida.');		}						var gridcps = Ext.create('MyDesktop.view.GridConsultaCPs', { 			isEditable:true,			cp_field:'cp_rev' ,colonia_field:'colonia_rev', municipio_field:'municipio_rev',estado_field:'estado_rev',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 		  		var buscacps_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_window.close();}}		        ]			}); 		gridcps.setScopeWin(buscacps_window);			 buscacps_window.show();		},		setIdCliente:function(idcliente){		this.idcliente=idcliente;	},		getValueField:function(campo){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var valor = '';		var items = fields.items;		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if ((field.getName()!=undefined) && (field.getName()==campo)){					valor= field.getValue();								}			}		}		return valor;	},	consultacontactos:function(){			var mysope=this;				var idcliente = mysope.getValueField('idcliente');		if ((idcliente==undefined)||(idcliente=='')){			mensajeWarning("Seleccione un cliente del catalogo");			return;		}				//Crea una forma de clientes para agregar los datos		var grid_cte_contacto_cotizacion_consulta = Ext.create('MyDesktop.view.GridContactos',{			id:'grid_consulta_contacto_clientes_rev_dir',			idCliente:idcliente,			isConsulta:true,			 isAutoLoad:false		}); 				grid_cte_contacto_cotizacion_consulta.setIdCliente(idcliente);		grid_cte_contacto_cotizacion_consulta.reload(idcliente);		grid_cte_contacto_cotizacion_consulta.getStore().reload(				{					params:{idcliente:idcliente},					callback:function(r,options,success){						 if (r.length<=0){							 mensajeAlert('No existen contactos disponibles');						 }					}	  		});			var windows_consulta_contactos =Ext.create('widget.window', {			id:'utils-win-consultar-clientes-cotizaciones-disponibles',			title: "Contactos Cliente ",			width: 1000,			height: 400,			modal:true,			plain: true,			layout: 'fit', 		    iconCls:'contactos_blue',			items: grid_cte_contacto_cotizacion_consulta,			buttons:[				{iconCls:'seleccionar_white',text:'Seleccionar',handler:					function(){						var registro = grid_cte_contacto_cotizacion_consulta.getRegistro();						if (registro!=undefined){													mysope.updateFieldCte(registro.get('nombre') + " " + registro.get('apellido'),									'responsable_rev');							mysope.updateFieldCte(registro.get('movil') ,	'movil_rev');							mysope.updateFieldCte(registro.get('telefono') ,	'telefono_rev');							mysope.updateFieldCte(registro.get('email') ,	'email_resp_rev');																					windows_consulta_contactos.close();						}else{							mensajeAlert("Seleccione registro de direcci�n.");				     		return;						}					}				}     			]		});		windows_consulta_contactos.show();					},	updateFieldCte:function(valor, campo){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if ((field.getName()!=undefined) && (field.getName()==campo)){					field.setValue(valor);								}			}		}	},	consultaclientes:function(){			var mysope=this;		 var rfc = mysope.getValueField('rfc');				//Crea una forma de clientes para agregar los datos		 		var grid_cte_cotizacion_consulta = 			Ext.create('MyDesktop.view.GridConsultaDireccionesCliente',					{			id:'grid_consulta_clientes_dir',			ocultaFiltros:true,			store_dir: Ext.create('MyDesktop.store.StoreDireccionClienteConsulta',{				 autoDestroy: false,				 loadMask : true,				 autoSave: false,				 autoSync: false,				 autoLoad: false			})		}); 		if ((rfc==undefined) || (rfc=='')){			mensajeWarning("No existe definido rfc, verifique.");			return;		}		var windows_consulta =Ext.create('widget.window', {			id:'utils-win-consultar-clientes-cotizaciones-disponibles',			title: "Direcciones Disponibles",			width: 1000,			height: 400,			modal:true,			plain: true,			layout: 'fit',			iconCls:'clientes_white',			items: grid_cte_cotizacion_consulta,			buttons:[				{iconCls:'seleccionar_white',text:'Seleccionar',handler:					function(){						var registro = grid_cte_cotizacion_consulta.getRegistro();						if (registro!=undefined){							mysope.updateFieldCte(registro.get('calle'), 'calle_rev');							mysope.updateFieldCte(registro.get('numinterior'), 'numinterior_rev');							mysope.updateFieldCte(registro.get('numexterior'), 'numexterior_rev');							mysope.updateFieldCte(registro.get('cp'), 'cp_rev');							mysope.updateFieldCte(registro.get('colonia'), 'colonia_rev');							mysope.updateFieldCte(registro.get('municipio'), 'municipio_rev');							mysope.updateFieldCte(registro.get('estado'), 'estado_rev');														windows_consulta.close();						}else{							Ext.Msg.alert('Verificar',"Seleccione registro de dirección.");				     		return;						}					}				}			]		});		grid_cte_cotizacion_consulta.buscarDireccionesCliente(1, rfc);		windows_consulta.show();		grid_cte_cotizacion_consulta.buscarDireccionesCliente(1, rfc);	},	});