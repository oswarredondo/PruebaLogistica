Ext.define('MyDesktop.view.FormDescuento', { extend: 'Ext.form.Panel',    xtype: 'contact-form',            frame: false,    width: 400,    layout: 'anchor',    border: false,    bodyPadding: 10,    fieldDefaults: {        labelAlign: 'top',        labelWidth: 100,        labelStyle: 'font-weight:bold'    },	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '0 0 10 0'    },    forma: undefined,	myscope:undefined,	operacion:undefined,	initComponent: function () {				var operacion_aplicar = this.operacion;		//Se carga el combo para que pueda mostrar los datos al momento de setear el valor		var store_tipos_nivel_usuario = Ext.create('MyDesktop.store.StoreNivelUsuario',{});    	var store_tipos_agrupamiento= Ext.create('MyDesktop.store.StoreAgrupamiento',{});    			//Solo los nives disponibles 		store_tipos_nivel_usuario.load();		this.buttons= [		               {		                	hidden: this.showReadOnly,				            text: 'Limpiar',iconCls:'limpiar_white',				          //  scope: this,				            handler: function(){				            	var form = this.up('form').getForm();				            	form.reset();				            }		                },        				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key, value){								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando información espere..."});							myMask.show();														form.submit({								clientValidation: true,								url: '../descuento/' + operacion_aplicar,								submitEmptyText: false,								success: function(form, action) {									myMask.hide( );									myMask.disable();									alertMsg('Confirmación',action.result.message);									form.reset();												},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		alertMsg('Error' , action.result.message);								}							});																			}else{							alertMsg('Verifique' ,'Complete los campos requeridos.');						}					}			}//,			//{text: 'Salir'},		];		        this.items = [           {xtype:'hidden', name:'iddescuento'},                      {	            xtype: 'fieldset',	            title: 'Datos generales',	            defaultType: 'textfield',	            defaults: {	                anchor: '100%'	            },	            items: [	                { xtype: 'myUpperCaseTextField',allowBlank:false, fieldLabel: 'Nombre', name: 'nombre', emptyText: 'nombre',enforceMaxLength:true,maxLength:40 },	                { xtype: 'myUpperCaseTextField',allowBlank:false, fieldLabel: 'Descripci�n', name: 'descripcion', emptyText: 'descripcion',enforceMaxLength:true,maxLength:40},	                {xtype: 'combobox',fieldLabel: 'Nivel',name: 'nivel',	                    store: store_tipos_nivel_usuario,	                    valueField: 'identificador',	                    displayField: 'descripcion',	    				enforceMaxLength:true,	    				maxLength:30,	                    typeAhead: true,	                    queryMode: 'remote',	                    allowBlank: false,	                    forceSelection: true,	                    emptyText: ''	                },	                	               /* {	                    xtype: 'combobox',	                    fieldLabel: 'Agrupaci�n',	                    editable :false,	                    name: 'idagrupamiento',	                    store: store_tipos_agrupamiento,	                    //store: Ext.create('MyDesktop.store.StoreAgrupamiento',{}),	                    valueField: 'idagrupamiento',	                    displayField: 'descripcion',	    				enforceMaxLength:true,	    				maxLength:30,	                    typeAhead: true,	                    queryMode: 'local',	                    allowBlank: false,	                  	                    emptyText: ''	                },*/	             	                {xtype: 'combobox',fieldLabel: 'Modalidad',name: 'tipo',	                    store: Ext.create('MyDesktop.store.StoreTiposDescuento',{}),	                    valueField: 'identificador',	                    displayField: 'descripcion',	    				enforceMaxLength:true,	    				maxLength:30,	                    typeAhead: true,	                    editable :false,	                    queryMode: 'local',	                    allowBlank: false,	                    forceSelection: true,	                    emptyText: 'Seleccione modalidad...'	                }	            ]           }, 	        {	            xtype: 'fieldset',	            title: 'Porcentajes',	            defaultType: 'textfield',	            defaults: {	                anchor: '100%'	            },	            items: [	                    {xtype: 'numberfield',name: 'porcentaje',fieldLabel: '% Descuento',	                    		value: 0.0,	maxValue: 99.9,	allowDecimals:true,decimalPrecision:2,	decimalSeparator:'.',	                    		required:true, minValue: 0.0,emptyText: '% Descuento',allowBlank: false,enforceMaxLength:true}	                    /*  ,	                   {xtype: 'myUpperCaseTextField', name: 'descuentofijo',margins: '0 0 0 5',fieldLabel: 'Descuento Fijo',	                    			emptyText: 'Descuento Fijo',allowBlank: false,enforceMaxLength:true,maxLength:20}*/	            ]	        }, 	        {	            xtype: 'fieldset',	            title: 'Vigencia',	            defaultType: 'textfield',	            defaults: {	                anchor: '100%'	            },	            items: [		            {		                xtype: 'datefield',		                fieldLabel: 'Fecha Activación',		                name: 'fechaactivacion',		                itemId: 'fechaactivacion',		                allowBlank: false,		                format: 'd-m-Y',		               // minValue: new Date(),		                vtype: 'daterange',		                endDateField: 'fechatermino' // id of the end date field		            },		            {		                xtype: 'datefield',		                fieldLabel: 'Fecha Caducidad',		                name: 'fechatermino',		                itemId: 'fechatermino',		                format: 'd-m-Y',		                allowBlank: false,		                vtype: 'daterange',		                startDateField: 'fechaactivacion' // id of the end date field		            }	            ] 	        }        ];					this.callParent();			},	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma				 					valor = record.get(field.getName());					 					if (valor!=undefined){						//  alert(" Encontrado field.getName():" + field.getName()+",valor:" +valor  +", record field:" +record.get(field.getName()) ) ;						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	}	});