Ext.define('MyDesktop.view.GridTarifas', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridtarifa',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	//id:undefined,	isConsulta:false,	myScope:undefined,    initComponent: function () {		this.myScope = this;				//Si el grid no es de consulta entonces muestra la barra para administrar los datos				if (!this.isConsulta){			this.store = Ext.create('MyDesktop.store.StoreTarifas',{				baseParams:{soloactivos:true}			});						this.store.getProxy().setExtraParam("soloactivos", true);		}else{			this.store = Ext.create('MyDesktop.store.StoreTarifas',{});		}		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;						this.selType= 'checkboxmodel';		// this.editing = Ext.create('Ext.grid.plugin.CellEditing');						// this.plugins = this.editing;                this.columns = [						{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							width: 50,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'activo' ;										} else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('estatus') == 1) {											return 'Activo' ;										} else {												return 'Desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										var rec = grid.getStore().getAt(rowIndex),										action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');										Ext.Msg.alert(action, action + ' ' + rec.get('nombre'));									}								}							]						},						{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							text:'Visible PDV',							width: 50,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('es_visible_pdv') == 1) {											return 'activo' ;										} else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('es_visible_pdv') == 1) {											return 'Visible en PDV' ;										} else {												return 'NO ES VISIBLE EN PDV';										}									},									handler: function(grid, rowIndex, colIndex) {									}								}							]						},						{text     : 'Id',width:80,sortable : false,dataIndex: 'idtarifa'},						{			                xtype: 'checkcolumn',			                header: 'Es Default?',			                dataIndex: 'es_default',			                width: 90,			                stopSelection: true,			                processEvent: function () { return false; }			            },						{text     : 'Nombre',width:250,sortable : false,dataIndex: 'nombre'},						{text     : 'Descripcion',width:250,sortable : false,dataIndex: 'descripcion'},						{text     : 'Fecha Inicial',width:100,sortable : false,dataIndex: 'fechainicial'},						{text     : 'Fecha Final',width:100,sortable : false,dataIndex: 'fechafinal'},						{text     : 'Servicio',width:200,sortable : false,dataIndex: 'descripcionservicio'},						{text     : 'Forma Pago',width:200,sortable : false,dataIndex:'descripcionformapago' }									];			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormTarifas',{id:'agregar_tarifa',operacion:'insert'}); 		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa',			title: "Agregar Datos Tarifa",			width: 400,			height: 340,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					}).show();	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormTarifas',{id:'agregar_tarifa',operacion:'update'}); 		forma_modificar.updateCampos(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa',			title: "Modificar Datos Tarifa",			width: 400,			height: 340,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}).show();	},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro que desea visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro.");     		return;     	}		//Crea una forma de clientes para agregar los datos		var grid_rangos_tarifa_servicio= Ext.create('MyDesktop.view.GridTarifasRangoEnvios',				{					id:'showdetails_tarifa_rango',					isConsulta:false,					idtarifa:rows[0].get('idtarifa'),					idservicio:rows[0].get('idservicio'),					idformapago:rows[0].get('idformapago')				}		); 		grid_rangos_tarifa_servicio.buscar();		//forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa-rango',			title: "Detalles Rangos Envios Tarifa: "+rows[0].get('nombre'),			width: 750,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_rangos_tarifa_servicio		}).show();	},			eliminar:function(){					},	loadInfo:function(){		this.getView().getStore().load();		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();		},	buscar:function(tipobusqueda,fechainicial,fechafinal,patron){				this.getView().getStore().reload(					{						params:{tipobusqueda:tipobusqueda,fechainicial:fechainicial,fechafinal:fechafinal,patron:patron},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe informaciÃ³n con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		},		getRegistro:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >0){			return rows[0];		}		return undefined;	},	getRowsSelectedGrid:function(){		var rows =  this.getView().getSelectionModel().getSelection();				return rows;	}	});