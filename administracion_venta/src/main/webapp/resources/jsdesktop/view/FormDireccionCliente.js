Ext.define('MyDesktop.view.FormDireccionCliente', { extend: 'Ext.form.Panel',    xtype: 'contact-form',    frame: false,    width: 400,    layout: 'anchor',    border: false,    bodyPadding: 10,    fieldDefaults: {        labelAlign: 'top',        labelWidth: 100,        labelStyle: 'font-weight:bold'    },	comboTipos:undefined,	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '0 0 10 0'    },	forma: undefined,	myscope:undefined,	idcliente:undefined,	operacion:undefined,	main_grid:undefined,	 winprincipal:undefined,	initComponent: function () {		var main_grid = this.main_grid;		var myscope_prin=this;		var operacion_aplicar = this.operacion;		var idcliente_id = this.idcliente==undefined?'':this.idcliente;				this.comboTipos = Ext.create('MyDesktop.store.StoreTiposPersona',{});		this.myscope=this;		this.items= [			{xtype:'hidden', name:'iddireccion'},			{xtype:'hidden', name:'idcliente' , value:idcliente_id},			   {                xtype: 'combobox',                fieldLabel: 'Clasificaci�n',                editable :false,                name: 'clasificacion',                store: Ext.create('MyDesktop.store.StoreClasificacionCliente',{}),                valueField: 'idtipo',                displayField: 'descripcion',				enforceMaxLength:true,				maxLength:30,                typeAhead: true,                queryMode: 'local',                allowBlank: false,                emptyText: ''            },			{  xtype: 'myUpperCaseTextField', name: 'calle',fieldLabel: 'Direcci�n',emptyText: 'Calle',allowBlank: false,enforceMaxLength:true,maxLength:40},			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				emptyText: 'Calle',				defaultType: 'textfield',				fieldDefaults: {					labelAlign: 'top'				},				items: [					{  xtype: 'myUpperCaseTextField',flex: 1, name: 'numexterior', emptyText:'Num. Exterior', allowBlank: false,enforceMaxLength:true,maxLength:10},				   					{  xtype: 'myUpperCaseTextField',flex: 2, name: 'numinterior', emptyText:'Num. Interior', allowBlank: true, margins: '0 0 0 5',enforceMaxLength:true,maxLength:10},					{  xtype: 'myUpperCaseTextField',flex: 1, name: 'cp', emptyText:'C.P.', allowBlank: false, margins: '0 0 0 5',enforceMaxLength:true,maxLength:5 },					{ xtype:'button', margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarCP_'+this.id,						handler: this.myscope.showGridCps,scope:this					}				]			},			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				defaultType: 'textfield',				fieldDefaults: {					labelAlign: 'top'				},				items: [					{   xtype: 'myUpperCaseTextField',flex: 1, name: 'colonia', emptyText:'Colonia', allowBlank: false,enforceMaxLength:true,maxLength:40 },					{ xtype:'button',  margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarColonia_'+this.id,						handler: this.myscope.showGridCps,scope:this					},					{   xtype: 'myUpperCaseTextField',flex: 1, name: 'municipio', emptyText:'Del/Mun', allowBlank: false, margins: '0 0 0 5',enforceMaxLength:true,maxLength:40},					{ xtype:'button',  margins: '0 0 0 5',  iconCls:'buscar_white',id:'btnBuscarMunicipio_'+this.id,						handler: this.myscope.showGridCps,scope:this					}				]			}, 			{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				defaultType: 'textfield',				fieldDefaults: {					labelAlign: 'top'				},				items: [					{  xtype: 'myUpperCaseTextField',flex: 1, name: 'estado', emptyText:'Estado', allowBlank: false,enforceMaxLength:true,maxLength:40 }//,					//{  xtype: 'myUpperCaseTextField',flex: 1, xtype: 'textfield',margins: '0 0 0 5',emptyText:'Email',name: 'email',					//	vtype: 'email',allowBlank: true,enforceMaxLength:true,maxLength:40}				]			},			/*{				xtype: 'fieldcontainer',				labelStyle: 'font-weight:bold;padding:0',				layout: 'hbox',				defaultType: 'textfield',				fieldDefaults: {					labelAlign: 'top'				},				items: [					{  xtype: 'myUpperCaseTextField',flex: 1,name: 'telefono',emptyText:'Tel�fono',allowBlank: true,enforceMaxLength:true,maxLength:40},					{  xtype: 'myUpperCaseTextField',flex: 1,margins: '0 0 0 5',emptyText:'M�vil',name: 'movil',allowBlank: true,enforceMaxLength:true,maxLength:20}				]			},*/			{				xtype: 'myUpperCaseTextArea',				fieldLabel: 'Observaciones',				enforceMaxLength:true,				maxLength:100,				labelAlign: 'top',				 name: 'observacion',				height: 90,				margin: '0',				allowBlank: true			}/*,			{ xtype: 'checkbox', name: 'direcciondefault', boxLabel: 'Utilizar como direcci�n default',                    hideLabel: true,checked: false, margin: '0 0 10 0',scope: this            }*/		],			this.buttons= [               {                	hidden: this.showReadOnly,		            text: 'Limpiar',iconCls:'limpiar_white',		            scope: this,		            handler: this.onResetClick                },				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key, value){								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando informaci�n espere..."});							myMask.show();														form.submit({								clientValidation: true,								submitEmptyText: false,								url: '../catalogo/direccion/' + operacion_aplicar,								success: function(form, action) {									myMask.hide( );									myMask.disable();																		if (main_grid!=undefined){										main_grid.reload(idcliente_id);									}									if (myscope_prin.winprincipal !=undefined){										myscope_prin.winprincipal.close();									}									alertMsg('Confirmación',action.result.message);												},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		alertMsg('Error' , action.result.message);								}							});																			}else{							alertMsg('Complete los campos requeridos.');						}					}			}		];			this.callParent();			},    	  onResetClick: function(){	        this.getForm().reset();	    },	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){		var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma					valor = record.get(field.getName());					if (valor!=undefined){						//alert('Campo:' + field.getName() + ', valor:' +valor);						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	},		showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			alert('Tipo de consulta inválida.');		}						var gridcps = Ext.create('MyDesktop.view.GridConsultaCPs', { 			isEditable:true,			cp_field:'cp' ,colonia_field:'colonia', municipio_field:'municipio',estado_field:'estado',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 		  		var buscacps_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_window.close();}}		        ]			}); 		gridcps.setScopeWin(buscacps_window);			 buscacps_window.show();		},		setIdCliente:function(idcliente){		this.idcliente=idcliente;	},		setWinPrincipal:function(ventana){		this.winprincipal = ventana;	}	});