Ext.define('MyDesktop.view.GridCotizacionesPreConvenios', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'       // ,'Ext.ux.grid.FiltersFeature'      ],	    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridCotizacionesPreConvenios',   // title: 'Cotizaciones',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	scope_view_principal:undefined,    initComponent: function () {		this.myScope = this;				//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){					}		 var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;		this.store = Ext.create('MyDesktop.store.StoreConvenios',{});		this.selType= 'checkboxmodel';        this.columns = [						{							menuDisabled: true,							sortable: false,							xtype: 'actioncolumn',							width: 30,							items: [								{									getClass: function(v, meta, rec) {										if (rec.get('estatus') == ESTATUS_ACTIVA) {											return 'activo' ;										} if (rec.get('estatus') == ESTATUS_TRANSFORMACION_CONVENIO){											return 'convenio_blue';										} if (rec.get('estatus') >= ESTATUS_CERRADO){											return 'garbage_red';										}else {												return 'desactivado';										}									},									getTip: function(v, meta, rec) {										if (rec.get('estatus') == ESTATUS_ACTIVA) {											return 'Activo' ;										} if (rec.get('estatus') == ESTATUS_TRANSFORMACION_CONVENIO){											return 'Convertido a Convenio';										} if (rec.get('estatus') >= ESTATUS_CERRADO){											return 'Cerrado:['+rec.get('tipocierre')+"] " + rec.get('descripciontipocierre') ;										}else {												return 'Desactivado';										}									},									handler: function(grid, rowIndex, colIndex) {										//var rec = grid.getStore().getAt(rowIndex),										//action = (rec.get('estatus') ==1 ? 'Activo' : 'Desactivado');										//alertMsg(action, action + ' ' + rec.get('nombre'));									}								}							]						},												{text     : 'Id',width: 40,sortable : true,dataIndex: 'idconvenio'},						{text     : 'Creado por',flex     : 1,sortable : true,dataIndex: 'login'},						//{text     : 'Ref.B�squeda',width: 150,sortable : true,dataIndex: 'nombre'},						{text     : 'Lista Precios',width: 90,sortable : true,dataIndex: 'tipo_precios',							renderer:function(value, metaData, record, rowIndex, colIndex, store){								if (value==1){									return '<font color=#0404B4>TODA</font>';								}								return '';							}						},												{text     : 'Fecha',width: 100,sortable : true,dataIndex: 'fechadocumento'},						{text     : 'Cliente',width: 150,sortable : true,dataIndex: 'razonsocial_cte'},						{text     : 'Atencion',width: 150,sortable : true,dataIndex: 'contacto_cte'},						{text     : 'Direccion',width: 200,sortable : true,dataIndex: 'calle_cte', 							renderer:function(value, metaData, record, rowIndex, colIndex, store){								metaData.attr = 'style="white-space:normal"';								var direccion = record.get('calle_cte')+ ', Col.'+  record.get('colonia_cte')+', C.P.' + 								record.get('cp_cte') +', Mun/Del.' + record.get('municipio_cte');								return direccion														}						},						{text     : 'Tarifa',width: 200,sortable : true,dataIndex: 'descripcionTarifarango'},						{text     : 'Descuento',width: 200,sortable : true,dataIndex: 'descripcionDescuento'},						{text     : 'Rango envios',width: 200,sortable : true,dataIndex: 'rangoenvios'},												/* DATOS SEGURO */						{text     : 'ASEGURA?',width: 100,sortable : true,dataIndex: 'asegura',							renderer:function(value, metaData, record, rowIndex, colIndex, store){								if (value==1){									return '<font color=##4CFF33>SI</font>';								}								return '<font color=#FF5733>NO</font>';							}						},						{text     : 'Nombre Seguro',width: 200,sortable : true,dataIndex: 'nombre_seguro'},						{text     : '%',width: 100,sortable : true,dataIndex: 'porcentaje_seguro'}									];			this.callParent();    },	agregar:function(){		//Crea una forma de clientes para agregar los datos		var forma_agregar = Ext.create('MyDesktop.view.FormCotizacion',{id:'agregar_cotizacion_pre',operacion:'insert'}); 		var ventana = Ext.create('widget.window', {			id:'utils-win-cotizacion-agregar',			title: "Agregar Datos Cotizaci�n",			width: 500,			height: 610,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_agregar					});		forma_agregar.setWinPrincipal(ventana);		ventana.show();			},	modificar:function(scope_view_pricipal){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe un registro para modificar.");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a modificar.");     		return;     	}		if ((rows[0].get('estatus') ==ESTATUS_INACTIVA) || (rows[0].get('estatus') ==ESTATUS_CANCELADO) ){     		mensajeAlert("Registro dado de baja o cancelado, operacion inválida");     		return;     	}		if(rows[0].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){     		mensajeAlert("Registro convertido a un convenio, operacion inválida");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_modificar = Ext.create('MyDesktop.view.FormCotizacion',{id:'modificar_cotizacion_pre',			operacion:'update',scope_view_pricipal:scope_view_pricipal}); 		forma_modificar.updateCampos(rows[0]);		var ventana = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Modificar Datos Cotizaci�n",			width: 500,			height: 610,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_modificar					}); 		forma_modificar.setWinPrincipal(ventana);		ventana.show();	},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 mensajeAlert("Seleccione los registros que desea eliminar");     		return;     	}				if(!confirm('Desea desactivar los clientes seleccionados?')){     		return;     	}		},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe un registro para visualizar");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar");     		return;     	}		//Verifica si el registro si la lista de precios es toda la lista de precios NO DEBE PERMITIR 		//Capturar detalle		if(rows[0].get('tipo_precios')==1){     		mensajeAlert("Cotización configurada con toda la lista de precios, no es permitido el detalle.");     		return;     	}		//Crea una forma de clientes para agregar los datos		var forma_showdetails = Ext.create('MyDesktop.view.FormConvenio',{id:'showdetails_convenio',showReadOnly:true}); 		forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Detalles Datos Convenio",			width: 600,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_showdetails					}).show();	},		cerrar:function(scope_view_principal){		var rows =  this.getView().getSelectionModel().getSelection();		var myscope= this;     	if(rows.length <=0){     		 mensajeAlert("Seleccione los registros que desea desactivar");     		return;     	}		     	for(i=0;i<rows.length;i++){     		if(rows[i].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){         		mensajeAlert("Registro " + rows[i].get('nombre') + " fue convertido a un convenio, operación inválida");         		return;         	}     		if(rows[i].get('estatus') ==ESTATUS_AUTORIZADO){         		mensajeAlert("Registro " + rows[i].get('nombre') + " fue autorizado , operación inválida");         		return;         	}     		     		if(rows[i].get('estatus') ==ESTATUS_CERRADO){         		mensajeAlert("Registro " + rows[i].get('nombre') + " fue cerrado o dado de baja "+         				" previamente, operación inválida");         		return;         	}     	}    	     	var gridexcepciones = Ext.create('MyDesktop.view.GridClavesExcepcion',{isConsulta:true});      			var windows_cerrar = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Excepciones disponibles",			width: 500,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: gridexcepciones,			buttons:[			         {text:'Cerrar documento', handler:function(){			        	   //Obtiene los registros seleccionados del grid			        	   var registro = gridexcepciones.getRowSelected();			        	   if (registro==undefined){			        		   mensajeAlert('Seleccione el registro deseado.');			        		   return;			        	   }			        	   			        	   Ext.MessageBox.confirm('Confirmar','Desea cerrar los documentos seleccionados?', function(id, text){				   	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 				   	       		//Obtiene todos los registros seleccionados				   	       			var registros ='';				   	       			for (i=0;i<rows.length;i++){				   	       								   	       				registros = registros+  rows[i].get('idconvenio')+ "|";				   	       			}				   	       							   								   	       			var conn = new Ext.data.Connection();				   	       			conn.request({				   	       				url: '../cotizacionpreconvenio/cambiarestatus' ,				   	       				params:{ids:registros, estatus:ESTATUS_CERRADO,				   	       					tipocierre:registro.get('clave'), 				   	       				descripciontipocierre:registro.get('descripcion')				   	       					},				   	       				success: function(response, opts) {				   	       					var obj = Ext.decode(response.responseText);				   	       					//mensajeConfirm(obj.message);				   	       					//Filtra desde la forma del view principal				   	       				    scope_view_principal.filtrar();				   	       				    windows_cerrar.close();				   	       				},				   	       				failure: function(response, opts) {				   	       					var obj = Ext.decode(response.responseText);				   	       					mensajeAlert(obj.message);				   	       				}				   	       			});				   	       		}			   	       	 	},myscope);			         				         	}			      }			  ]					});				windows_cerrar.show();	},		activar:function(scope_view_principal){		var myscope= this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Seleccione los registros que desea activar");     		return;     	}     	    	for(i=0;i<rows.length;i++){     		if(rows[i].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){     			mensajeAlert("Registro " + rows[i].get('nombre') +     					" fue convertido a un convenio, operaci�n inválida");         		return;         	}    		     	}				 Ext.MessageBox.confirm('Confirmar','Desea activar los documentos seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idconvenio')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../cotizacionpreconvenio/cambiarestatus' ,	       				params:{ids:registros,estatus:ESTATUS_ACTIVA},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeConfirm(obj.message);		       				 		       				if (scope_view_principal!=undefined){	       						scope_view_principal.filtrar();	       					}	       					       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeAlert(obj.message);	       				}	       			});	       		}	       	 },this);					},	desactivar:function(scope_view_principal){		var rows =  this.getView().getSelectionModel().getSelection();		var myscope= this;     	if(rows.length <=0){     		 mensajeAlert("Seleccione los registros que desea desactivar");     		return;     	}		     	for(i=0;i<rows.length;i++){     		if(rows[i].get('estatus') ==ESTATUS_TRANSFORMACION_CONVENIO){         		mensajeAlert("Registro " + rows[i].get('nombre') +          				" fue convertido a un convenio, operación inválida");         		return;         	}    		     	}    			     	 Ext.MessageBox.confirm('Confirmar','Desea desactivar los documentos seleccionados?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idconvenio')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../cotizacionpreconvenio/cambiarestatus' ,	       				params:{ids:registros, estatus:ESTATUS_INACTIVA},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeConfirm(obj.message);	       						       					if (scope_view_principal!=undefined){	       						scope_view_principal.filtrar();	       					}	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					mensajeAlert(obj.message);	       				}	       			});	       		}	       	 },this);					},	reload:function(idcliente){		},	loadInfo:function(){		this.getView().getStore().load();		},	buscar:function(tipobusqueda,fecha,patron,mes){		//Obtiene los tipos de estatus a consultar		this.getView().getStore().reload(					{						params:{tipobusqueda:tipobusqueda,fecha:fecha,patron:patron,mes:mes},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		},	getRegistro:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >0){			return rows[0];		}		return undefined;	},	reasignar:function(scope_view_principal){		var myscope =this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){			mensajeAlert("Seleccione solamente un registro a modificar");     		return;     	}		/*for(i=0;i<rows.length;i++){     		if(rows[i].get('estatus') ==2){     			mensajeAlert("Registro " + rows[i].get('nombre') + " fue convertido a un convenio, operaci�n inválida");         		return;         	}     		    		     	}*/		//Crea una forma de clientes para agregar los datos		var gridUsuarios = Ext.create('MyDesktop.view.GridUsuariosMismoAgrupamiento',{}); 		var windows_reasignar = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Usuarios disponibles",			width: 500,			height: 500,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: gridUsuarios,			buttons:[			         {text:'Asignar', handler:function(){			        	   //Obtiene los registros seleccionados del grid			        	   var registro = gridUsuarios.getRowSelected();			        	   if (registro==undefined){			        		   mensajeAlert('Seleccione el registro deseado.');			        		   return;			        	   }			        	   			        	   Ext.MessageBox.confirm('Confirmar',"Desea reasignar el documento al usuario seleccionado?",			        			   function(id, text){			   	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 			   	       						   	       			var conn = new Ext.data.Connection();			   	       			conn.request({			   	       				url: '../cotizacionpreconvenio/updateUsuarioCreador' ,			   	       				params:{login:registro.get('login'), idconvenio:rows[0].get('idconvenio')},			   	       				success: function(response, opts) {			   	       									   	       				var obj = Ext.decode(response.responseText);				       					//mensajeConfirm(obj.message);				       									       					if (scope_view_principal!=undefined){				       						scope_view_principal.filtrar();				       					}				       					windows_reasignar.close();			   	       				},			   	       				failure: function(response, opts) {			   	       					var obj = Ext.decode(response.responseText);			   	       					mensajeAlert(obj.message);			   	       				}			   	       			});			   	       		}			   	       	 },this);			         				         	}			      }			  ]					}).show();				windows_reasignar.show();					}	});