Ext.define('MyDesktop.view.GridManejoFolios', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridManejoFolios',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	//id:undefined,	isConsulta:false,	myScope:undefined,	numcliente:undefined,	identidad: undefined,   	idorganizacion: undefined,    initComponent: function () {		this.myScope = this;		var me = this;		var myscope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		/*if (!this.isConsulta){			 this.editing = Ext.create('Ext.grid.plugin.CellEditing',{clicksToEdit: 1});			 this.plugins = this.editing;			 			 this.tbar=[				  		{ text: 'Salvar Cambios',iconCls: 'reload_blue',handler:this.saveInfo, scope:this.myScope },					];			 this.bbar=[				  		{ text: 'Zonas',iconCls: 'detalles',handler:this.showDetails,scope:this.myScope },						{xtype: 'tbfill'},							{xtype:'tbseparator'},							{ text: 'Agregar',iconCls: 'agregar',handler:this.filtrar,handler:this.agregar, scope:this.myScope },							{ text: 'Borrar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope }					];	 		}*/				this.store = Ext.create('MyDesktop.store.StoreTipoManejoImpresion',		{baseParams:			{				numcliente:this.numcliente,				identidad:this.identidad,				idorganizacion:this.idorganizacion			}		});				this.store.getProxy().setExtraParam("numcliente", this.numcliente);		this.store.getProxy().setExtraParam("identidad", this.identidad);		this.store.getProxy().setExtraParam("idorganizacion", this.idorganizacion);						this.selType= 'checkboxmodel';        this.columns = [                        {text : 'IdServ',width:50,sortable : true,dataIndex: 'idServicio'},                        {text : 'Servicio',width:180,sortable : true,dataIndex: 'descripcionServicio'},                        						{text : 'Peso',width:70,sortable : true,dataIndex: 'peso'},						{text : 'Cantidad',width:85,sortable : true,dataIndex: 'cantidadAsignada'},						{text : 'Cant.Usada',width:100,sortable : true,dataIndex: 'cantidadUtilizada'}			];        var combo_servicio= Ext.create('Ext.form.ComboBox', {			fieldLabel: 'Servicio',			readOnly: this.operacion=='clonar'?true:false,			editable:false,			//forceSelection:true,			store: Ext.create('MyDesktop.store.StoreServicio',{				proxy: {			        type: 'ajax',			        api: {			            read: '../catalogo/servicio/getServiosDisponibes?identidad='+myscope.identidad+			            "&idorganizacion=" + myscope.idorganizacion			        },			        reader: {			                 type: 'json',			                 successProperty: 'success',			                 root : 'proxiArray',			                 messageProperty: 'message',			                 totalProperty : 'totalCount',			        }				}			}) ,			queryMode: 'local',			emptyText: 'Seleccione Tipo',			displayField: 'descripcion',			valueField: 'idservicio',			name:'idservcombo',			id:'idservcombo'+ myscope.id		});                          this.dockedItems= [                           {                               dock: 'top',                               xtype: 'toolbar',                               items: [                                       									{text: "Eliminar Folio",iconCls:'borrar', handler:function(){																				var rows =  myscope.getView().getSelectionModel().getSelection();									 	if(rows.length <=0){									 		 Ext.Msg.alert('Verificar',"Seleccione el registro que desea eliminar");									 		return;									 	}																			 	Ext.MessageBox.confirm('Confirmar',"Desea eliminar el registro de folio?", function(id, text){									   		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 									   			var conn = new Ext.data.Connection();									   			conn.request({									   				url: '../catalogo/folios/delete',									   				params:{									   					idregistro:rows[0].get("idregistro")									   				},									   				success: function(response, opts) {									   					var obj = Ext.decode(response.responseText);									   					if (obj.success==false){									   						Ext.MessageBox.alert('Confirmacion',obj.message);									   					}else{									   						myscope.buscar();									   					}									   				},									   														   				failure: function(response, opts) {									   					Ext.Msg.alert('Error',response.responseText);																		   				}									   			});									   		}									   	 },myscope);									 										}									,scope:this }                                                                              ]                           },					        {					            dock: 'right',					            xtype: 'toolbar',					            items: [					                    {xtype: 'label', text:'Agregar Folio', labelStyle: 'font-weight:bold'},					                    //{xtype: 'label', text:'Id Servicio', labelStyle: 'font-weight:bold'},					                    combo_servicio,					                   // {xtype: 'textfield',value:'', minValue:1, name:'idservicio', id:'id_idservicio'+this.id,maxLength:6},					                    //{xtype: 'label', text:'Peso(valor entero):'},					                    {xtype: 'numberfield', fieldLabel:'Peso(entero)',  value:1, minValue:1, name:'pesoi', id:'id_pesoi'+this.id,maxLength:6},					                    //{xtype: 'label', text:'Cantidad(valor entero):'},					                    {xtype: 'numberfield',fieldLabel:'Cantidad(entero)',  value:1, minValue:1, name:'cantidadi', id:'id_cantidadi'+this.id,maxLength:6},					                    {text: "Agregar registro",iconCls:'agregar', handler:function(){					            			var peso = Ext.getCmp('id_pesoi'+me.id).getValue();					            			var cantidad = Ext.getCmp('id_cantidadi'+me.id).getValue();					            			if (cantidad<=0){					                			Ext.Msg.alert('Verificar',"Cantidad invalida");					                     		return;					                		}					            			if (peso<=0){					                			Ext.Msg.alert('Verificar',"Peso invalido");					                     		return;					                		}					            			var idservicio = Ext.getCmp('idservcombo'+me.id).getValue();//Ext.getCmp('id_idservicio'+me.id).getValue();					            								            			if (idservicio==undefined || idservicio==''){					            				Ext.Msg.alert('Verificar',"Seleccione el servicio.");					                     		return;					            			}					    	       			var conn = new Ext.data.Connection();					    	       			conn.request({					    	       				url: '../catalogo/folios/insert',					    	       				params:{					    	       					numCliente:myscope.numcliente,					    	       					identidad:myscope.identidad,					    	       					idorganizacion:myscope.idorganizacion,					    	       					cantidadAsignada:cantidad,					    	       					idServicio:idservicio,					    	       					peso:peso					    	       										    	       				},					    	       				success: function(response, opts) {					    	       					var obj = Ext.decode(response.responseText);					    	       					if (obj.success==false){					    	       						Ext.MessageBox.alert('Confirmacion',obj.message);					    	       					}else{					    	       						myscope.buscar();					    	       					}					    	       				},					    	       										    	       				failure: function(response, opts) {					    	       					Ext.Msg.alert('Error',response.responseText);										    	       				}					    	       			});					    	       								            								            								                	}					                    ,scope:this },					                    {xtype: 'label', html:' <hr>', labelStyle: 'font-weight:bold'},					                    {xtype: 'label', html:'Seleccione el registro al que le desea incrementar folios.', labelStyle: 'font-weight:bold'},					                    {xtype: 'label', html:'Cantidad', labelStyle: 'font-weight:bold'},					                    {xtype: 'numberfield',value:1, minValue:1, name:'cantidad', id:'id_cantidad'+this.id,maxLength:6},					                    {text: "Incrementar Folios",iconCls:'descuentos_blue', handler:function(){					                    						                    	var rows =  myscope.getView().getSelectionModel().getSelection();					                     	if(rows.length <=0){					                     		 Ext.Msg.alert('Verificar',"Seleccione el registro que desea modificar");					                     		return;					                     	}					                     						                     						                    		var cantidad = Ext.getCmp('id_cantidad'+me.id).getValue();					                    		if (cantidad<=0){					                    			Ext.Msg.alert('Verificar',"Cantidad invalida");					                         		return;					                    		}						            								        	       			var conn = new Ext.data.Connection();					        	       			conn.request({					        	       				url: '../catalogo/folios/increment',					        	       				params:{					        	       					idregistro:rows[0].get("idregistro"),					        	       					numCliente:myscope.numcliente,					        	       					identidad:myscope.identidad,					        	       					idorganizacion:myscope.idorganizacion,					        	       					cantidadAsignada:cantidad					        	       				},					        	       				success: function(response, opts) {					        	       					var obj = Ext.decode(response.responseText);					        	       					if (obj.success==false){					        	       						Ext.MessageBox.alert('Confirmacion',obj.message);					        	       					}else{					        	       						myscope.buscar();					        	       					}					        	       				},					        	       										        	       				failure: function(response, opts) {					        	       					Ext.Msg.alert('Error',response.responseText);										        	       				}					        	       			});					                    	}					                    ,scope:this }					                    										            ]					        }        ];                				this.callParent();    },	agregar:function(){		  var rec = new MyDesktop.models.ModeloTarifas({			  idserviciotarifa:0,			  idserviciotarifazona:0,			  idtarifa:this.idtarifa,			  idtarifapeso:0,			  idrangoenvios:this.idrangoenvios,			  pesoinicial:1,			  pesofinal:1,			  estatus:1 ,			  pesoamparado:1,			  idrangoinicial:1,			  idrangofinal:1,			  kminicial:1,			  kmfinal:1,			  precio:0,			  volumen:1,			  preciokgsp:0,			  sobrepeso:0,			  idservicio:this.idservicio,			  idformapago:this.idformapago,			  nombre:'',			  descripcion:'',			  zona:'',				  es_visible_pdv:'0'	        }), edit = this.editing;	      edit.cancelEdit();		  var renglon = this.store.count();	      this.store.insert(renglon, rec);	        edit.startEditByPosition({	            row: renglon,	            column: 1	      });	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		},	activar:function(){		var myscope= this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.MessageBox.alert('Verificar',"Seleccione los registros que desea activar");     		return;     	}				 Ext.MessageBox.confirm('Confirmar','Desea activar las tarifas seleccionadas?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idtarifa')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../tarifas/activar' ,	       				params:{idstarifas:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       				 Ext.MessageBox.alert('Confirmaci�n',obj.message);	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					},	desactivar:function(){		var rows =  this.getView().getSelectionModel().getSelection();		var myscope= this;     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea desactivar");     		return;     	}		     	 Ext.MessageBox.confirm('Confirmar','Desea desactivar las tarifas seleccionadas?', function(id, text){	       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 	       		//Obtiene todos los registros seleccionados	       			var registros ='';	       			for (i=0;i<rows.length;i++){	       					       				registros = registros+  rows[i].get('idtarifa')+ "|";	       			}	       			var conn = new Ext.data.Connection();	       			conn.request({	       				url: '../tarifas/desactivar' ,	       				params:{idstarifas:registros},	       				success: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Confirmaci�n',obj.message);	       				},	       				failure: function(response, opts) {	       					var obj = Ext.decode(response.responseText);	       					Ext.Msg.alert('Error',obj.message);	       				}	       			});	       		}	       	 },this);					},	showDetails:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro que desea visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro.");     		return;     	}				//Crea una forma de clientes para agregar los datos		var grid_rangos_tarifa_servicio_zona= Ext.create('MyDesktop.view.GridTarifasServicioZona',				{					id:'showdetails_tarifa_servicio_zona',					isConsulta:false,					idserviciotarifa:rows[0].get('idtarifapeso')		}); 		grid_rangos_tarifa_servicio_zona.buscar();		//forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {			id:'utils-win-agregar-tarifa-servicio-zona',			title: "Detalles Zona Tarifa Servicio ",			width: 550,			height: 400,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_rangos_tarifa_servicio_zona					}).show();	},	eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}    	var myscope =this;    	 Ext.MessageBox.confirm('Confirmacion', 'Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length == 0){  //step 3       				return ;       			}       			var store = this.getView().getStore();       			store.remove(rows);  //step 4       			var scope_this = this;       			store.sync({        			    success: function (proxy, operations) {       			    	scope_this.commitInfo();       			    	myscope.loadInfo();       			    }, failure: function (proxy, operations) {       			    	 if (proxy.exceptions != undefined){       			    		 if (proxy.exceptions.length>0){       			    			 Ext.Msg.show(    	                                 {    	                                	 title: 'Warning',    	                                     msg: proxy.exceptions[0].error,    	                                     buttons: Ext.Msg.OK,    	                                     icon: Ext.Msg.WARNING    	                                 });       			    		 	}       			    		 }       			        store.rejectChanges();       			    }       			});       			       		}       	 },this);			},	loadInfo:function(){		this.getView().getStore().reload(				{					params:{idtarifa:this.idtarifa},					callback:function(r,options,success){						 if (r.length<=0){							 Ext.Msg.show({								 title: 'Aviso',								 msg: 'No existe información con el criterio de busqueda selecionado.',								 modal: false,								 icon: Ext.Msg.INFO,								 buttons: Ext.Msg.OK													 });  													 }					 }	  				});		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		updateSyncStore(this,this.getView().getStore(), true);		/*this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();*/		},	buscar:function(){		this.getView().getStore().reload(					{						params:{idtarifa:this.idtarifa},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe informaci�n con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		}	});