Ext.define('MyDesktop.form.FormUploadAttachmentAgenda', { extend: 'Ext.form.Panel',    xtype: 'contact-form',    frame: false,    width: 400,    layout: 'anchor',    border: false,    bodyPadding: 10,    fieldDefaults: {        labelAlign: 'top',        labelWidth: 100,        labelStyle: 'font-weight:bold'    },	comboTipos:undefined,	showReadOnly:false,    defaults: {        anchor: '100%',        margins: '5 0 10 5'    },    url: '../attachment/upload',	myscope:undefined,	identificador:undefined,	idtipodocumento: undefined,	gridscope:undefined, 	initComponent: function () {		this.myscope=this;		var scope = this;		var grid_scope = this.gridscope;        this.items= [            {xtype:'hidden', name:'identificador', value:this.identificador, allowBlanks:false },            {xtype:'hidden', name:'idtipodocumento', value:this.idtipodocumento, allowBlanks:false },                    {	            xtype: 'myUpperCaseTextArea',	            name: 'descripcion',	            fieldLabel: 'Descripción',	            allowBlank:false	        },{	            xtype: 'filefield',	            id: 'form-file-fail',	            emptyText: '',	            fieldLabel: 'Archivo',	            name: 'file_upload',	            allowBlank:true,	            buttonText: '',	            buttonConfig: {	                iconCls: 'folder_white'	            }	        }	    ];		this.buttons= [				{				    text: 'Limpiar',				    iconCls:'limpiar_white',				    handler: function() {				        this.up('form').getForm().reset();				    }				},				{ hidden: this.showReadOnly, text: 'Salvar', iconCls:'activo',handler:function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Agregando información espere..."});							myMask.show();														form.submit({								clientValidation: true,								url: scope.url,								success: function(form, action) {									myMask.hide( );									myMask.disable();									alertMsg('Confirmación',action.result.message);									grid_scope.loadInfo();												},								failure: function(form, action) {									myMask.hide( );									myMask.disable();																		alertMsg('Error' , action.result.message);								}							});																			}else{							alertMsg('Verifique' ,'Complete los campos requeridos.');						}					}		        }		];			this.callParent();			},       	updateCampos:function(record){		//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		this.updateFieldName(record,fields);							},	updateFieldName:function(record, fields){		var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					//busca el nombre del campo que debe ser el mismo del nombre del campo de 					//la forma					valor = record.get(field.getName());					if (valor!=undefined){						//alert('Campo:' + field.getName() + ', valor:' +valor);						field.setValue(valor);					}else{						field.setValue("");					}								}			}		}	},	updateFieldReadOnly:function(record){			//alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;				var items = fields.items;		var valor ="";		for(i = 0; i < items.length; i++){			field = items[i];			if (field!=undefined){				if (field.getName()!=undefined){					field.setReadOnly(true);								}			}		}				this.updateCampos(record);	},		showGridCps: function(b, e){		var fields = Ext.getCmp(this.id).getForm().getFields( ) ;		var tipoconsulta='cp'  ;		var patron ='';		var boton = b.id.split("_")[0];		if (boton=='btnBuscarCP'){			 tipoconsulta='cp'  ;			 patron=getValueFormField('cp',fields);   //Ext.getCmp('idcp').getValue();		}else if (boton=='btnBuscarColonia'){			 tipoconsulta='colonia'  ;			 patron=getValueFormField('colonia',fields);   //Ext.getCmp('idcolonia').getValue();		}else if (boton=='btnBuscarMunicipio'){			 tipoconsulta='municipio'  ;			 patron=getValueFormField('municipio',fields);   //Ext.getCmp('idmunicipio').getValue();		}else{			alert('Tipo de consulta inválida.');		}						var gridcps = Ext.create('MyDesktop.view.GridConsultaCPs', { 			isEditable:true,			cp_field:'cp' ,colonia_field:'colonia', municipio_field:'municipio',estado_field:'estado',			fields: fields,form:Ext.getCmp(this.id).getForm(),			tipoconsulta:tipoconsulta,patron:patron,			cp:patron, colonia:patron,municipio: patron		}); 		  		var buscacps_window = new Ext.Window({				width    : 880,height   : 350,				layout   : 'border',				title	: 'Busqueda de códigos postales',				closable:false,				headerPosition: 'left',				items    : [				   {items   : gridcps,layout :'fit',region :'center',height   : 100}				   ],				buttons: [					{text   : 'Salir',handler: function(){buscacps_window.close();}}		        ]			}); 		gridcps.setScopeWin(buscacps_window);			 buscacps_window.show();		}	});