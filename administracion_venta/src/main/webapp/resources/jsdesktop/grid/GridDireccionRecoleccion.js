Ext.define('MyDesktop.grid.GridDireccionRecoleccion', {    extend: 'Ext.grid.Panel',    requires: [               'Ext.grid.column.Action',               'Ext.grid.plugin.CellEditing',               'Ext.form.field.Text',               'Ext.toolbar.TextItem'           ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	tipobusqueda:undefined,	campo_filtro:undefined,	tipo_direccion:undefined,	showCuentas:false, //true= Muestra cuentas cliente, false:muestra direcciones de recoleccion	//Datos de recoleccion	razonsocialsol:undefined,	numcliente:undefined,	contrato:undefined,	isclientecolicitante:false,		idnumclientesol:undefined,	idnumcontratosol:undefined,	idrazonsolsol:undefined,		//Variables que contienen los nombres de los campos a modificar	razonsocial:undefined,	calle:undefined,	telefono:undefined,	fax:undefined,	cp:undefined,	colonia:undefined,	municipio:undefined,	estado:undefined,	ciudad:undefined,	atencion:undefined,	rfc:undefined,	depto:undefined, 	numcelular:undefined,	idremdes:undefined,	idregistro:undefined,	correoe:undefined,	filterTxt:'razonsocial',	scope_win:undefined,	form:undefined,	filterTxt:undefined,	campo_filtro:undefined,	patron:undefined,    initComponent: function () {		this.myScope = this;		if (this.showCuentas){			this.store = Ext.create('MyDesktop.store.StoreClientes',{					autoLoad: true,					proxy: {				        type: 'ajax',				        api: {				            read: '../direccionrecoleccion/getDatosCuentas?tipobusqueda=2&patronbusqueda='+this.patron				        },				        reader: {				                 type: 'json',				                 successProperty: 'success',				                 root : 'proxiArray',				                 messageProperty: 'message',				                 totalProperty : 'totalCount',				        },				        writer: {				            	 type: 'json',				                 writeAllFields: true,				                 encode: false,				                 root: 'proxiArray'				        },					}				});			}else{				this.store = Ext.create('MyDesktop.store.StoreClientes',{					autoLoad: true,					proxy: {				        type: 'ajax',				        api: {				            read: '../direccionrecoleccion/busquedaDireccionRecoleccion?filterTxt='+this.filterTxt+				            '&campo_filtro='+this.campo_filtro+'&patron='+this.patron				        },				        reader: {				                 type: 'json',				                 successProperty: 'success',				                 root : 'proxiArray',				                 messageProperty: 'message',				                 totalProperty : 'totalCount',				        },				        writer: {				            	 type: 'json',				                 writeAllFields: true,				                 encode: false,				                 root: 'proxiArray'				        },					}				});			}				 	this.columns = [		 	               		{header:'Contrato',dataIndex:'contrato', sortable: true,width:100,  menuDisabled: true}, 		 	               		{header:'NumCte.',dataIndex:'numCliente', sortable: true,width:100,  menuDisabled: true}, 								{header:'Razon Social',dataIndex:'razonSocial', sortable: true,width:100,  menuDisabled: true}, 								{header:'Atencion',dataIndex:'atencion', sortable: true,width:100,  menuDisabled: true}, 								{header:'R.F.C',dataIndex:'rfc', sortable: true,width:100,  menuDisabled: true}, 								{header:'Calle',dataIndex:'calle',sortable: true,width:100,  menuDisabled: true}, 								{header:'C.P',dataIndex:'cp',sortable: true,width:50,  menuDisabled: true}, 								{header:"Colonia", dataIndex:'colonia',sortable: true,width:150,  menuDisabled: true},								{header:"Municipio", dataIndex:'municipio',sortable: true,width:150, menuDisabled: true},								{header:"Ciudad", dataIndex:'ciudad',sortable: true,width:80, menuDisabled: true},								{header:"Estado", dataIndex:'estado',sortable: true,width:120, menuDisabled: true},								{header:"Telefono", dataIndex:'telefono',sortable: true,width:110, menuDisabled: true}				];		 		 	//Configura la funcion del listener	        if (!this.showCuentas){	        	this.listeners={	    				itemclick:this.selectRegistro	    			};	        }else{	        	this.listeners={	    				itemclick:this.selectRegistroDireccionRecol	    			};	        }	        this.callParent();    },    selectRegistroDireccionRecol:function (dv, record, item, rowIndex, e){    	//TODO: Verificar que actualice info		var fields = this.form.getFields( ) ;	        var row = this.getStore().getAt(rowIndex);                if (this.idnumclientesol!=undefined){			setValueFormField(this.idnumclientesol,fields,row.get('numCliente'));		}                if (this.idnumcontratosol!=undefined){			setValueFormField(this.idnumcontratosol,fields,row.get('contrato'));		}                if (this.idrazonsolsol!=undefined){			setValueFormField(this.idrazonsolsol,fields,row.get('razonSocial'));		}                var myscope = this;        Ext.MessageBox.confirm('Confirma', '¿La dirección de la cuenta es la misma que la de la recolección?',        	function(btn){        			        	if ( (btn=='OK') || (btn=='ok')|| (btn=='YES')|| (btn=='yes') || (btn=='Yes')){		        		myscope.selectRegistro(dv, record, item, rowIndex, e);		        	}        	}	        , myscope);                    	if (this.scope_win!=undefined){			this.scope_win.close();		}                    },    selectRegistro:function (dv, record, item, rowIndex, e){		//TODO: Verificar que actualice info		var fields = this.form.getFields( ) ;	        var row = this.getStore().getAt(rowIndex);              		if (this.razonsocial!=undefined){			setValueFormField(this.razonsocial,fields,row.get('razonSocial'));		}				  if (this.atencion!=undefined){				setValueFormField(this.atencion,fields,row.get('atencion'));			}		   if (this.ciudad!=undefined){				setValueFormField(this.ciudad,fields,row.get('ciudad'));			}							if (this.colonia!=undefined){				setValueFormField(this.colonia,fields,row.get('colonia'));			}						if (this.municipio!=undefined){				setValueFormField(this.municipio,fields,row.get('municipio'));			}			if (this.estado!=undefined){				setValueFormField(this.estado,fields,row.get('estado'));			}        if (this.calle!=undefined){			setValueFormField(this.calle,fields,row.get('calle'));		}                if (this.cp!=undefined){			setValueFormField(this.cp,fields,row.get('cp'));		}                if (this.telefono!=undefined){			setValueFormField(this.telefono,fields,row.get('telefono'));		}        if (this.fax!=undefined){			setValueFormField(this.fax,fields,row.get('fax'));		}              if (this.rfc!=undefined){			setValueFormField(this.rfc,fields,row.get('rfc'));		}        if (this.numcelular!=undefined){			setValueFormField(this.numcelular,fields,row.get('numcelular'));		}        if (this.depto!=undefined){			setValueFormField(this.depto,fields,row.get('departamento'));		}        if (this.idregistro!=undefined){			setValueFormField(this.idregistro,fields,row.get('idregistro'));		}        if (this.correoe!=undefined){			setValueFormField(this.correoe,fields,row.get('correoe'));		}                		if (this.scope_win!=undefined){			this.scope_win.close();		}				    },    setMainWindow:function(main_window){    	this.scope_win=main_window;    }	});