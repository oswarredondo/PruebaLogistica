Ext.define('MyDesktop.grid.GridUsuariosPDV', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	identidad:undefined,	idorganizacion:undefined,	numcliente:undefined,	login:undefined,	mostrarSoloUsuarioConNivelSuperior:false,    initComponent: function () {		this.myScope = this;						this.store = Ext.create('MyDesktop.store.StoreOficinasReceptorasPDVs',{			autoLoad: true,		    loadMask : true,			autoSave: true,		    autoSync: true,			proxy: {		        type: 'ajax',		        api: { 		        	read: '../catalogo/usuario/getPDVAsignadosAlUsuario?tipo=2&login='+this.login		        },		        reader: {		                 type: 'json',  successProperty: 'success',		                 root : 'proxiArray', messageProperty: 'message',		                 totalProperty : 'totalCount',		        },		        writer: {		            	 type: 'json', writeAllFields: true,		                 encode: false, root: 'proxiArray'		        }			}		});				var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.selType= 'checkboxmodel';        this.columns = [            //{ text: 'Usuario/Login', width: 140, sortable : true, dataIndex: 'login'},			{ text: 'Oficina PDV',width: 200, sortable : true,dataIndex: 'idoficina'}		];        this.bbar = [                {text:'Asignar',iconCls:'convenio_blue', scope: this, handler:this.asignarConvenio},                {text:'Desasignar',iconCls:'desactivado', scope: this, handler:this.desasignarConvenio}         ]        		this.callParent();    },	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows[0];		}		return undefined;	},	getRows:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows;		}		return undefined;	},    asignarConvenio:function(){    	var myscope = this;    	/*var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro para asignar");     		return;     	}		if(rows.length >1){			mensajeAlert("Seleccione solamente un registro a asignar");     		return;     	}*/    	Ext.MessageBox.show({            title: 'Asignar PDVs',            msg: 'Indique los numeros de oficina que desea asignar, si son más de uno separar con comas:',            width:300,            buttons: Ext.MessageBox.OKCANCEL,            multiline: true,            fn: function(btn, text){            	if ( (btn=='OK') || (btn=='ok')){            		var conn = new Ext.data.Connection();           			conn.request({           				url: '../catalogo/usuario/insertUsuarioPDVs' ,           				params:{           					login: myscope.login,           					numcliente: myscope.numcliente,           					identidad: myscope.identidad,           					idorganizacion: myscope.idorganizacion,           					idoficinas:text           				},           				success: function(response, opts) {           					var obj = Ext.decode(response.responseText);        					if (obj.message!=undefined){        						mensajeConfirm(obj.message);           						           					}           					myscope.getView().getStore().reload();           				},           					           				failure: function(response, opts) {           					var obj = Ext.decode(response.responseText);        					if (obj.message!=undefined){        						mensajeConfirm(obj.message);           						           					}else{           						Ext.Msg.alert('Error',response.responseText);           					}           					           				}           			});            	}            	            	            }        });    },    desasignarConvenio:function(){    	var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}		//Obtiene los id		var oficinas='';		for(i=0;i<rows.length;i++){			oficinas=oficinas+rows[i].get('idoficina')+',';					}		var myscope= this;    	 Ext.MessageBox.confirm('Confirmacion', '¿Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			       			if(rows.length === 0){  //step 3       				return ;       			}       			var conn = new Ext.data.Connection();				conn.request({												url: '../catalogo/usuario/desasignaroficinadelusuario' ,						params:{oficinas: oficinas, login:myscope.login},						success: function(response, opts) {							var obj = Ext.decode(response.responseText);							myscope.getView().getStore().reload();						},						failure: function(response, opts) {			    			if (response.responseText!=undefined){			    				var obj = Ext.decode(response.responseText);			    				if (obj.message!=undefined){			    					mensajeAlert(obj.message);				       			}				       		}												}					});       		}       	 },this);    }		});