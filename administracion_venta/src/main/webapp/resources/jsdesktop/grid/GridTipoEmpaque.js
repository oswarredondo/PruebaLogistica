Ext.define('MyDesktop.grid.GridTipoEmpaque', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	descripcion:undefined,	clave:undefined,	scope_win:undefined,    initComponent: function () {		this.myScope = this;						this.store = Ext.create('MyDesktop.store.StoreTiposEmpaque',{});				var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.selType= 'checkboxmodel';        this.columns = [                        {header:'Descripcion',dataIndex:'descripcion', sortable: true,width:200,  menuDisabled: true}		];        this.listeners={				itemclick:this.selectRegistro			};        		this.callParent();		    },    selectRegistro:function (dv, record, item, rowIndex, e){		        var row = this.getStore().getAt(rowIndex);                if (this.descripcion!=undefined){			setValueFormField(this.descripcion,this.fields,row.get('descripcion'));		}                if (this.clave!=undefined){			setValueFormField(this.clave,this.fields,row.get('clave'));		}                if (this.scope_win!=undefined){        	this.scope_win.close();        }		    },    	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows[0];		}		return undefined;	},	getRows:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows;		}		return undefined;	},    setMainWindow:function(main_window){    	this.scope_win=main_window;    }		});