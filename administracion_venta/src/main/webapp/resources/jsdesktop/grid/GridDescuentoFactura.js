Ext.define('MyDesktop.grid.GridDescuentoFactura', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	//id:undefined,	isConsulta:false,	myScope:undefined,	idconvenio:undefined,	ispantallaconvenio:false,    initComponent: function () {		this.myScope = this;				//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){			 			 this.tbar=[				  								];			 			 			 this.bbar=[						{ text: 'Agregar',iconCls: 'agregar',handler:this.filtrar,handler:this.agregar, scope:this.myScope },						{xtype:'tbseparator'},						{ text: 'Modificar',iconCls: 'editar',handler:this.filtrar,handler:this.modificar, scope:this.myScope },						{xtype:'tbseparator'},						{ text: 'Borrar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope },						{xtype:'tbfill'},						{ text: 'Reload',iconCls: 'reload_blue',handler:this.buscar, scope:this.myScope }											];		}		if (!this.ispantallaconvenio){			this.store = Ext.create('MyDesktop.store.StoreDescuentoRangoFactura',{				baseParams:{idconvenio:this.idconvenio			}});			this.store.getProxy().setExtraParam("idconvenio", this.idconvenio);		}else{			this.store = Ext.create('MyDesktop.store.StoreDescuentoRangoFactura',{				 autoSync: true,				    autoLoad: true							});		}				this.selType= 'checkboxmodel';                this.columns = [					{text     : 'Rango Inicial',width: 200,sortable : false,dataIndex: 'rangoinicial'},					{text     : 'Rango final',width: 200,sortable : false,dataIndex: 'rangofinal'},					{text     : 'Descuento',width: 200,sortable : false,dataIndex: 'descuento'},									];			this.callParent();    },        buscar:function(){    	if (!this.ispantallaconvenio){    		this.getView().getStore().reload(					{						//params:{idserviciotarifa:this.idserviciotarifa},						callback:function(r,options,success){							 if (r.length<=0){											 }						 }	  					});    	}else{    		    		 this.buscarDatos(this.idconvenio);    	}			},		setIdConvenio:function(idconvenio){		this.idconvenio = idconvenio;		this.buscarDatos(idconvenio);	},		 buscarDatos:function(idconvenio){					this.getView().getStore().reload(						{							params:{idconvenio:idconvenio},							callback:function(r,options,success){								 if (r.length<=0){								 }							 }	  						});				},	agregar:function(){		this.insertupdate(undefined,'insert');	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}		this.insertupdate(rows[0],'update');	},	insertupdate:function(row, accion){				//Crea una forma de clientes para agregar los datos		var form_rango_factura= Ext.create('MyDesktop.form.FormConvenioDescuentoFact',				{			showReadOnly:false, isConsulta:false, 			operacion:accion,					idconvenio:this.idconvenio,					grid_principal: this					/*,					idconveniodescfact:row.get('idconveniodescfact')*/				}		); 		if (accion =='update'){			form_rango_factura.updateCampos(row);					}				//forma_showdetails.updateFieldReadOnly(rows[0]);		Ext.create('widget.window', {					title: (accion=='update' ? 'Actualizar '  : 'Agregar ' ) + " Rango",			width: 350,			height: 200,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: form_rango_factura		}).show();			},		eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}     	if(rows.length >1){    		 Ext.Msg.alert('Verificar',"Seleccione solamente un registro ");    		return;    	}		var myscope =this;    	 Ext.MessageBox.confirm('Confirmacion', 'Â¿esea borrar el registro seleccionado?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			       			var store = this.getView().getStore();       			store.remove(rows);  //step 4       			       			var conn = new Ext.data.Connection();       	   		conn.request({       	   				scope:myscope,        					url: '../convenio/descuentofactura/delete' ,       					params:{       						idconvenio:rows[0].get('idconvenio'),       						idconveniodescfact:rows[0].get('idconveniodescfact')        					},       					success: function(response, opts) {       						       						       						var obj = Ext.decode(response.responseText);       						myscope.buscar();       					},       					failure: function(response, opts) {       		       			if (response.responseText!=undefined){       		       				var obj = Ext.decode(response.responseText);       		       				if (obj.message!=undefined){       		       					mensajeAlert(obj.message);       			       			}       			       		}       	       			       					}       	   		});         	   		       		}       	 },this);	},			});