Ext.define('MyDesktop.grid.GridDiasProgramados', {    extend: 'Ext.grid.Panel',    requires: [               'Ext.grid.column.Action',               'Ext.grid.plugin.CellEditing',               'Ext.form.field.Text',               'Ext.toolbar.TextItem'           ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	iddocumento:'',	tiporecol:undefined,	columnas:undefined,    initComponent: function () {		var myscope = this;		this.store = Ext.create('MyDesktop.store.StoreDiasProgramados',				{baseParams:					{						solicitud:this.iddocumento,tiporecol:this.tiporecol,							idsolicitud:this.iddocumento, idrecoleccion:this.iddocumento					}}				);	       		this.store.getProxy().setExtraParam("solicitud", this.iddocumento);		this.store.getProxy().setExtraParam("tiporecol", this.tiporecol);		this.store.getProxy().setExtraParam("idsolicitud", this.iddocumento);		this.store.getProxy().setExtraParam("idrecoleccion", this.iddocumento);				var store_datos_dias = Ext.create('MyDesktop.store.StoreDiasSemana',{});		this.selType= 'checkboxmodel';		//Columnas por default		 this.columns = [							{text     : 'Dia',width: 120,sortable : false,dataIndex: 'diasemanames',								renderer:function (value, metaData, record, rowIndex, colIndex, store) {									var valor = value;									if (myscope.tiporecol=='1'){		                				store_datos_dias.each( function(record){		                					if (value ==record.get('idtipo')){		                						valor=record.get('descripcion');		                					}		                				}, myscope )		                			}		                			return valor;		                		} 								},							{text     : 'Hora/Observacion',width: 250,sortable : false,dataIndex: 'observacion'}			];		this.bbar=[		           { iconCls:'agregar',text:'Agrega un registro', handler:myscope.showAgregarRegistro,		        	   	scope:myscope},		        	    {xtype:'tbfill'},	     		        	 { iconCls:'borrar',text:'Borrar Registro', handler:myscope.showBorrarRegistro,		        	   		scope:myscope}     		       		     ];       			this.callParent();    },    showAgregarRegistro:function(){    	//var rows =  this.getView().getSelectionModel().getSelection();    	var formDiaSemana ;    	if (this.tiporecol=='1'){        	formDiaSemana = Ext.create('MyDesktop.form.FormDiaSemana',    				{           				idsolicitud:this.iddocumento,        				grid_scope:this    				}); 		}else{			formDiaSemana = Ext.create('MyDesktop.form.FormDiaMes',    				{           				idsolicitud:this.iddocumento,        				grid_scope:this    				}); 		}    	    	var main_window = Ext.create('widget.window', {			title: "Programación de Recolección:"+this.iddocumento,			iconCls: 'editar',			width: 400,			height: 150,			modal:true,			resizable:false,			plain: true,			headerPosition: 'top',			layout: 'fit',			items: formDiaSemana					});		main_window.show();		formDiaSemana.setWinPrincipal(main_window);		    },        showBorrarRegistro:function(){    	var rows =  this.getView().getSelectionModel().getSelection();    	var idsolicitud='';    	var myscope=this;    	for(i=0;i<rows.length;i++){    		idsolicitud= idsolicitud +rows[i].get('idregistro')+",";     	}    	    	if (idsolicitud==''){    		mensajeAlert('Seleccione los registros que desea borrar.');    	}    	    	    	      	  Ext.MessageBox.confirm('Confirma', '�Desea borrar los registros seleccionados?', function(btn){    		  if ( (btn=='OK') || (btn=='ok')|| (btn=='YES')|| (btn=='yes') || (btn=='Yes')){	  			var conn = new Ext.data.Connection();	  			conn.request({	  						url : "../diassolicitud/borrarProgramacion" +	  						"?idsolicitud=" + idsolicitud+"&tiporecol="+this.tiporecol,	  						success : function(resp, opts) {		  							myscope.reloadInfo();	  						},	  						failure : function(resp, opts) {		  							mensajeAlert("Error al intentar guardar la informacion.");	  							return;	  						}	  					});    		  }         }, this);		    },	reloadInfo:function(){		this.getView().getStore().reload();		},    buscar:function(parametros){    	if (parametros==undefined){    		parametros={};    	}		this.getView().getStore().reload(					{						params:parametros,						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});		},	});