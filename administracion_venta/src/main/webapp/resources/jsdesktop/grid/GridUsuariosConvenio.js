Ext.define('MyDesktop.grid.GridUsuariosConvenio', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action'    ],    stateful: true,    collapsible: false,    multiSelect: true,    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	identidad:undefined,	idorganizacion:undefined,	numcliente:undefined,	login:undefined,	mostrarSoloUsuarioConNivelSuperior:false,    initComponent: function () {		this.myScope = this;						this.store = Ext.create('MyDesktop.store.StoreUsuarioConvenioFolio',{			baseParams:{				login:this.login,				numcliente:this.numcliente,				identidad:this.identidad,				idorganizacion:this.idorganizacion			}			});		this.store.getProxy().setExtraParam("login", this.login);		this.store.getProxy().setExtraParam("numcliente", this.numcliente);		this.store.getProxy().setExtraParam("identidad", this.identidad);		this.store.getProxy().setExtraParam("idorganizacion", this.idorganizacion);				var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;		this.selType= 'checkboxmodel';        this.columns = [            //{ text: 'Usuario/Login', width: 140, sortable : true, dataIndex: 'login'},			{ text: 'Convenio',width: 200, sortable : true,dataIndex: 'idconvenio'}		];        this.bbar = [                {text:'Asignar Convenio(s)',iconCls:'convenio_blue', scope: this, handler:this.asignarConvenio},                {text:'Desasignar Convenio(s)',iconCls:'desactivado', scope: this, handler:this.desasignarConvenio}         ]        		this.callParent();    },	getRowSelected:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows[0];		}		return undefined;	},	getRows:function(){		var rows =  this.getView().getSelectionModel().getSelection();		if(rows.length >=1){			return rows;		}		return undefined;	},    asignarConvenio:function(){    	var myscope = this;    	/*var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro para asignar");     		return;     	}		if(rows.length >1){			mensajeAlert("Seleccione solamente un registro a asignar");     		return;     	}*/    	Ext.MessageBox.show({            title: 'Asignar convenios',            msg: 'Indique el numero de convenio, si son más de uno separar con comas:',            width:300,            buttons: Ext.MessageBox.OKCANCEL,            multiline: true,            fn: function(btn, text){            	if ( (btn=='OK') || (btn=='ok')){            		var conn = new Ext.data.Connection();           			conn.request({           				url: '../convenio/insertUsuarioConvenios' ,           				params:{           					login: myscope.login,           					numcliente: myscope.numcliente,           					identidad: myscope.identidad,           					idorganizacion: myscope.idorganizacion,           					idconvenio:text           				},           				success: function(response, opts) {           					var obj = Ext.decode(response.responseText);        					if (obj.message!=undefined){        						mensajeConfirm(obj.message);           						           					}           					myscope.getView().getStore().reload();           				},           					           				failure: function(response, opts) {           					var obj = Ext.decode(response.responseText);        					if (obj.message!=undefined){        						mensajeConfirm(obj.message);           						           					}else{           						Ext.Msg.alert('Error',response.responseText);           					}           					           				}           			});            	}            	            	            }        });    },    desasignarConvenio:function(){    	var myscope = this;    	var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro para asignar");     		return;     	}		if(rows.length >1){			mensajeAlert("Seleccione solamente un registro a asignar");     		return;     	}    	Ext.MessageBox.confirm("Confirmación","Eliminar asignación de convenio", function(btn){              		if ( (btn=='OK') || (btn=='ok')|| (btn=='YES')|| (btn=='yes') || (btn=='Yes')){            		var conn = new Ext.data.Connection();           			conn.request({           				url: '../convenio/deleteUsuarioConvenios' ,           				params:{           					idregistro:rows[0].get('idregistro'),           					login: myscope.login,           					numcliente: myscope.numcliente,           					identidad: myscope.identidad,           					idorganizacion: myscope.idorganizacion,           					idconvenio:rows[0].get('idconvenio')           				},           				success: function(response, opts) {           					myscope.getView().getStore().reload();           				},           					           				failure: function(response, opts) {           					Ext.Msg.alert('Error',response.responseText);           				}           			});            	}        });    }		});