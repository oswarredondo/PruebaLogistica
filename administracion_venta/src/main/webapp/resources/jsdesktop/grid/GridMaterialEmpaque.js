Ext.define('MyDesktop.grid.GridMaterialEmpaque', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridAdicional',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	idconvenio:undefined,	    initComponent: function () {		this.myScope = this;		//Si el grid no es de consulta entonces muestra la barra para administrar los datos		if (!this.isConsulta){			 this.editing = Ext.create('Ext.grid.plugin.CellEditing',{clicksToEdit: 1});			 this.plugins = this.editing;			 			 this.tbar=[												{ text: 'Salvar Cambios',iconCls: 'reload_blue',handler:this.saveInfo, scope:this.myScope },												{xtype: 'tbfill'},						{ text: 'Agregar',iconCls: 'agregar',handler:this.agregar, scope:this.myScope },						{xtype:'tbseparator'},						{ text: 'Borrar',iconCls: 'borrar',handler:this.eliminar,scope:this.myScope }									];		}				this.store = Ext.create('MyDesktop.store.StoreMaterialEmpaque',{});		this.selType= 'checkboxmodel';        this.columns = [						{text     : 'Descripcion',width: 290,sortable : true,dataIndex: 'descripcion',							field: {								xtype: 'myUpperCaseTextField',			                    maxLength:100,			                    minLength:1,			                    required:true,			                    enforceMaxLength:true							}							},						{text     : 'Cantidad',width: 95,sortable : true,dataIndex: 'cantidad',							align: 'right',							editor: {								xtype: 'numberfield',								value: 1,								maxValue: 9999999,								allowDecimals:true,								decimalPrecision:0,								decimalSeparator:'.',								thousandSeparator:',',						        required:true,						        minValue: 1						       							}									},						{text     : 'Precio Unit.',width: 120,sortable : true,dataIndex: 'precio',							align: 'right',renderer: 'usMoney',							editor: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',								thousandSeparator:',',						        required:true,						        minValue: 1.0						       							}									},						{text     : 'Total',width: 140,sortable : true,dataIndex: 'precio',							align: 'right',renderer: 'usMoney',							renderer:function (value, metaData, record, rowIndex, colIndex, store) {	                			return "$ " + record.get('cantidad')*record.get('precio');	                		} 							},															];			this.callParent();    },	agregar:function(){		  var rec = new MyDesktop.models.ModeloMaterialEmpaque({			  identificador: 0,			  clave:'',			  descripcion: '',			  precio:0.0,			  cantidad:1,			  idtipo:this.idconvenio,			  tipoincremento:0	        }), edit = this.editing;	      edit.cancelEdit();	      this.store.insert(0, rec);	        edit.startEditByPosition({	            row: 0,	            column: 1	      });	        	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}			},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}		    	 Ext.MessageBox.confirm('Confirmacion', 'Â¿Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			this.getView().getStore().remove(rows);  //step 4       			this.commitInfo();       		}       	 },this);     	 				},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		},	loadInfo:function(){		this.getView().getStore().load();		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		/*this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();*/		updateSyncStore(this,this.getView().getStore(), true);		},	getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	},	loadInfoWithId:function(id, permiteacceso){		this.permiteacceso = permiteacceso!=undefined?permiteacceso:true;		this.idconvenio = id;		this.store.getProxy().setExtraParam("idtipo", this.idconvenio);		this.reload(this.idconvenio);	},		reload:function(id){		this.idconvenio = id;		this.getView().getStore().reload(				{					params:{idtipo:this.idconvenio},					callback:function(r,options,success){						 if (r.length<=0){						 }					 }	  				});			}	});