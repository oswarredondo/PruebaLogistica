Ext.define('MyDesktop.form.FormCarteraDirecciones', {	extend : 'Ext.form.Panel',	xtype : 'admin-cartera-direcciones-form',	frame : false,	width : 400,	layout : 'anchor',	border : false,	bodyPadding : 10,	method : 'POST',	defaultType : 'textfield',	fieldDefaults : {		// labelAlign: 'top',		labelWidth : 100,		labelStyle : 'font-weight:bold'	},	comboTipos : undefined,	showReadOnly : false,	defaults : {		anchor : '100%',		margins : '0 0 10 0'	},	forma : undefined,	myscope : undefined,	idcliente : undefined,	operacion : undefined,	login : undefined,	main_grid : undefined,	main_window : undefined,	showBtnSalvar : false,	btnTitleSalvar : titulo_btn_guardar,	initComponent : function() {		var main_grid = this.main_grid;		var operacion_aplicar = this.operacion;		var idcliente_id = this.idcliente == undefined ? '' : this.idcliente;		this.comboTipos = Ext.create('MyDesktop.store.StoreTiposPersona', {});		this.myscope = this;		var scope_main = this;		this.items = [				{					xtype : 'hidden',					name : "_csrf",					value : vt				},				{					xtype : 'hidden',					name : 'iddireccion'				},				{					xtype : 'hidden',					name : 'idregistro'				},				{					xtype : 'hidden',					name : 'numCliente',					value : this.login				},				{					xtype : 'combobox',					fieldLabel : field_Tipo,					editable : false,					name : 'tipoDireccion',					store : Ext.create(							'MyDesktop.store.StoreTipoDireccionCartera', {}),					width : 300,					valueField : 'idtipo',					displayField : 'descripcion',					enforceMaxLength : true,					maxLength : 30,					typeAhead : true,					queryMode : 'local',					allowBlank : false,					emptyText : ''				}, {					xtype : 'myUpperCaseTextField',					name : 'rfc',					fieldLabel : fieldForzoso(field_rfc),					emptyText : '',					allowBlank : false,					enforceMaxLength : true,					maxLength : 20				}, {					xtype : 'myUpperCaseTextField',					name : 'razonSocial',					fieldLabel : fieldForzoso(field_razonsocial),					emptyText : '',					allowBlank : false,					enforceMaxLength : true,					maxLength : 40				}, {					xtype : 'myUpperCaseTextField',					flex : 4,					fieldLabel : field_atencion,					name : 'atencion',					width : 100,					margins : '0 0 0 0',					allowBlank : true,					enforceMaxLength : true,					maxLength : 40				}, {					xtype : 'myUpperCaseTextField',					name : 'calle',					fieldLabel : fieldForzoso(field_calle),					emptyText : '',					allowBlank : false,					enforceMaxLength : true,					maxLength : 40				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : field_numinterior,					name : 'numinterior',					width : 100,					margins : '0 0 0 5',					enforceMaxLength : true,					maxLength : 10,					allowBlank : true				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : fieldForzoso(field_numexterior),					name : 'numexterior',					width : 100,					margins : '0 0 0 5',					enforceMaxLength : true,					maxLength : 10,					allowBlank : false				}, {					xtype : 'fieldcontainer',					labelStyle : 'font-weight:bold;padding:0',					layout : 'hbox',					emptyText : field_cp,					defaultType : 'textfield',					fieldDefaults : {					// labelAlign: 'top'					},					items : [					{						xtype : 'myUpperCaseTextField',						flex : 3,						fieldLabel : fieldForzoso(field_cp),						name : 'cp',						width : 100,						margins : '0 0 0 0',						enforceMaxLength : true,						maxLength : 5,						allowBlank : false					}, {						xtype : 'button',						flex : 1,						width : 80,						margins : '0 0 0 5',						iconCls : 'buscar_white',						text : titulo_btn_buscar,						scope : this.myscope,						id : 'btnBuscarCP_' + this.id,						handler : this.showGridCps					} ]				},				{					xtype : 'fieldcontainer',					labelStyle : 'font-weight:bold;padding:0',					layout : 'hbox',					emptyText : field_colonia,					defaultType : 'textfield',					fieldDefaults : {					// labelAlign: 'top'					},					items : [					{						xtype : 'myUpperCaseTextField',						flex : 3,						fieldLabel : fieldForzoso(field_colonia),						name : 'colonia',						width : 100,						margins : '0 0 0 0',						enforceMaxLength : true,						maxLength : 50,						allowBlank : false					}, {						xtype : 'button',						flex : 1,						width : 80,						margins : '0 0 0 5',						iconCls : 'buscar_white',						text : titulo_btn_buscar,						scope : this.myscope,						id : 'btnBuscarColonia_' + this.id,						handler : this.showGridCps					} ]				}, {					xtype : 'fieldcontainer',					labelStyle : 'font-weight:bold;padding:0',					layout : 'hbox',					emptyText : field_municipio,					defaultType : 'textfield',					fieldDefaults : {					// labelAlign: 'top'					},					items : [					{						xtype : 'myUpperCaseTextField',						flex : 3,						fieldLabel : fieldForzoso(field_municipio),						name : 'municipio',						width : 100,						margins : '0 0 0 0',						enforceMaxLength : true,						maxLength : 50,						allowBlank : false					}, {						xtype : 'button',						flex : 1,						width : 80,						margins : '0 0 0 5',						iconCls : 'buscar_white',						text : titulo_btn_buscar,						scope : this.myscope,						id : 'btnBuscarMunicipio_' + this.id,						handler : this.showGridCps					} ]				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : field_ciudad,					name : 'ciudad',					width : 100,					margins : '0 0 0 0',					enforceMaxLength : true,					maxLength : 40				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : field_estado,					name : 'estado',					width : 100,					margins : '0 0 0 0',					enforceMaxLength : true,					maxLength : 40				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : field_telefono,					name : 'telefono',					width : 100,					margins : '0 0 0 0',					enforceMaxLength : true,					maxLength : 30,					regex : /^[0-9 \-]{1,}$/				}, {					xtype : 'myUpperCaseTextField',					flex : 1,					fieldLabel : fiedl_celular,					name : 'numcelular',					width : 100,					margins : '0 0 0 0',					enforceMaxLength : true,					maxLength : 20,					regex : /^[0-9 \-]{1,}$/				}, {					flex : 1,					fieldLabel : field_correoe,					name : 'correoe',					width : 100,					margins : '0 0 0 0',					enforceMaxLength : true,					maxLength : 50,					vtype : 'email'				}		],		this.buttons = [				{					text : titulo_btn_ubicacion_mapa,					tooltip : tooltip_google_maps,					iconCls : 'map_blue',					scope : this,					handler : this.searchGMAP				},				{					xtype : 'tbfill'				},				{					text : titulo_btn_salvar,					iconCls : 'activo',					handler : function() {						var form = this.up('form').getForm();						if (form.isValid()) {							var out = [];							Ext.Object.each(form.getValues(), function(key,									value) {								out.push(key + '=' + value);							});							var myMask = new Ext.LoadMask(Ext.getBody(), {								msg : msg_generando_infomacion_espere							});							myMask.show();							form.submit({								clientValidation : true,								submitEmptyText : false,								params : {									tipo : "individual"								},								url : './rotular_etiquetas/carteraremdes/'										+ operacion_aplicar,								success : function(form, action) {									myMask.hide();									myMask.disable();									if (main_grid != undefined) {										scope_main.main_grid.filtraInfo();									}									if (scope_main.main_window != undefined) {										scope_main.main_window.close();									}									mensajeConfirm(action.result.message);								},								failure : function(form, action) {									myMask.hide();									myMask.disable();									alertMsg(titulo_alerta,											action.result.message);								}							});						} else {							alertMsg(msg_datos_requeridos);						}					}				} // ,		// {text: 'Salir'},		];		this.callParent();	},	updateCampos : function(record) {		// alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields();		this.updateFieldName(record, fields);	},	updateFieldName : function(record, fields) {		var items = fields.items;		var valor = "";		for (i = 0; i < items.length; i++) {			field = items[i];			if (field != undefined) {				if (field.getName() != undefined) {					// busca el nombre del campo que debe ser el mismo del					// nombre del campo de					// la forma					valor = record.get(field.getName());					if (valor != undefined) {						// alert('Campo:' + field.getName() + ', valor:'						// +valor);						field.setValue(valor);					} else {						field.setValue("");					}				}			}		}	},	updateFieldReadOnly : function(record) {		// alert(Ext.getCmp(this.id));		var fields = Ext.getCmp(this.id).getForm().getFields();		var items = fields.items;		var valor = "";		for (i = 0; i < items.length; i++) {			field = items[i];			if (field != undefined) {				if (field.getName() != undefined) {					field.setReadOnly(true);				}			}		}		this.updateCampos(record);	},	showGridCps : function(b, e) {		var fields = Ext.getCmp(this.id).getForm().getFields();		var tipoconsulta = 'cp';		var patron = '';		var boton = b.id.split("_")[0];		if (boton == 'btnBuscarCP') {			tipoconsulta = 'cp';			patron = getValueFormField('cp', fields); // Ext.getCmp('idcp').getValue();		} else if (boton == 'btnBuscarColonia') {			tipoconsulta = 'colonia';			patron = getValueFormField('colonia', fields); // Ext.getCmp('idcolonia').getValue();		} else if (boton == 'btnBuscarMunicipio') {			tipoconsulta = 'municipio';			patron = getValueFormField('municipio', fields); // Ext.getCmp('idmunicipio').getValue();		} else {			alertMsg(msg_consulta_invalida);		}		var gridcps = Ext.create('MyDesktop.grid.GridConsultaCPs', {			isEditable : true,			cp_field : 'cp',			colonia_field : 'colonia',			municipio_field : 'municipio',			estado_field : 'estado',			ciudad_field : 'ciudad',			fields : fields,			form : Ext.getCmp(this.id).getForm(),			tipoconsulta : tipoconsulta,			patron : patron,			cp : patron,			colonia : patron,			municipio : patron		});		var buscacps_window = new Ext.Window({			width : 880,			height : 350,			layout : 'border',			title : tooltip_consulta_cps,			closable : false,			modal : true,			headerPosition : 'right',			items : [ {				items : gridcps,				layout : 'fit',				region : 'center',				height : 100			} ],			buttons : [ {				text : titulo_btn_salir,				handler : function() {					buscacps_window.close();				}			} ]		});		gridcps.setScopeWin(buscacps_window);		buscacps_window.show();	},	setIdCliente : function(idcliente) {		this.idcliente = idcliente;		// actualiza el dato del campo		this.updateFieldCte(idcliente, 'identificador');	},	setMainWindow : function(mainwin) {		this.main_window = mainwin;	},	updateFieldCte : function(valor, campo) {		var fields = Ext.getCmp(this.id).getForm().getFields();		var items = fields.items;		for (i = 0; i < items.length; i++) {			field = items[i];			if (field != undefined) {				if ((field.getName() != undefined)						&& (field.getName() == campo)) {					field.setValue(valor);				}			}		}	},	searchGMAP : function() {		var myscope = this;		var latitud = this.getValueField("latitud");		var longitud = this.getValueField('longitud');		/*		 * if ((latitud=='' ) || (longitud=='')){ myscope.getUbicacionMap();		 * mensajeWarning("Latitud y longitud calculadas, intente de nuevo");		 * return; }		 */		var cp = myscope.getValueField('cp');		var colonia = myscope.getValueField('colonia');		var municipio = myscope.getValueField('municipio');		var estado = myscope.getValueField('estado');		var calle = myscope.getValueField('calle');		var pais = 'MX';// myscope.getValueField('pais'+ myscope.sufijo);		if ((cp != '') && (colonia != '') && (municipio != '')				&& (estado != '')) {			// En base al sufijo se realiza la actualizacion de los campos			// y la obtenci�n de datos			var datos = "latitud= " + latitud + "&longitud=" + longitud					+ "&colonia=" + colonia + "&municipio=" + municipio					+ "&cp=" + cp + "&estado=" + estado					+ "&pais=MX&isadministracion=false&calle=" + calle					+ "&idoficina=&telefono=&nombre=";			showGMapWindows(datos, '', '');			// showGMapLatLongWindows(-99.09463690268552,			// 19.358901156334692);//latitud,longitud);			// var maps_google =			// Ext.create('MyDesktop.objetos.GoogleMapsObject',{});			/*			 * maps_google.showMapConDireccion(calle,colonia,municipio, cp,			 * estado, pais, longitud , latitud);			 */			// var direccion = calle +', ' + colonia +',' +municipio+',' +cp			// +',' + pais ;			// maps_google.showMapConLatitudLongitud(longitud ,			// latitud,direccion);		} else {			mensajeWarning(msg_dato_a_consultar);			return;		}	},	getValueField : function(campo) {		var fields = Ext.getCmp(this.id).getForm().getFields();		var valor = '';		var items = fields.items;		for (i = 0; i < items.length; i++) {			field = items[i];			if (field != undefined) {				if ((field.getName() != undefined)						&& (field.getName() == campo)) {					valor = field.getValue();				}			}		}		return valor;	}});