<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Desktop Aplicacion</title>

    <link rel="stylesheet" type="text/css" href="../css/desktop.css" />
    <link rel="stylesheet" type="text/css" href="../css/icons.css" />
	<link rel="stylesheet" type="text/css" href="../css/shortcuts.css" />

    <!-- GC -->

    <!-- <x-compile> -->
    <!-- <x-bootstrap> -->

    <script type="text/javascript" src="../ext-4.2.1/examples/shared/include-ext.js"></script>
    <script type="text/javascript" src="../ext-4.2.1/examples/shared/options-toolbar.js"></script>
	 <script type="text/javascript" src="objetos/Utilerias.js"></script>
	

    <!-- </x-bootstrap> -->
   
    <script type="text/javascript">
        var quickStart =new Array();
        var shortcuts =new Array();
		var nombre_usuario_windows='<b>Adrian Morales Ruaro</b>';
		var jerarquia_usuario_windows='<b>Adrian Morales</b>';
		var perfil_usuario_windows='<b>Adrian Morales</b>';
		var cliente_usuario_windows='<b>Adrian Morales</b>';
		
		var arregloModulos = [];//"<ietweb:permiteAccesoModulo permiteModulo="0.0" arregloModulos='true'/>";
	    var items_modulos=new Array();
	  
       Ext.Loader.setPath({
            'Ext.ux.desktop': '../jsdesktop/js',
            MyDesktop: '../jsdesktop',
			SalesManager:'../desktop_app/views',
			Etiquetas:'desktop_app/views',
			Servicios:'desktop_app/views',
			Picking:'desktop_app/views'
        });

        Ext.require('MyDesktop.App');

        var myDesktopApp;
        var store_etiquetas ; //modulo 2
        var store_administracion;//modulo 1
        var store_mantenimiento;//modulo 9
        var store_logistica_transporte;//modulo 4
		var store_wallpaper;//modulo 
		
        var store_pdv;//modulo P
		//Obtiene los datos del usuario
		var wallpapers_own = 'Blue-Sencha.jpg';
		var wallpaperStretch_own=true;
		
		function checkEnable(id){
			//Verifica en el combo si existe 
			store_administracion.each(function(record){
				if (record.get('windowId') == id){
					//Indica que la opcion no esta deshabilitada
					return false;
				}
			})
			//La opcion no fue encontrada en store por lo
			//que se devuelve true para que se deshabilite el boton
			return false;
		}
		var treeImages = new Array();
		var index_images =0;
		
        Ext.onReady(function () {
			
			//Obtiene los wallpapers
			store_wallpaper = Ext.create('MyDesktop.store.StoreOpcionesMenu',{});
			store_wallpaper.getProxy().setExtraParam("permiteModulo", 99); //WallPappers 
			store_wallpaper.load({
				callback:function(r,options,success){
						treeImages[index_images++] = { text: "None", iconCls: '', leaf: true };
						store_wallpaper.each(function(record){
							treeImages[index_images++] = childTreeItem(record.get('image'));
						});
				}
			})
			//TODO: ELIMINAR CUANDO ESTE EN PRO
			treeImages= createArrayWallPaperDesarr();
			
			//Opctiene opciones de menu	
			store_administracion = Ext.create('MyDesktop.store.StoreOpcionesMenu',{});
			store_administracion.getProxy().setExtraParam("permiteModulo", 1);
			
			store_etiquetas = Ext.create('MyDesktop.store.StoreOpcionesMenu',{});
			store_etiquetas.getProxy().setExtraParam("permiteModulo", 2);
			
			store_logistica_transporte = Ext.create('MyDesktop.store.StoreOpcionesMenu',{});
			store_logistica_transporte.getProxy().setExtraParam("permiteModulo", 4);
			
			store_mantenimiento = Ext.create('MyDesktop.store.StoreOpcionesMenu',{});
			store_mantenimiento.getProxy().setExtraParam("permiteModulo", 9);
        
            //Carga loa store
            //Obtiene la informacion con la que se va a llevar el menu
			
       		/*store_administracion = Ext.create('Ext.data.Store', {
            	model: 'MyDesktop.models.ModeloDataItemMenu',
            	proxy: {
                type: 'ajax',
                url : './logonadministracion.do?dispatch=getAccesoModulo&permiteModulo=1', 
                reader: {
                    type: 'json',
                    root: 'proxiArray'
                }
            	},
            	autoLoad: false
        	});*/
        	
        	/*store_etiquetas = Ext.create('Ext.data.Store', {
            	model: 'ItemMenu',
            	proxy: {
                type: 'ajax',
                url : './logonadministracion.do?dispatch=getAccesoModulo&permiteModulo=2', 
                reader: {
                    type: 'json',
                    root: 'proxiArray'
                }
            	},
            	autoLoad: false
        	});*/
        
        	 /*store_logistica_transporte = Ext.create('Ext.data.Store', {
            	model: 'ItemMenu',
            	proxy: {
                type: 'ajax',
                url : './logonadministracion.do?dispatch=getAccesoModulo&permiteModulo=4', 
                reader: {
                    type: 'json',
                    root: 'proxiArray'
                }
            	},
            	autoLoad: false
        	});*/
        	
        	 /*store_mantenimiento = Ext.create('Ext.data.Store', {
            	model: 'ItemMenu',
            	proxy: {
                type: 'ajax',
                url : './logonadministracion.do?dispatch=getAccesoModulo&permiteModulo=9', 
                reader: {
                    type: 'json',
                    root: 'proxiArray'
                }
            	},
            	autoLoad: false
        	});*/
        	//Carga las opciones del menu
        	store_administracion.load({
        	 	callback:function(r,options,success){
					//Carga el siguiente Store
				   store_etiquetas.load({
        	 			callback:function(r,options,success){
							//Carga el siguiente Store
						   store_logistica_transporte.load({
		        	 			callback:function(r,options,success){
									//Carga el siguiente Store
								    store_mantenimiento.load({
				        	 			callback:function(r,options,success){
				        	 				//Crea el arreglo de quickstart y shortcut
				        	 				var size_store = store_administracion.count();
				        	 				var indice_qstart =0;
				        	 				var indice_shortcuts=0;
				        	 				for(i=0;i<size_store;i++) {
				        	 					record = store_administracion.getAt( i ) ;
				        	 					//quickStart
				        	 					if (record.get('quickstart')==1){
				        	 						quickStart[indice_qstart] =  { name: record.get('text'), iconCls: record.get('iconCls'), module: record.get('windowId')};
				        	 						indice_qstart++;
				        	 					}
				        	 					if (record.get('shortcut')==1){
				        	 						shortcuts[indice_shortcuts] =  { name: record.get('text'), iconCls: record.get('iconCls')+'-shortcut', module: record.get('windowId')};
				        	 						indice_shortcuts++;
				        	 					}
				        	 				}
				        	 				size_store = store_etiquetas.count();
				        	 				indice_qstart =quickStart.length;
				        	 				indice_shortcuts=shortcuts.length;
				        	 				for(i=0;i<size_store;i++) {
				        	 					record = store_etiquetas.getAt( i ) ;
				        	 					//quickStart
				        	 					if (record.get('quickstart')==1){
				        	 						quickStart[indice_qstart] =  { name: record.get('text'), iconCls: record.get('iconCls'), module: record.get('windowId')};
				        	 						indice_qstart++;
				        	 					}
				        	 					if (record.get('shortcut')==1){
				        	 						shortcuts[indice_shortcuts] =  { name: record.get('text'), iconCls: record.get('iconCls')+'-shortcut', module: record.get('windowId')};
				        	 						indice_shortcuts++;
				        	 					}
				        	 				}
				        	 				size_store = store_logistica_transporte.count();
				        	 				indice_qstart =quickStart.length;
				        	 				indice_shortcuts=shortcuts.length;
				        	 				for(i=0;i<size_store;i++) {
				        	 					record = store_logistica_transporte.getAt( i ) ;
				        	 					//quickStart
				        	 					if (record.get('quickstart')==1){
				        	 						quickStart[indice_qstart] =  { name: record.get('text'), iconCls: record.get('iconCls'), module: record.get('windowId')};
				        	 						indice_qstart++;
				        	 					}
				        	 					if (record.get('shortcut')==1){
				        	 						shortcuts[indice_shortcuts] =  { name: record.get('text'), iconCls: record.get('iconCls')+'-shortcut', module: record.get('windowId')};
				        	 						indice_shortcuts++;
				        	 					}
				        	 				}
				        	 				size_store = store_mantenimiento.count();
				        	 				indice_qstart =quickStart.length;
				        	 				indice_shortcuts=shortcuts.length;
				        	 				for(i=0;i<size_store;i++) {
				        	 					record = store_mantenimiento.getAt( i ) ;
				        	 					//quickStart
				        	 					if (record.get('quickstart')==1){
				        	 						quickStart[indice_qstart] =  { name: record.get('text'), iconCls: record.get('iconCls'), module: record.get('windowId')};
				        	 						indice_qstart++;
				        	 					}
				        	 					if (record.get('shortcut')==1){
				        	 						shortcuts[indice_shortcuts] =  { name: record.get('text'), iconCls: record.get('iconCls')+'-shortcut', module: record.get('windowId')};
				        	 						indice_shortcuts++;
				        	 					}
				        	 				}
				        
									 		//Carga el Desktop cuando es el ultimo 
				        					myDesktopApp = new MyDesktop.App();	
											
											var myMask = new Ext.LoadMask(Ext.getBody(), {msg:"Configurando menú principal..."});
											myMask.show();

											
											var p = Ext.create('Ext.ProgressBar', {
											   renderTo: Ext.getBody(),
											   width: 300
											});
											Ext.window.MessageBox('Configurando Menú prioncipal, espere...','Menú principal',
												p.wait({
													interval: 500, //bar will move fast!
													duration: 3000,
													increment: 15,
													text: 'Updating...',
													scope: this,
													fn: function(){
														//p.updateText('Done!');
														myDesktopApp.openWindowsMenu(myDesktopApp);
														myMask.hide();
														
													}
												})
											);
											
											
				        					
							 			}	  
				        			}); 
					 			}	  
		        			}); 
			 			}	  
        			}); 
				 
				 	
			 	}	  
        	});
	        
        });
		


	
    </script>
    <!-- </x-compile> -->
</head>


<body>

</body>
</html>
