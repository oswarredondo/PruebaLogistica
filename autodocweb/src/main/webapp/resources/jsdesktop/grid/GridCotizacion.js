Ext.define('MyDesktop.grid.GridCotizacion', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridCotizacion',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	cporigen:undefined,	cpdestino:undefined,	peso:0,	cantidad:undefined,	mystore:undefined,	isconsulta:false,    initComponent: function () {        	var myscope = this;    	if (myscope.isconsulta){    		this.store = Ext.create('MyDesktop.store.StoreCotizacion',{    				autoLoad:true    		});			this.store.getProxy().setExtraParam("cporigen", this.cporigen);			this.store.getProxy().setExtraParam("cpdestino", this.cpdestino);			this.store.getProxy().setExtraParam("cantidadenvios", this.cantidad);			this.store.getProxy().setExtraParam("pesoamparado", this.peso);    	}else{    		this.store = Ext.create('MyDesktop.store.StoreCotizacion',{				autoLoad:true    		});    	}    			this.selType= 'checkboxmodel';        this.columns = [                        {             			    text: 'Datos Envio',             			    columns: [								{dataIndex: 'nombre',text: 'Tarifa',width: 150,sortable : true},								//{dataIndex: 'descripciongarantiamaxima',text: 'Garantia',width: 150,sortable : true},								{dataIndex: 'cporigen', text: 'Origen',width: 70,sortable : true},									{dataIndex: 'cpdestino', text: 'Destino',width: 70,sortable : true}             			       ]                        },                                                                        {             			    text: 'Rango Envios',             			    columns: [             			             {dataIndex: 'cantidadenvios',text: 'Cant',width: 60,sortable : true},                                     {dataIndex: '', text: 'Rango',width: 60,sortable : true,             			            	renderer:function (value, metaData, record, rowIndex, colIndex,store){             			            		return record.get('idrangoinicial') + "-"+ record.get('idrangofinal')             			            	}                                     }             			           ]                        },                        {             			    text: 'Peso Envios',             			    columns: [                                     {dataIndex: 'pesoamparado', text: 'Peso',width: 60,sortable : true},                                     {dataIndex: '', text: 'Rango',width: 70,sortable : true,              			            	renderer:function (value, metaData, record, rowIndex, colIndex,store){              			            		return record.get('pesoinicial') + "-"+ record.get('pesofinal')              			            	}                                      }             			              ]                        },             			             			{             			    text: 'KM Orig-Dest',             			    columns: [             			                        	             		{dataIndex: 'kilometros',text: 'KMs',width: 70,sortable : true},             	             		 {dataIndex: '', text: 'Rango',width: 70,sortable : true,              			            	renderer:function (value, metaData, record, rowIndex, colIndex,store){              			            		return record.get('kminicial') + "-"+ record.get('kmfinal')              			            	}                                      }             	             ]             			},             			             			  {             			    text: 'Precio Envio',             			    columns: [										{dataIndex: 'precio',text: 'P.U',width: 90,sortable : true, renderer : 'usMoney'},										{dataIndex: 'totalprecioenvios', text: 'Precio ',width: 90,sortable : true, renderer : 'usMoney'}             			              ]             			},             			             			{             			    text: 'Precio Sobre Peso',             			    columns: [										{dataIndex: 'preciokgsp', text: 'Por Kg',width: 90,sortable : true, renderer : 'usMoney'},					             		{dataIndex: 'sobrepeso',text: 'Kg SP',width: 60,sortable : true},					             		{dataIndex: 'totalsobrepeso',text: 'Total SP',width: 80,sortable : true, renderer : 'usMoney'}             			              ]             			},             			             			{             			    text: 'Totales(Sin IVA)',             			    columns: [								{dataIndex: 'precioadicional',text: 'Cargos Adic',width: 90,sortable : true, renderer : 'usMoney'},								{dataIndex: 'sobrepeso',text: 'Total',width: 90,sortable : true,										renderer:function (value, metaData, record, rowIndex, colIndex,store){											var totalsobrepeso =record.get('totalsobrepeso');											var totalenvios = record.get('totalprecioenvios');											var totaladicinal= record.get('precioadicional');																						var total = totalsobrepeso+totalenvios+totaladicinal;											return "$" +total.toFixed(2);										}									}             			          ]             			}				];                	if (!myscope.isconsulta){        		//Indica los campos para busqueda        		   this.tbar=[        		              {xtype:'label', text:'CP Origen:'},            		              {xtype:'textfield', id:'idcporigen'+this.id, maxLength:5,allowBlank:true,width:100 },        		              {xtype:'label', text:'CP Destino:'},          						  {xtype:'textfield', id:'idcpdestino'+this.id, maxLength:5,allowBlank:true,width:100 },      						  {xtype:'label', text:'Cantidad:'},        						  {xtype:'numberfield', id:'idcantidad'+this.id, minValue:1, maxValue:100,allowBlank:true,width:100 },    						  {xtype:'label', text:'Peso:'},        						  {xtype:'numberfield', id:'idpeso'+this.id, minValue:0.5, maxValue:999,allowBlank:true,width:100 },      						{ iconCls: 'buscar_blue',handler:this.filtraInfo, scope:this},      						      					];        	}			this.callParent();    },        filtraInfo:function(){    	var myscope = this;    	var cporigen=Ext.getCmp('idcporigen'+this.id).getValue();    	var cpdestino=Ext.getCmp('idcpdestino'+this.id).getValue();    	var cantidad=Ext.getCmp('idcantidad'+this.id).getValue();    	var peso=Ext.getCmp('idpeso'+this.id).getValue();    	    	myscope.getView().getStore().reload(				{					params:{						cporigen:cporigen, 						cpdestino:cpdestino,						cantidadenvios:cantidad,						pesoamparado:peso},					callback:function(r,options,success){						 if (r.length<=0){							 Ext.Msg.show({								 title: 'Aviso',								 msg: 'No existe información con el criterio de busqueda selecionado.',								 modal: false,								 icon: Ext.Msg.INFO,								 buttons: Ext.Msg.OK													 });  													 }					 }	  				});    	    },    getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	}	});