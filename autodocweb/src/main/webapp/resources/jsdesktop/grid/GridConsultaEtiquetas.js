Ext.define('MyDesktop.grid.GridConsultaEtiquetas', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem',        'Ext.menu.Menu'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridConsultaEtiquetas',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	uuid:undefined,	idregistro:undefined,	id:undefined,	isConsulta:false,	myScope:undefined,	uuid:undefined,	idregistro:undefined,	mystore:undefined,	isCancelar:true,	icita:true,	irechazo:true,	encabezados:'',	ismenuDesabled:false,	customStore:undefined,	ocultaBotonPDF:false,	ocultaBotonExportar:false,	isFueraSitio:false,    initComponent: function () {        	var ismenuDesabled=false;    	var today = new Date();    	if (this.customStore==undefined){    		this.store = Ext.create('MyDesktop.store.StoreDocumento',{}) ;    		    	}else{    		this.store =this.customStore;    	}    	this.store.reload(				{					params:{						tipobusqueda:999999, 						tipoDocumento:'ETIQU',						start:0											},					callback:function(r,options,success){					 }	  				});		this.store.removeAll( true );    			this.myScope = this;		var my_scope = this;				  //Solo lo despliega cuando no es de tipo consulta		//Ejemnplo la busqueda fuera del sistema en el login		//es solo consulta		//		alert("HV: " + hv + " VT: " + vt);		if(!my_scope.isConsulta){						/* CAMBIO CITAS MANIOBRAS EVIDENCIAS V2 */      			var conn = new Ext.data.Connection();		   	conn.request({							method:'POST',							defaultHeaders:{'_csrf_header':hv,"_csrf":vt },							params:{"_csrf":vt},						url: './catalogo/usuario/getPerfilUsuarioSesion' ,						success: function(response, opts) {														var obj = Ext.decode(response.responseText);														if(obj.success){																Ext.getCmp('idBtnAdicionales').show();															}else{								Ext.getCmp('idBtnAdicionales').hide();															}													},						failure: function(response, opts) {			       			if (response.responseText!=undefined){			       				var obj = Ext.decode(response.responseText);			       				if (obj.message!=undefined){			       					mensajeAlert(obj.message);				       			}				       		}		       									}		   		});					}				if (!my_scope.isConsulta){			var gridMenu = Ext.create('Ext.menu.Menu', {    			    items: [			            { text: "PDF",scope: my_scope, iconCls:'pdf_blue',handler:my_scope.abreVentanaPDF, hidden:my_scope.ocultaBotonPDF},			            //{ text: "MADRE",scope: my_scope, iconCls:'pdf_blue',handler:my_scope.abreVentanaPDFMadre, hidden:my_scope.ocultaBotonPDF},		           	    { text: "Historia",scope: my_scope,iconCls:'books_blue',handler:my_scope.abreVentanaHistoria},		           	    {text: "Notas",scope: my_scope,iconCls:'notas_blue',handler:my_scope.abreVentanaNotas},		           	    //{text: "Cita",scope: my_scope,iconCls:'citas_blue', handler:my_scope.abreVentanaCita,hidden:!my_scope.icita},		           	    //{text: "Rechazo",scope: my_scope,iconCls:'rechazo_blue', handler:my_scope.showVentanaRechazos, hidden:!my_scope.irechazo } ,		           	    {text: "Exportar",scope: my_scope,iconCls:'excel_blue',handler:my_scope.exportarExcel},		           	    {xtype:'tbseparator'},		           	    {text: "Cancelar",scope: my_scope,iconCls:'deleteRed16x16', handler:my_scope.cancelarRecord,hidden:!my_scope.isCancelar}			            			       ]			  }); 						this.listeners= {			      beforeitemcontextmenu: function(view, record, item, index, e)			      {			        e.stopEvent();			        gridMenu.showAt(e.getXY());			      }			};					combo_tipos_busqueda= Ext.create('Ext.form.ComboBox', {				fieldLabel: '',				 width: 150,				disabled: false,				editable:false,				id:'tipobusqueda'+this.id,				store: Ext.create('MyDesktop.store.StoreTiposBusquedaDocumentoEtiquetas',{}) ,				queryMode: 'local',				emptyText: 'Seleccione orden',				displayField: 'descripcion',				valueField: 'idtipo'			});			combo_tipos_busqueda.setValue("1");			this.tbar =[						{xtype:'label', text:'Buscar por:'},    						combo_tipos_busqueda,						{xtype:'tbseparator'},	        		    {xtype:'hidden', id:'idencabezados', value:my_scope.encabezados },   						{xtype:'label', text:'Buscar:'},    						{xtype:'textfield', id:'iddatoabuscar'+my_scope.id, maxLength:500,allowBlank:true,width:250 },						{xtype:'tbseparator'},						{xtype:'label', text:'Fecha inicial:'}, 						{ xtype:'datefield',id:'idfechaInicial'+my_scope.id,maxLength:30,allowBlank:false,width:110 },						{ xtype:'timefield',id:'idhoraInicial'+my_scope.id,allowBlank:false,width:80 , format:'H:i'},						{xtype:'tbspacer'},				        {xtype:'label', text:'final:'}, 				        { xtype:'datefield',id:'idfechaFinal'+my_scope.id,maxLength:30,allowBlank:false,width:110},				        { xtype:'timefield',id:'idhoraFinal'+my_scope.id,allowBlank:false,width:80 ,format:'H:i'},				        { tooltip:'Realiza la búsqueda (CTRL+B)',iconCls:'search_blue', handler:my_scope.realizaConsulta, scope:this}  				];						var globalKeyMap = new Ext.KeyMap(document); 			globalKeyMap.accessKey = function(key, handler, scope) { 			    var h = function(n, e) { 			        e.preventDefault(); 			        handler.call(scope || this, n, e); 			    }; 			    this.on(key, h, scope); 			};		}				this.selType= 'checkboxmodel'; 	        this.columns = [						{							menuDisabled: true,	sortable: false,							xtype: 'actioncolumn',	width: 20,							items: [								{									getClass: function(v, meta, rec) {																				if ((rec.get('es_nacional') == undefined) || 											(rec.get('es_nacional') == '') ||											(rec.get('es_nacional') == 'NACIONAL')) {											return 'AUTODOC' ;										}else{											return rec.get('es_nacional');																				}									},									getTip: function(v, meta, rec) {										if ((rec.get('es_nacional') == undefined) || 												(rec.get('es_nacional') == '') ||												(rec.get('es_nacional') == 'NACIONAL')) {												return 'AUTODOC' ;											}else{												return rec.get('es_nacional');																						}									},									handler: function(grid, rowIndex, colIndex) {										 var rec = grid.getStore().getAt(rowIndex);										 if ((rec.get('es_nacional') != 'NACIONAL') 											 && (rec.get('es_nacional') != 'AUTODOC')) {											 my_scope.abreVentanaInfoUPS(rec);										 }else{											 										 }										 /*if (rec.get('es_nacional') == 'INTERNACIONAL') {											my_scope.abreVentanaInfoUPS(rec);										 }carriernumber										 if (rec.get('es_estafeta') == 'INTERNACIONAL') {												my_scope.abreVentanaInfoUPS(rec);											 }*/																			}								}							]						},						{							menuDisabled: true,	sortable: false,							xtype: 'actioncolumn',	width: 20,							items: [								{									getClass: function(v, meta, rec) {																if (rec.get('isexistenota') == 'SI') {											return 'NOTAS' ;										} 									},									getTip: function(v, meta, rec) {										if (rec.get('isexistenota') == 'SI') {											return 'NOTAS' ;										} 									},									handler: function(grid, rowIndex, colIndex) {										 var rec = grid.getStore().getAt(rowIndex);										if (rec.get('isexistenota') == 'SI') {											my_scope.abreVentanaNotasRow(rec,	my_scope.isConsulta);										}																			}								}							]						},    					{							menuDisabled: true,	sortable: false,							xtype: 'actioncolumn',	width: 20,							items: [								{									getClass: function(v, meta, rec) {										if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){											return 'IMPRESO';										}										var arr =  rec.get('estatus').split(",");										if (arr.length<=0){											return 'IMPRESO';										}																														return arr[1];																			},									getTip: function(v, meta, rec) {										if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){											return 'IMPRESO';										}										var arr =  rec.get('estatus').split(",");										if (arr.length<=0){											return 'IMPRESO';										}																														return arr[0];																			},									handler: function(grid, rowIndex, colIndex) {										var rec = grid.getStore().getAt(rowIndex);										var arr =  rec.get('estatus').split(",");										if (arr.length<=0){											my_scope.abreVentanaHistoriaRow(rec,my_scope);										}else if (arr[1]=='ENTREGADO'){											my_scope.abreVentanaLocalizacionEntregaRow(rec,my_scope);											//my_scope.abreVentanaHistoriaRow(rec,my_scope);										}else{											my_scope.abreVentanaHistoriaRow(rec,my_scope);										}																					//if (rec.get('estatus') == 'H') {																						//}									}								}							]						},												 { header   : 'G. Carrier', tooltip:'Guía Carrier', width: 170, sortable : true, hidden:true,                			dataIndex: 'guiainternacional' ,menuDisabled: my_scope.ismenuDesabled  },                			            	        { header   : 'MADRE', tooltip:'Guia Madre', width: 170, sortable : true, hidden:true,                    			dataIndex: 'idDocumentoMadre' ,menuDisabled: my_scope.ismenuDesabled  },                			        	            { header   : 'Etiqueta', tooltip:'Etiqueta', width: 170, sortable : true, hidden:false,                        			dataIndex: 'idDocumento' ,menuDisabled: my_scope.ismenuDesabled  },                        { header   : 'Remesa', tooltip:'Remesa/Guia Madre Multiple', width: 170, sortable : true, hidden:false,                            			dataIndex: 'idguiamadremultiple' ,menuDisabled: my_scope.ismenuDesabled  },			                       { header   : 'Tipo de Servicio', tooltip:'Tipo de Servicio', width: 180, sortable : true,                             				hidden:false, dataIndex: 'descripcio_servicio' ,menuDisabled: my_scope.ismenuDesabled  },			        	            { header   : 'F.Creacion', tooltip:'Fecha de creacion', width: 180, sortable : true,                         				hidden:false, dataIndex: 'fechaCreacion' ,menuDisabled: my_scope.ismenuDesabled  },                        { header   : 'F.Recoleccion', tooltip:'Fecha de Recoleccion', width: 180, sortable : true,                             				hidden:false, dataIndex: 'fecharecoleccion' ,menuDisabled: my_scope.ismenuDesabled  },                            				        	            { header   : 'Referencia', tooltip:'Referencia', width: 110, sortable : true, hidden:false,                         					dataIndex: 'referencia' ,menuDisabled: my_scope.ismenuDesabled  },        	            {  header   : 'Guia Casamiento', tooltip:'Guia Casamiento', width: 150, sortable : true,                        						hidden:false, dataIndex: 'idGuiaCasamiento' ,menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaGuiaCasamiento   },        	            {  header   : 'Guia Devolucion', tooltip:'Guia Devolucion',width: 150, sortable : true,                         							hidden:true, dataIndex: 'idGuiaDevolucion' ,menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaGuiaDevolucion   },        	                   	            { header   : 'Cant.',tooltip:'Cant.', width    : 80, sortable : true, hidden:true,dataIndex: 'numpiezas',menuDisabled: my_scope.ismenuDesabled },        	            { header   : 'Peso', tooltip:'Peso',width    : 85, sortable : true, hidden:true,dataIndex: 'pesobruto',        	            	menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            { header   : 'Val. Decl.', tooltip:'Val. Decl.',width    : 50, sortable : true, hidden:true,        	            		dataIndex: 'valordeclarado',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	           // {id :'cantasegurada', header   : 'Cant.Asegurada', tooltip:'Cant.Asegurada',width    : 50, sortable : true, hidden:true,        	           // 			dataIndex: 'cantasegurada',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            { header   : 'Contenido', tooltip:'Contenido',width    : 150, sortable : true, hidden:false,        	            				dataIndex: 'contenidoDeclarado',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            { header   : 'Observacion', tooltip:'Observacion',width    : 100, sortable : true, hidden:true,        	            					dataIndex: 'observacion',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            { header   : 'Remitente', tooltip:'Remitente',width    : 200, sortable : true,        	            						hidden:false,dataIndex: 'remitente.razonSocial',menuDisabled: my_scope.ismenuDesabled,        	            						renderer:my_scope.formatoCeldaRemitente },        	            { header   : 'Destino', tooltip:'Destino',width    : 200, sortable : true,        	            							hidden:false,dataIndex: 'destinatario.razonSocial',menuDisabled: my_scope.ismenuDesabled,        	            							renderer:my_scope.formatoCeldaDestino },        	                    	            {header   : 'Quien Recibe', tooltip:'Quien Recibe',width: 250, sortable : true,        	            								hidden:false,dataIndex: 'quienRecibe',menuDisabled: my_scope.ismenuDesabled,        	            								renderer:my_scope.showConfirmacion }        	            /*{id :'fechaConfirmacion', header   : 'Fecha Entrega', tooltip:'Fecha Entrega',width    : 120,         	            									sortable : true, hidden:false,dataIndex: 'fechaConfirmacion',        	            									menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.showConfirmacionL1 }*/        	                    	            /*{id :'tiporechazo', header: 'Tipo', width: 80, sortable : true, hidden:true,        	            			dataIndex: 'tiporechazo', menuDisabled: my_scope.ismenuDesabled,menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            {id :'fecharechazo', header   : 'Fecha de Rechazo',tooltip:'Fecha Rechazo', width: 90,         	            				sortable : true, hidden:true,dataIndex: 'fecharechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },        	            {id :'claverechazo', header   : 'Motivo de rechazo',tooltip:'Clave rechazo', width: 90,         	            					sortable : true, hidden:true,dataIndex: 'claverechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },        	            {id :'cantidadrechazo', header   : 'Cajas',tooltip:'Cajas', width: 90, sortable : true,        	            				hidden:true,dataIndex: 'cantidadrechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },        	            {id :'foliorechazo', header   : 'Folio Rechazo',tooltip:'Folio SAC', width: 90,         	            					sortable : true, hidden:true,dataIndex: 'foliorechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  }						*/			];        	this.dockedItems= [              		{               			xtype: 'toolbar',              			dock: 'bottom',              			items: [              			  //	{xtype:'checkbox', id:'chkSoloConCita', fieldLabel:'Solo con cita'},      				              			            { text: "PDF", tooltip:'Muestra el PDF creado para la guía ',scope: my_scope, iconCls:'pdf_blue',handler:my_scope.abreVentanaPDF, hidden:my_scope.ocultaBotonPDF},      			          { text: "MADRE",scope: my_scope, iconCls:'pdf_blue',handler:my_scope.abreVentanaPDFMadre, hidden:my_scope.ocultaBotonPDF},      			            { text: "Historia",tooltip:'Muestra la historia de la guía ',scope: my_scope,iconCls:'books_blue',handler:my_scope.abreVentanaHistoria},      		           	    {text: "Notas",tooltip:'Muestra las notas de la guía ',scope: my_scope,iconCls:'notas_blue',handler:my_scope.abreVentanaNotas},       		           	   // {text: "Cita",scope: my_scope,iconCls:'citas_blue', handler:my_scope.abreVentanaCita,hidden:!my_scope.icita},      		           	   // {text: "Rechazo",scope: my_scope,iconCls:'rechazo_blue', handler:my_scope.showVentanaRechazos, hidden:!my_scope.irechazo } ,      		           	    {text: "Exportar",tooltip:'Exporta la info de la guia a Excel',scope: my_scope,iconCls:'excel_blue', id: 'idexportarMenuDes', handler:my_scope.exportarExcel, hidden:my_scope.ocultaBotonExportar},       		           	    {text: "Adicionales",id:'idBtnAdicionales',scope: my_scope,iconCls:'citas_blue',hidden:true, handler:my_scope.showWindowsAdicionales},      		           	    {xtype:'tbfill'},      		           	    {text: "Cancelar",tooltip:'Cambia el estatus de la guía a CANCELADO',scope: my_scope,iconCls:'deleteRed16x16', handler:my_scope.cancelarRecord,hidden:!my_scope.isCancelar},      		           	                			]              		}             ];        	this.bbar =[				Ext.create('Ext.PagingToolbar', {				    store: this.store,				    displayInfo: true,				    displayMsg: 'Desplegando {0} - {1} of {2}',				    emptyMsg: "No se encontro información que desplegar"				    /*,items:[				        '-', {				        text: 'Previo',				        pressed: pluginExpanded,				        enableToggle: true,				        toggleHandler: function(btn, pressed) {				            var preview = Ext.getCmp('gv').getPlugin('preview');				            preview.toggleExpanded(pressed);				        }				    }]*/				})        	            ];        	if (!my_scope.isConsulta){        		this.on('render', function() {         			globalKeyMap.accessKey({key:'b',ctrl:true, alt:false}, my_scope.realizaConsulta, my_scope);                 	globalKeyMap.accessKey({key:'p',ctrl:true, alt:false}, my_scope.abreVentanaPDF, my_scope);                 	globalKeyMap.accessKey({key:'h',ctrl:true, alt:false}, my_scope.abreVentanaHistoria, my_scope);                 	globalKeyMap.accessKey({key:'n',ctrl:true, alt:false}, my_scope.abreVentanaNotas, my_scope);                 	globalKeyMap.accessKey({key:'e',ctrl:true, alt:false}, my_scope.exportarExcel, my_scope);                 	globalKeyMap.accessKey({key:'o',ctrl:true, alt:false}, my_scope.cancelarRecord, my_scope);                 }             );             	}        	        	this.store.removeAll( true );        	this.store.reload(							{								params:{									tipobusqueda:999999, 									tipoDocumento:'ETIQU',									start:0																	},								callback:function(r,options,success){								 }	  							});			this.callParent();    },	abreVentanaPDF:function(){		var my_scope = this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar registro a visualizar. ");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar. ");     		return;     	}		var url ="./busqueda_etiquetas/";		url =url+"viewPDFEnvio?iddocumento="+rows[0].get('idDocumento');				visorPDF(				'utils-win-vistaprevia-pdf_file_envio'+ rows[0].get('idDocumento'),				"Visor PDF: " + rows[0].get('idDocumento'),url);    	    },     	abreVentanaPDFMadre:function(){				var my_scope = this;				var tipoBusqueda = Ext.getCmp("tipobusqueda"+my_scope.id).getValue();		     	if(tipoBusqueda != 32){     		     		mensajeAlert("Debe de Seleccionar GUIA MADRE para usar esta funcion.");     		     		return;     		     	}     			if (!isValidValueCampo('iddatoabuscar'+my_scope.id, 'Indique el dato que desea buscar en el campo BUSCAR.')){			return;		}				var url ="./busqueda_etiquetas/";				url =url+"viewPDFEnvioMadre?iddocumentomadre=" + Ext.getCmp('iddatoabuscar'+my_scope.id).getValue();				visorPDF(				'utils-win-vistaprevia-pdf_file_envio' + Ext.getCmp('iddatoabuscar'+my_scope.id).getValue(),				"Visor PDF: " + Ext.getCmp('iddatoabuscar'+my_scope.id).getValue(),url);    	    },         abreVentanaLocalizacionEntregaRow:function(row, scope){    			var my_scope = this;		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar registro a visualizar. ");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar. ");     		return;     	}		if ((rows[0].get('latitud') == '' ) || (rows[0].get('longitud') == '' )){			mensajeAlert("No existen datos de latitud y longitud a mostrar. ");     		return;		}		var url =".";		if (this.isFueraSitio){			//url =".";		}		url =url+"/mapsg?latitud="+rows[0].get('latitud')+"&longitud="+rows[0].get('longitud');				visorPDF(				'utils-win-vistaprevia-pdf_localizacion_envio'+ rows[0].get('idDocumento'),				"Localización Entrega[ " + rows[0].get('latitud') + "," + rows[0].get('longitud') +"]",url);    	    },         abreVentanaHistoriaRow:function(row,scope){    	    	var store = undefined;    	if (scope.isFueraSitio){    		store = Ext.create('MyDesktop.store.StoreHistoria',						{			    			proxy: {			    		        type: 'ajax',			    		        api: {			    		            read: './busqueda_etiquetas/getHistoria'			    		        },			    		        reader: {			    		                 type: 'json',			    		                 successProperty: 'success',			    		                 root : 'proxiArray',			    		                 messageProperty: 'message',			    		                 totalProperty : 'totalCount',			    		        },			    		        writer: {			    		            	 type: 'json',			    		                 writeAllFields: true,			    		                 encode: false,			    		                 root: 'proxiArray'			    		        },			    		        listeners: {			    		             exception: function(proxy, response, operation){			    		                     Ext.MessageBox.show({			    		                         title: 'REMOTE EXCEPTION',			    		                         msg: operation.getError(),			    		                         icon: Ext.MessageBox.ERROR,			    		                         buttons: Ext.Msg.OK			    		                     });			    		                 }			    		        }		    		    },		    		    baseParams:{iddocumento:row.get('idDocumento')}}					);    	}    	    			grid_historia_= new MyDesktop.grid.GridHistoria({			autoScroll: true,			customStore:store,			forceFit    : true,			scrollOffset: 0,			isFueraSitio:this.isFueraSitio,			getTotalWidth: function() {				return "auto";			},			iddocumento:row.get('idDocumento')		});					var win_historia = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Historia:" + row.get('idDocumento'),			width: 900,			height: 350,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_historia_					});		//var parametros = {iddocumento:rows[0].get('idDocumento')};		//Si se desea cambiar el URL que despacha la solicitud		//grid_historia_cotizaciones.getStore.getProxy().url = '';		//grid_historia_.buscar(parametros);				win_historia.show()    	    },	abreVentanaHistoria:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro a visualizar. ");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar. ");     		return;     	}		this.abreVentanaHistoriaRow(rows[0], this);	    },     abreVentanaInfoUPS:function(row){    	grid_historia_= new MyDesktop.grid.GridHistoria({			autoScroll: true,			buscarHistoriaUps:true,			forceFit    : true,			scrollOffset: 0,			getTotalWidth: function() {				return "auto";			},			iddocumento:row.get('idDocumento'),			idguiainternacional:row.get('guiainternacional'),			mensajeria: row.get('es_nacional')		});					var win_historia = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Historia " +  row.get('es_nacional')+":" + row.get('guiainternacional'),			width: 900,			height: 350,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_historia_					});				win_historia.show();    },    abreVentanaNotasRow:function(row, isConsulta, scope){    	var identificador_str = row.get('idDocumento');		var tipodocto_str = "ETIQU";		var customStore= undefined;		if (scope.isFueraSitio){			isConsulta=true;						customStore = Ext.create('MyDesktop.store.StoreAttachment',					{													baseParams:{								identificador:row.get('idDocumento'),								idtipodocumento:tipodocto_str						},						proxy: {					        type: 'ajax',					        api: {					            read: './attachmentnota/getDatos?identificador=' + row.get('idDocumento')+					            '&idtipodocumento=' + tipodocto_str					        },					        reader: {					                 type: 'json',					                 successProperty: 'success',					                 root : 'proxiArray',					                 messageProperty: 'message',					                 totalProperty : 'totalCount',					        },					        writer: {					            	 type: 'json',					                 writeAllFields: true,					                 encode: false,					                 root: 'proxiArray'					        },					        listeners: {					             exception: function(proxy, response, operation){					                     Ext.MessageBox.show({					                         title: 'ERROR ',					                         msg: operation.getError(),					                         icon: Ext.MessageBox.ERROR,					                         buttons: Ext.Msg.OK					                     });					                 }					        }						}					});					}		var grid_historia_attachement = new MyDesktop.grid.GridAttachment({			autoScroll: true,			forceFit    : true,			customStore:customStore,			isFueraSitio:scope.isFueraSitio,			isConsulta: (isConsulta!=undefined?isConsulta:false),			idtipodocumento: tipodocto_str ,			identificador:row.get('idDocumento'),			ids_str:identificador_str,			tipos_docs_str:tipodocto_str, 			scrollOffset: 0,			getTotalWidth: function() {				return "auto";			}		});				grid_historia_attachement.loadInfo();				var win_archivos_adjuntos = Ext.create('widget.window', {			id:'utils-win-agregar-cliente',			title: "Notas:" +row.get('idDocumento') ,			width: 800,			height: 350,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: grid_historia_attachement					});				win_archivos_adjuntos.show();    },	abreVentanaNotas:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de seleccionar un registro a visualizar. ");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar. ");     		return;     	}				this.abreVentanaNotasRow(rows[0],	this.isConsulta, this);    	    }, 	cancelarRecord:function(){		var my_scope = this;		//		if (!my_scope.isConsulta){			 var documentos ='';			 	var serv_selected =  this.getView().getSelectionModel().getSelection();			 					if (serv_selected==undefined) return;				if (serv_selected.length<=0){					mensajeAlert('Seleccione los registros a cancelar');  					return;				}			 	 			 	 //Verifica todos los registros para armar la solicitud y checar si no estan confirmados				 for(i=0;i<serv_selected.length;i++){					 if ((serv_selected[i].get("quienRecibe")!=undefined) && (serv_selected[i].get("quienRecibe")!='')){						 mensajeAlert('Error', 'El documento ' + serv_selected[i].get("idDocumento") + ' ya esta confirmado, no puede ser cancelado.' );						 return;					 }					 if ((serv_selected[i].get("fechaRecibe")!=undefined) && (serv_selected[i].get("fechaRecibe")!='')){						 mensajeAlert('Error', 'El documento ' + serv_selected[i].get("idDocumento") + ' ya esta confirmado, no puede ser cancelado.' );						 return;					 }					 					 var arr =  serv_selected[i].get('estatus').split(",");						if (arr.length<=0){							return '';						}else{							 //if (serv_selected[i].get("estatus")=='C') {					    	if (arr[1]=='CANCELADA'){							 mensajeAlert('Error', 'El documento ' + serv_selected[i].get("idDocumento") + ' ya se encuentra cancelado.' );							 return;					    	}						}										 documentos = documentos+serv_selected[i].get("idDocumento")+",";									 }				 				 Ext.MessageBox.confirm('Confirmacion', "Solo se cancelarán las guias que que no tengan confirmacion de entrega" +				 		" y que no tengan historia, desea continuar, ¿Desea continuar?", function(id, text){			       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){ 							       			var conn = new Ext.data.Connection();							 //Obtiene los datos de fecha inicial y final							 conn.request({									url:'./busqueda_etiquetas/cancelarguia',									method:'POST',									defaultHeaders:{'_csrf_header':hv,"_csrf":vt },																		params:{documentos:documentos,"_csrf":vt},									//form:'forma_resumen',									success:function (response, opts){																					var obj = Ext.decode(response.responseText);																						if (obj.success){																								my_scope.realizaConsulta();																						}else if (obj.success == undefined){																							mensajeAlert(obj.message);																						}else{																							mensajeAlert(obj.message);																						}										},									failure:function (response, opts){										var obj = Ext.decode(response.responseText);										mensajeAlert("Error ",response.message);									}																		});				 			       		}		       	 },this);		}				//Actualiza los datos del grid		return ;    }, 	    abreVentanaCita:function(){		var forma_cita = new MyDesktop.form.FormCitaEnvio({    				});  				var win_form_cita = Ext.create('widget.window', {			iconCls:'citas_blue',			title: "Cita" ,			width: 800,			height: 350,			modal:true,			plain: true,			headerPosition: 'right',			layout: 'fit',			items: forma_cita		});				win_form_cita.show();    },     	buscar:function(tipoConsulta, myscope){				var tipoDocumento = 'ETIQU';	    //var myscope = this;		var buscapor='';		var valor='';		var fechaini='';		var fechafin='';			var tipoBusqueda=Ext.getCmp("tipobusqueda"+myscope.id).getValue();				if ((tipoBusqueda == 1) || (tipoBusqueda == 3)  || (tipoBusqueda == 4) || (tipoBusqueda == 19) || (tipoBusqueda == 32))  {//Por tipo de documento			if (!isValidValueCampo('iddatoabuscar'+myscope.id, 'Indique el dato que desea buscar')){				return;			}						var columns = [							{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {																						if ((rec.get('es_nacional') == undefined) || 												(rec.get('es_nacional') == '') ||												(rec.get('es_nacional') == 'NACIONAL')) {												return 'AUTODOC' ;											}else{												return rec.get('es_nacional');																						}										},										getTip: function(v, meta, rec) {											if ((rec.get('es_nacional') == undefined) || 													(rec.get('es_nacional') == '') ||													(rec.get('es_nacional') == 'NACIONAL')) {													return 'AUTODOC' ;												}else{													return rec.get('es_nacional');																								}										},										handler: function(grid, rowIndex, colIndex) {											 var rec = grid.getStore().getAt(rowIndex);											 if ((rec.get('es_nacional') != 'NACIONAL') 												 && (rec.get('es_nacional') != 'AUTODOC')) {												 myscope.abreVentanaInfoUPS(rec);											 }else{												 											 }											 /*if (rec.get('es_nacional') == 'INTERNACIONAL') {												my_scope.abreVentanaInfoUPS(rec);											 }carriernumber											 if (rec.get('es_estafeta') == 'INTERNACIONAL') {													my_scope.abreVentanaInfoUPS(rec);												 }*/																					}									}								]							},							{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {																		if (rec.get('isexistenota') == 'SI') {												return 'NOTAS' ;											} 										},										getTip: function(v, meta, rec) {											if (rec.get('isexistenota') == 'SI') {												return 'NOTAS' ;											} 										},										handler: function(grid, rowIndex, colIndex) {											 var rec = grid.getStore().getAt(rowIndex);											if (rec.get('isexistenota') == 'SI') {												myscope.abreVentanaNotasRow(rec,	myscope.isConsulta);											}																					}									}								]							},	    					{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {											if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){												return 'IMPRESO';											}											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												return 'IMPRESO';											}																																	return arr[1];																					},										getTip: function(v, meta, rec) {											if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){												return 'IMPRESO';											}											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												return 'IMPRESO';											}																																	return arr[0];																					},										handler: function(grid, rowIndex, colIndex) {											var rec = grid.getStore().getAt(rowIndex);											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												myscope.abreVentanaHistoriaRow(rec,myscope);											}else if (arr[1]=='ENTREGADO'){												myscope.abreVentanaLocalizacionEntregaRow(rec,myscope);												//my_scope.abreVentanaHistoriaRow(rec,my_scope);											}else{												myscope.abreVentanaHistoriaRow(rec,myscope);											}																							//if (rec.get('estatus') == 'H') {																								//}										}									}								]							},														 { header   : 'G. Carrier', tooltip:'Guía Carrier', width: 170, sortable : true, hidden:true,	                			dataIndex: 'guiainternacional' ,menuDisabled: myscope.ismenuDesabled  },	                				            	        { header   : 'MADRE', tooltip:'Guia Madre', width: 170, sortable : true, hidden:true,	                    			dataIndex: 'idDocumentoMadre' ,menuDisabled: myscope.ismenuDesabled  },	                				        	            { header   : 'Etiqueta', tooltip:'Etiqueta', width: 170, sortable : true, hidden:false,	                        			dataIndex: 'idDocumento' ,menuDisabled: myscope.ismenuDesabled  },	                        { header   : 'Remesa', tooltip:'Remesa/Guia Madre Multiple', width: 170, sortable : true, hidden:false,	                            			dataIndex: 'idguiamadremultiple' ,menuDisabled: myscope.ismenuDesabled  },				                       { header   : 'Tipo de Servicio', tooltip:'Tipo de Servicio', width: 180, sortable : true, 	                            				hidden:false, dataIndex: 'descripcio_servicio' ,menuDisabled: myscope.ismenuDesabled  },				        	            { header   : 'F.Creacion', tooltip:'Fecha de creacion', width: 180, sortable : true, 	                        				hidden:false, dataIndex: 'fechaCreacion' ,menuDisabled: myscope.ismenuDesabled  },	                        { header   : 'F.Recoleccion', tooltip:'Fecha de Recoleccion', width: 180, sortable : true, 	                            				hidden:false, dataIndex: 'fecharecoleccion' ,menuDisabled: myscope.ismenuDesabled  },	                            					        	            { header   : 'Referencia', tooltip:'Referencia', width: 110, sortable : true, hidden:false, 	                        					dataIndex: 'referencia' ,menuDisabled: myscope.ismenuDesabled  },	        	            {  header   : 'Guia Casamiento', tooltip:'Guia Casamiento', width: 150, sortable : true,	                        						hidden:false, dataIndex: 'idGuiaCasamiento' ,menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaGuiaCasamiento   },	        	            {  header   : 'Guia Devolucion', tooltip:'Guia Devolucion',width: 150, sortable : true, 	                        							hidden:true, dataIndex: 'idGuiaDevolucion' ,menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaGuiaDevolucion   },	        	           	        	            { header   : 'Cant.',tooltip:'Cant.', width    : 80, sortable : true, hidden:true,dataIndex: 'numpiezas',menuDisabled: myscope.ismenuDesabled },	        	            { header   : 'Peso', tooltip:'Peso',width    : 85, sortable : true, hidden:true,dataIndex: 'pesobruto',	        	            	menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Val. Decl.', tooltip:'Val. Decl.',width    : 50, sortable : true, hidden:true,	        	            		dataIndex: 'valordeclarado',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	           // {id :'cantasegurada', header   : 'Cant.Asegurada', tooltip:'Cant.Asegurada',width    : 50, sortable : true, hidden:true,	        	           // 			dataIndex: 'cantasegurada',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            { header   : 'Contenido', tooltip:'Contenido',width    : 150, sortable : true, hidden:false,	        	            				dataIndex: 'contenidoDeclarado',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Observacion', tooltip:'Observacion',width    : 100, sortable : true, hidden:true,	        	            					dataIndex: 'observacion',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Remitente', tooltip:'Remitente',width    : 200, sortable : true,	        	            						hidden:false,dataIndex: 'remitente.razonSocial',menuDisabled: myscope.ismenuDesabled,	        	            						renderer:myscope.formatoCeldaRemitente },	        	            { header   : 'Destino', tooltip:'Destino',width    : 200, sortable : true,	        	            							hidden:false,dataIndex: 'destinatario.razonSocial',menuDisabled: myscope.ismenuDesabled,	        	            							renderer:myscope.formatoCeldaDestino },	        	            	        	            {header   : 'Quien Recibe', tooltip:'Quien Recibe',width: 250, sortable : true,	        	            								hidden:false,dataIndex: 'quienRecibe',menuDisabled: myscope.ismenuDesabled,	        	            								renderer:myscope.showConfirmacion }	        	            /*{id :'fechaConfirmacion', header   : 'Fecha Entrega', tooltip:'Fecha Entrega',width    : 120, 	        	            									sortable : true, hidden:false,dataIndex: 'fechaConfirmacion',	        	            									menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.showConfirmacionL1 }*/	        	            	        	            /*{id :'tiporechazo', header: 'Tipo', width: 80, sortable : true, hidden:true,	        	            			dataIndex: 'tiporechazo', menuDisabled: my_scope.ismenuDesabled,menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            {id :'fecharechazo', header   : 'Fecha de Rechazo',tooltip:'Fecha Rechazo', width: 90, 	        	            				sortable : true, hidden:true,dataIndex: 'fecharechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            {id :'claverechazo', header   : 'Motivo de rechazo',tooltip:'Clave rechazo', width: 90, 	        	            					sortable : true, hidden:true,dataIndex: 'claverechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },	        	            {id :'cantidadrechazo', header   : 'Cajas',tooltip:'Cajas', width: 90, sortable : true,	        	            				hidden:true,dataIndex: 'cantidadrechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },	        	            {id :'foliorechazo', header   : 'Folio Rechazo',tooltip:'Folio SAC', width: 90, 	        	            					sortable : true, hidden:true,dataIndex: 'foliorechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  }							*/				];					    var grid = myscope;		    		    grid.reconfigure(null,columns);					}		if ((tipoBusqueda == 2)  || (tipoBusqueda == 3)  || (tipoBusqueda == 4) ){//Por rango de fechas			if (!isValidValueCampoRaw('idfechaInicial'+myscope.id, 'Indique la fecha inicial')){				return;			}			if (!isValidValueCampoRaw('idfechaFinal'+myscope.id, 'Indique la fecha final')){				return;			}						var columns = [							{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {																						if ((rec.get('es_nacional') == undefined) || 												(rec.get('es_nacional') == '') ||												(rec.get('es_nacional') == 'NACIONAL')) {												return 'AUTODOC' ;											}else{												return rec.get('es_nacional');																						}										},										getTip: function(v, meta, rec) {											if ((rec.get('es_nacional') == undefined) || 													(rec.get('es_nacional') == '') ||													(rec.get('es_nacional') == 'NACIONAL')) {													return 'AUTODOC' ;												}else{													return rec.get('es_nacional');																								}										},										handler: function(grid, rowIndex, colIndex) {											 var rec = grid.getStore().getAt(rowIndex);											 if ((rec.get('es_nacional') != 'NACIONAL') 												 && (rec.get('es_nacional') != 'AUTODOC')) {												 myscope.abreVentanaInfoUPS(rec);											 }else{												 											 }											 /*if (rec.get('es_nacional') == 'INTERNACIONAL') {												my_scope.abreVentanaInfoUPS(rec);											 }carriernumber											 if (rec.get('es_estafeta') == 'INTERNACIONAL') {													my_scope.abreVentanaInfoUPS(rec);												 }*/																					}									}								]							},							{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {																		if (rec.get('isexistenota') == 'SI') {												return 'NOTAS' ;											} 										},										getTip: function(v, meta, rec) {											if (rec.get('isexistenota') == 'SI') {												return 'NOTAS' ;											} 										},										handler: function(grid, rowIndex, colIndex) {											 var rec = grid.getStore().getAt(rowIndex);											if (rec.get('isexistenota') == 'SI') {												myscope.abreVentanaNotasRow(rec,	myscope.isConsulta);											}																					}									}								]							},	    					{								menuDisabled: true,	sortable: false,								xtype: 'actioncolumn',	width: 20,								items: [									{										getClass: function(v, meta, rec) {											if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){												return 'IMPRESO';											}											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												return 'IMPRESO';											}																																	return arr[1];																					},										getTip: function(v, meta, rec) {											if ((rec.get('estatus')==undefined) || (rec.get('estatus')=='')){												return 'IMPRESO';											}											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												return 'IMPRESO';											}																																	return arr[0];																					},										handler: function(grid, rowIndex, colIndex) {											var rec = grid.getStore().getAt(rowIndex);											var arr =  rec.get('estatus').split(",");											if (arr.length<=0){												myscope.abreVentanaHistoriaRow(rec,myscope);											}else if (arr[1]=='ENTREGADO'){												myscope.abreVentanaLocalizacionEntregaRow(rec,myscope);												//my_scope.abreVentanaHistoriaRow(rec,my_scope);											}else{												myscope.abreVentanaHistoriaRow(rec,myscope);											}																							//if (rec.get('estatus') == 'H') {																								//}										}									}								]							},														 { header   : 'G. Carrier', tooltip:'Guía Carrier', width: 170, sortable : true, hidden:true,	                			dataIndex: 'guiainternacional' ,menuDisabled: myscope.ismenuDesabled  },	                				            	        { header   : 'MADRE', tooltip:'Guia Madre', width: 170, sortable : true, hidden:false,	                    			dataIndex: 'idDocumentoMadre' ,menuDisabled: myscope.ismenuDesabled  },	                				        	            { header   : 'Etiqueta', tooltip:'Etiqueta', width: 170, sortable : true, hidden:false,	                        			dataIndex: 'idDocumento' ,menuDisabled: myscope.ismenuDesabled  },	                        { header   : 'Remesa', tooltip:'Remesa/Guia Madre Multiple', width: 170, sortable : true, hidden:false,	                            			dataIndex: 'idguiamadremultiple' ,menuDisabled: myscope.ismenuDesabled  },				                       { header   : 'Tipo de Servicio', tooltip:'Tipo de Servicio', width: 180, sortable : true, 	                            				hidden:false, dataIndex: 'descripcio_servicio' ,menuDisabled: myscope.ismenuDesabled  },				        	            { header   : 'F.Creacion', tooltip:'Fecha de creacion', width: 180, sortable : true, 	                        				hidden:false, dataIndex: 'fechaCreacion' ,menuDisabled: myscope.ismenuDesabled  },	                        { header   : 'F.Recoleccion', tooltip:'Fecha de Recoleccion', width: 180, sortable : true, 	                            				hidden:false, dataIndex: 'fecharecoleccion' ,menuDisabled: myscope.ismenuDesabled  },	                            					        	            { header   : 'Referencia', tooltip:'Referencia', width: 110, sortable : true, hidden:false, 	                        					dataIndex: 'referencia' ,menuDisabled: myscope.ismenuDesabled  },	        	            {  header   : 'Guia Casamiento', tooltip:'Guia Casamiento', width: 150, sortable : true,	                        						hidden:false, dataIndex: 'idGuiaCasamiento' ,menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaGuiaCasamiento   },	        	            {  header   : 'Guia Devolucion', tooltip:'Guia Devolucion',width: 150, sortable : true, 	                        							hidden:true, dataIndex: 'idGuiaDevolucion' ,menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaGuiaDevolucion   },	        	           	        	            { header   : 'Cant.',tooltip:'Cant.', width    : 80, sortable : true, hidden:true,dataIndex: 'numpiezas',menuDisabled: myscope.ismenuDesabled },	        	            { header   : 'Peso', tooltip:'Peso',width    : 85, sortable : true, hidden:true,dataIndex: 'pesobruto',	        	            	menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Val. Decl.', tooltip:'Val. Decl.',width    : 50, sortable : true, hidden:true,	        	            		dataIndex: 'valordeclarado',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	           // {id :'cantasegurada', header   : 'Cant.Asegurada', tooltip:'Cant.Asegurada',width    : 50, sortable : true, hidden:true,	        	           // 			dataIndex: 'cantasegurada',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            { header   : 'Contenido', tooltip:'Contenido',width    : 150, sortable : true, hidden:false,	        	            				dataIndex: 'contenidoDeclarado',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Observacion', tooltip:'Observacion',width    : 100, sortable : true, hidden:true,	        	            					dataIndex: 'observacion',menuDisabled: myscope.ismenuDesabled,renderer:myscope.formatoCeldaTexto },	        	            { header   : 'Remitente', tooltip:'Remitente',width    : 200, sortable : true,	        	            						hidden:false,dataIndex: 'remitente.razonSocial',menuDisabled: myscope.ismenuDesabled,	        	            						renderer:myscope.formatoCeldaRemitente },	        	            { header   : 'Destino', tooltip:'Destino',width    : 200, sortable : true,	        	            							hidden:false,dataIndex: 'destinatario.razonSocial',menuDisabled: myscope.ismenuDesabled,	        	            							renderer:myscope.formatoCeldaDestino },	        	            	        	            {header   : 'Quien Recibe', tooltip:'Quien Recibe',width: 250, sortable : true,	        	            								hidden:false,dataIndex: 'quienRecibe',menuDisabled: myscope.ismenuDesabled,	        	            								renderer:myscope.showConfirmacion }	        	            /*{id :'fechaConfirmacion', header   : 'Fecha Entrega', tooltip:'Fecha Entrega',width    : 120, 	        	            									sortable : true, hidden:false,dataIndex: 'fechaConfirmacion',	        	            									menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.showConfirmacionL1 }*/	        	            	        	            /*{id :'tiporechazo', header: 'Tipo', width: 80, sortable : true, hidden:true,	        	            			dataIndex: 'tiporechazo', menuDisabled: my_scope.ismenuDesabled,menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            {id :'fecharechazo', header   : 'Fecha de Rechazo',tooltip:'Fecha Rechazo', width: 90, 	        	            				sortable : true, hidden:true,dataIndex: 'fecharechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto },	        	            {id :'claverechazo', header   : 'Motivo de rechazo',tooltip:'Clave rechazo', width: 90, 	        	            					sortable : true, hidden:true,dataIndex: 'claverechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },	        	            {id :'cantidadrechazo', header   : 'Cajas',tooltip:'Cajas', width: 90, sortable : true,	        	            				hidden:true,dataIndex: 'cantidadrechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  },	        	            {id :'foliorechazo', header   : 'Folio Rechazo',tooltip:'Folio SAC', width: 90, 	        	            					sortable : true, hidden:true,dataIndex: 'foliorechazo',menuDisabled: my_scope.ismenuDesabled,renderer:my_scope.formatoCeldaTexto  }							*/				];					    var grid = myscope;		    		    grid.reconfigure(null,columns);					}		var idhoraInicial=Ext.getCmp("idhoraInicial"+myscope.id);		var  idhoraFinal= Ext.getCmp("idhoraFinal"+myscope.id);		 		var  idhoraInicial=((Ext.getCmp("idhoraInicial"+myscope.id).getValue()==undefined) ||(Ext.getCmp("idhoraInicial"+myscope.id).getValue()=='')) ?				" 00:00:00":" "+Ext.getCmp("idhoraInicial"+myscope.id).getRawValue()+":00";		var  idhoraFinal= ((Ext.getCmp("idhoraFinal"+myscope.id).getValue()==undefined) ||(Ext.getCmp("idhoraFinal"+myscope.id).getValue()=='')) ?				" 23:59:00":" " +Ext.getCmp("idhoraFinal"+myscope.id).getRawValue()+":00";		var datosFecha =  Ext.getCmp('idfechaInicial'+myscope.id).getRawValue().split('T');		var fechaini=datosFecha[0]  +idhoraInicial;		var datosFecha =  Ext.getCmp('idfechaFinal'+myscope.id).getRawValue().split('T');		var fechafin=datosFecha[0] +idhoraFinal;			if (tipoConsulta==1){//Consulta info			myscope.getView().getStore().reload(					{						params:{							tipobusqueda:tipoBusqueda, 							iddatoabuscar:Ext.getCmp('iddatoabuscar'+myscope.id).getValue(),							tipoDocumento:tipoDocumento,							fechaini:fechaini, 							fechafin:fechafin,							start:0													},						callback:function(r,options,success){							 /*if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }*/						 }	  					});		}		if (tipoConsulta==2){//Exporta a excel			showAndHideWindows('./busqueda_etiquetas/exportaConsultaEtiquetasExcel?tipobusqueda='+tipoBusqueda+					"&iddatoabuscar="+Ext.getCmp('iddatoabuscar'+myscope.id).getValue()+"&tipoDocumento="+tipoDocumento+					"&fechaini="+ fechaini +"&fechafin="+fechafin);					}					    	    },     busquedaCorta:function(patron, tipoBusqueda){    	    	var tipoDocumento = 'ETIQU';	    //var myscope = this;		var buscapor='';		var valor='';		var fechaini='';    	var myscope = this;    			var fechafin='';						myscope.getView().getStore().reload(					{						params:{							tipobusqueda:tipoBusqueda, 							iddatoabuscar:patron,							tipoDocumento:tipoDocumento,							fechaini:fechaini, 							fechafin:fechafin													},						callback:function(r,options,success){							 if (r.length<=0){								 Ext.Msg.show({									 title: 'Aviso',									 msg: 'No existe información con el criterio de busqueda selecionado.',									 modal: false,									 icon: Ext.Msg.INFO,									 buttons: Ext.Msg.OK														 });  															 }						 }	  					});    },    realizaConsulta:function(){    	this.buscar(1, this);    	    },    exportarExcel:function(){    	this.buscar(2, this);    				},		showVentanaRechazos:function(){    	    },     formatoCeldaGuiaCasamiento:function(value, metaData, record, rowIndex, colIndex, store){    	return value;    },    formatoCeldaGuiaDevolucion:function(value, metaData, record, rowIndex, colIndex, store){    	return value;    },    formatoCeldaRemitente:function(value, metaData, record, rowIndex, colIndex, store){			metaData.tdAttr = 'data-qtip="' +			 '<table border=0>'				+ '	<tr><td bgcolor=#F6FA7A><b>Raz&oacute;n social</b><font color=red>*</font>:</td><td >'				+ record.data.remitente.razonSocial				+ '</td></tr>'								+ '	<tr><td bgcolor=#F6FA7A><b>Atenci&oacute;n</b>:</td><td >'				+ record.data.remitente.atencion				+ '</td></tr>'				+ '	<tr><td bgcolor=#F6FA7A><b>Direcci&oacute;n</b><font color=red>*</font>:</td><td >'				+ record.data.remitente.direccion				+ '</td></tr>'				+ '	<tr><td bgcolor=#F6FA7A><b>Colonia</b><font color=red>*</font>:</td><td >'				+ record.data.remitente.colonia + '&nbsp;&nbsp;&nbsp;<b>C.P&nbsp;<font color=red>*</font></b>'				+ record.data.remitente.cp				+ '	<tr><td bgcolor=#F6FA7A><b>Municipio</b><font color=red>*</font>:</td><td >'				+ record.data.remitente.municipio				+ '</td></tr>'				+ '	<tr><td bgcolor=#F6FA7A><b>Estado</b>:</td><td >'				+ record.data.remitente.estado				+ '</td></tr>'				+ '	<tr><td bgcolor=#F6FA7A><b>Tel.</b>:</td><td >'				+ record.data.remitente.telefono				+ '</td></tr>'				+ '	<tr><td bgcolor=#F6FA7A><b>Email</b>:</td></tr>'				+ '</table>"' ;			return  record.data.remitente.razonSocial;    },    formatoCeldaDestino:function(value, metaData, record, rowIndex, colIndex, store){    	    	if ((record.data.zonaDes!=undefined) && (record.data.zonaDes!='')){    		return  record.data.destinatario.razonSocial + "(" + record.data.zonaDes+ ")";    	}else{    		metaData.tdAttr = 'data-qtip="' +			 '<table border=0>'				+ '	<tr><td bgcolor=#87F0AA><b>Raz&oacute;n social</b><font color=red>*</font>:</td><td >'				+ record.data.destinatario.razonSocial				+ '</td></tr>'								+ '	<tr><td bgcolor=#87F0AA><b>Atenci&oacute;n</b>:</td><td >'				+ record.data.destinatario.atencion				+ '</td></tr>'				+ '	<tr><td bgcolor=#87F0AA><b>Direcci&oacute;n</b><font color=red>*</font>:</td><td >'				+ record.data.destinatario.direccion				+ '</td></tr>'				+ '	<tr><td bgcolor=#87F0AA><b>Colonia</b><font color=red>*</font>:</td><td >'				+ record.data.destinatario.colonia + '&nbsp;&nbsp;&nbsp;<b>C.P&nbsp;<font color=red>*</font></b>'				+ record.data.destinatario.cp				+ '	<tr><td bgcolor=#87F0AA><b>Municipio</b><font color=red>*</font>:</td><td >'				+ record.data.destinatario.municipio				+ '</td></tr>'				+ '	<tr><td bgcolor=#87F0AA><b>Estado</b>:</td><td >'				+ record.data.destinatario.estado				+ '</td></tr>'				+ '	<tr><td bgcolor=#87F0AA><b>Tel.</b>:</td><td >'				+ record.data.destinatario.telefono				+ '</td></tr>'				+ '	<tr><td bgcolor=#87F0AA><b>Email</b>:</td></tr>'				+ '</table>"' ;    	    		return  record.data.destinatario.razonSocial;    		    	}    		    	    },    formatoCeldaEntrega:function(value, metaData, record, rowIndex, colIndex, store){    	return  value;    },    showConfirmacion:function(value, metaData, record, rowIndex, colIndex, store){    	var arr =  record.get('estatus').split(",");		if (arr.length<=0){			return '';		}		    	if (arr[1]=='ENTREGADO'){    		return  record.get('quienRecibe') + "/ " + record.get('fechaConfirmacion') ;    	}    	    },    formatoCeldaEntrega:function(value, metaData, record, rowIndex, colIndex, store){    	return value;    },    formatoCeldaTexto:function(value, metaData, record, rowIndex, colIndex, store){    	return value;    },		showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		},		getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	},		/* CAMBIO CITA EVIDENCIA MANIOBRA */    showWindowsAdicionales:function(){    			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		mensajeAlert("Debe de Seleccionar solo un registro a visualizar. ");     		return;     	}		if(rows.length >1){     		mensajeAlert("Seleccione solamente un registro a visualizar. ");     		return;     	}				var idregistro = rows[0].get('idDocumento');		    					var myscope=this;    			    	    					var grid_adicionales= Ext.create('MyDesktop.grid.GridAdicionalPreFactura',{    						height   : 190,frame:true, border:true,    						hidden_cp:true, hidden_garmax:true,    			    		frame:false, border:false,idRotulacion:'',isConsulta:true,    			    		hidden_cp:true, hidden_garmax:true, flex:2, layout:'fit',idregistro:idregistro    					});     				    					var datos_window = new Ext.Window({    						    						width    : 320,    						height   : 300,    						title	: 'Datos de servicios Adicionales',    						closable:true,    						layout:'fit',    						resizable:false,    						modal:true,    						items: [grid_adicionales],    						headerPosition: 'right'    					});     					datos_window.show();	}	/* FIN CAMBIO */	});