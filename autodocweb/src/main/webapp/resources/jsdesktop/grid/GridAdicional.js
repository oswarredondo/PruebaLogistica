Ext.define('MyDesktop.grid.GridAdicional', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],    stateful: true,    collapsible: false,    multiSelect: true,    stateId: 'stateGridAdicional',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	uuid:undefined,	idregistro:undefined,	id:undefined,	isConsulta:false,	myScope:undefined,	uuid:undefined,	idregistro:undefined,	mystore:undefined,    initComponent: function () {    	var store_sino = Ext.create('MyDesktop.store.StoreSINO',{}) ;		this.myScope = this;		if (this.mystore==undefined){			this.store = Ext.create('MyDesktop.store.StoreAdicionales',{baseParams:{uuid:this.uuid,				idregistro:this.idregistro}}			);			this.store.getProxy().setExtraParam("uuid", this.uuid);			this.store.getProxy().setExtraParam("idregistrodatos", this.idregistro);		}else{			this.store = this.mystore;		}				if(!this.isConsulta){			this.editing = Ext.create('Ext.grid.plugin.CellEditing',{clicksToEdit: 1});			this.plugins = this.editing;		 } 		this.selModel = Ext.create('Ext.selection.CheckboxModel', {            mode: 'SINGLE',            checkOnly: 'true',            allowDeselect: true,            }),                    this.columns = [											{text     : '',width: 80, sortable : true,dataIndex: 'idregistroadicional'	},						{text     : field_descripcion,width: 190,sortable : true,dataIndex: 'descripcion',							field: {								xtype: 'myUpperCaseTextField',			                    maxLength:30,			                    minLength:1,			                    required:true,			                    disabled : true,			                    enforceMaxLength:true			                    			                    							}							},						{text     : field_precio,width: 85,sortable : true,dataIndex: 'precio',							align: 'right',renderer: 'usMoney',							editor: {								xtype: 'numberfield',								value: 1.0,								maxValue: 9999.99,								allowDecimals:true,								decimalPrecision:2,								decimalSeparator:'.',								thousandSeparator:',',						        required:true,						        minValue: 0.0						       							}									},						{				            text: field_requerido,				            dataIndex: 'tipo',				            sortable : true,				            width: 90,				            renderer: function (value, metaData, record, rowIndex, colIndex, store) {								if (value==1){									return TIPO_SI;								}								return TIPO_NO;							}						}																					];			this.callParent();    },	agregar:function(){		  var rec = new MyDesktop.models.ModeloAdicionales({			  identificador: 0,			  clave:'',			  descripcion: '',			  precio:0.0,			  tipo:'0'	        }), edit = this.editing;	      edit.cancelEdit();	      this.store.insert(0, rec);	        edit.startEditByPosition({	            row: 0,	            column: 1	      });	        	},	modificar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para modificar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a modificar");     		return;     	}			},			eliminar:function(){		var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		 Ext.Msg.alert('Verificar',"Seleccione los registros que desea eliminar");     		return;     	}		    	 Ext.MessageBox.confirm('Confirmacion', '¿Desea borrar los registros seleccionados?', function(id, text){       		if ( (id === 'yes')  || (id === 'si') || (id === 'y' ) || (id === 's' ) ){        			if(rows.length === 0){  //step 3       				return ;       			}       			this.getView().getStore().remove(rows);  //step 4       			this.commitInfo();       		}       	 },this);     	 				},	showDetails:function(){			var rows =  this.getView().getSelectionModel().getSelection();     	if(rows.length <=0){     		Ext.Msg.alert('Verificar',"Debe de Seleccionar solo un registro para visualizar");     		return;     	}		if(rows.length >1){     		Ext.Msg.alert('Verificar',"Seleccione solamente un registro a visualizar");     		return;     	}		},	loadInfo:function(){		this.getView().getStore().load();		},	commitInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		},	saveInfo:function(){		this.getView().getStore().save( );		this.getView().getStore().commitChanges();		this.loadInfo();		},	getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	},	setUUIDIdRegistro:function(uuid,idregistro){		this.uuid=uuid;		this.idregistro = ideregistro;	}	});