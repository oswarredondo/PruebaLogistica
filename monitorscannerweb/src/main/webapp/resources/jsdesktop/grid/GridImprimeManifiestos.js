Ext.define('MyDesktop.grid.GridImprimeManifiestos', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],    stateful: true,    collapsible: false,    multiSelect: true,    showBtnSalvar:false,    stateId: 'stateGridImprimeManifiestos',    viewConfig: {        stripeRows: true,        enableTextSelection: true    },	hidden_cp:false,  	hidden_garmax:false,	desc_gar_width:200,	xtype: 'grid',	myStore:undefined,	tiporegistro : undefined,	datoManif:undefined,	myScope:undefined,	initComponent: function () {		this.myScope = this;		var my_scope = this;				this.selType= 'checkboxmodel';		var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});		this.selModel= sm;				/* Creamos una estructura de Store simple y provicional para no usar		 * Ext.create('MyDesktop.store.StoreFrecuenciasEntrega'); ya que como tenemos		 * otra instancia de este mismo grid activa para almacenar los datos si la usamos		 * puede darnos problemas con los datos ya almacenados*/		this.store = Ext.create('Ext.data.Store', {//			model: 'MyDesktop.models.ModeloImpresionPrueba',	        fields: [{	            name: 'tipo',	            type: 'string'	        }, {	            name: 'manifiesto',	            type: 'string'	        }]		});				var myStore = this.store;				this.columns = [    	                		                {text     : 'Tipo',width: 160,sortable : false,dataIndex: 'tipo'},    					{text     : 'Manifiesto',width: 250,sortable : false,dataIndex: 'manifiesto'},    					{    				            xtype:'actioncolumn',     				            header:'Acciones',    				            width:50,    				            items: [    					            {xtype:'tbseparator'},							        { xtype:'button', flex: 1,width:60,  margins: '0 0 0 5',  iconCls:'print_orange',text:'',    					            	handler:this.generaReimpresionManifiesto,scope:this},    					          ]    						}    				];				if(this.datoManif.includes("~")){					var datosArray = this.datoManif.split("~");						for(i = 0; i < datosArray.length; i++){								var datosArrayMadre = datosArray[i].split(",");								var tipoD = datosArrayMadre[0]								var manifiestoD = datosArrayMadre[1]								myStore.add({			    	tipo: tipoD,			    	manifiesto:  manifiestoD			    });			}					}else{						var datosArrayMadre = this.datoManif.split(",");						var tipoD = datosArrayMadre[0]						var manifiestoD = datosArrayMadre[1]						myStore.add({		    	tipo: tipoD,		    	manifiesto:  manifiestoD		    });					}				this.callParent();		    },    generaReimpresionManifiesto:function(tiporegistro,tipotranslado){    	    	var rows =  this.getView().getSelectionModel().getSelection();    			if (rows.length<=0){						mensajeAlert("Seleccione el manifiesto que desea imprimir");						return;					}    			var manifiestoSelect = rows[0].get("manifiesto");    	var myscope_main = this;    			var url='../manifiestomovimientos/reimprimeManifiesto?manifiesto='+manifiestoSelect+ 		"&tipomanifiesto=" + this.tiporegistro + "&tipotranslado="+this.tipotranslado;				visorPDF(				'utils-win-vistapreviareimprime-pdf_file_envio'+manifiestoSelect,				"Visor Manifiesto" ,	url);    	//		this.limpiar;		    },    limpiar:function(){    	var myscope_main =this;    	Ext.getCmp('id_viaje'+myscope_main.id).setValue('');    	Ext.getCmp('id_tramo'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_viaje'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_tramo'+myscope_main.id).setValue();		Ext.getCmp('id_manifiesto_supervisor'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_operador1'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_operador2'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_economico'+myscope_main.id).setValue('');		Ext.getCmp('id_manifiesto_cincho'+myscope_main.id).setValue('');		Ext.getCmp('idmanifiesto'+myscope_main.id).setValue('');		 Ext.getCmp('id_excluir_guias'+myscope_main.id).setValue('');		 myscope_main.getView().getStore().removeAll();    }});