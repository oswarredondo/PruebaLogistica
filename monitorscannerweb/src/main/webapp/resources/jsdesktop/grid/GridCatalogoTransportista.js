Ext.define('MyDesktop.grid.GridCatalogoTransportista', {    extend: 'Ext.grid.Panel',    requires: [        'Ext.grid.column.Action',        'Ext.grid.plugin.CellEditing',        'Ext.form.field.Text',        'Ext.toolbar.TextItem'    ],   // stateful: true,    collapsible: false,    multiSelect: false,    stateId: 'stateGridCatalogoTransportista',    viewConfig: {       // stripeRows: true,        enableTextSelection: true    },	id:undefined,	isConsulta:false,	myScope:undefined,	tipo:1, //1=transportista, 2=Viajes, 3=Tramo	viaje:undefined,	tipo_translado:'F',	tiporegistro:'',	col_name:'',	plaza:'',    initComponent: function () {    	    	var me=this;		this.myScope = this;								if (this.tipo==1){			this.store = Ext.create('MyDesktop.store.StoreTransportista',{}) ;			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;			 this.columns = [	                        	{id :'identificador', header   : (me.col_name==''?'Transportista':me.col_name) ,  	                        		width    : 150, sortable : false, 	                        		hidden:false, dataIndex: 'login' ,menuDisabled: false	                        		}				];		}else if (this.tipo==2){			this.store = Ext.create('MyDesktop.store.StoreRegistrosProcesados',{				model: 'MyDesktop.models.ModeloRegistrosProcesados',				proxy: {			        type: 'ajax',			        api: {			            read: '../logproceso/getViajes?tipotranslado='+me.tipo_translado+'&tiporegistro=' +me.tiporegistro+'&plaza='+me.plaza			        },			        reader: {			                 type: 'json',			                 successProperty: 'success',			                 root : 'proxiArray',			                 messageProperty: 'message',			                 totalProperty : 'totalCount',			        },			        writer: {			            	 type: 'json',			                 writeAllFields: true,			                 encode: false,			                 root: 'proxiArray'			        },			        listeners: {			             exception: function(proxy, response, operation){}			        },			        afterRequest: function (request, success) {},			        readCallback: function (request) {			                 if (!request.operation.success)  {}			             }			    },		        sorters: [{		            property: 'viaje',		            direction: 'ASC'		        }]							}) ;			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;			 this.columns = [	                        	{header   : (me.col_name==''?'Viaje':me.col_name) ,  width    : 150, sortable : false, 	                        		hidden:false, dataIndex: 'viaje' ,menuDisabled: false  }				];		}else if (this.tipo==3){			this.store = Ext.create('MyDesktop.store.StoreRegistrosProcesados',{				 model: 'MyDesktop.models.ModeloRegistrosProcesados',				proxy: {			        type: 'ajax',			        api: {			            read: '../logproceso/getTramosViajes?tipotranslado='+me.tipo_translado+'&viaje='+me.viaje+'&tiporegistro=' +me.tiporegistro+'&plaza='+me.plaza			        },			        reader: {			                 type: 'json',			                 successProperty: 'success',			                 root : 'proxiArray',			                 messageProperty: 'message',			                 totalProperty : 'totalCount',			        },			        writer: {			            	 type: 'json',			                 writeAllFields: true,			                 encode: false,			                 root: 'proxiArray'			        },			        listeners: {			             exception: function(proxy, response, operation){}			        },			        afterRequest: function (request, success) {},			        readCallback: function (request) {			                 if (!request.operation.success)  {}			             }				},		        sorters: [{		            property: 'ruta',		            direction: 'ASC'		        }]											}) ;			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;			 this.columns = [	                        	{ header   : (me.col_name==''?'Tramo':me.col_name) ,  	                        		width    : 150, sortable : false, 	                        		hidden:false, dataIndex: 'ruta' ,menuDisabled: false  }				];		}else if (this.tipo==4){			this.store = Ext.create('MyDesktop.store.StoreRegistrosProcesados',{				 model: 'MyDesktop.models.ModeloRegistrosProcesados',				proxy: {			        type: 'ajax',			        api: {			            read: '../logproceso/getViajeCorridas?viaje='+me.viaje+'&plaza='+me.plaza			        },			        reader: {			                 type: 'json',			                 successProperty: 'success',			                 root : 'proxiArray',			                 messageProperty: 'message',			                 totalProperty : 'totalCount',			        },			        writer: {			            	 type: 'json',			                 writeAllFields: true,			                 encode: false,			                 root: 'proxiArray'			        },			        listeners: {			             exception: function(proxy, response, operation){}			        },			        afterRequest: function (request, success) {},			        readCallback: function (request) {			                 if (!request.operation.success)  {}			             }				},		        sorters: [{		            property: 'ruta',		            direction: 'ASC'		        }]											}) ;			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{mode : 'SINGLE'});			this.selModel= sm;			 this.columns = [	                        	{ header   : 'Id Corrida',  	                        		width    : 100, sortable : false, 	                        		hidden:false, dataIndex: 'tipomovimiento' ,menuDisabled: false  },	                        	{ header   :'Id Viaje' ,  		                        		width    : 100, sortable : false, 		                        		hidden:false, dataIndex: 'viaje' ,menuDisabled: false  },		                        { header   : 'Descripcion',  			                        		width    : 150, sortable : false, 			                        		hidden:false, dataIndex: 'ruta' ,menuDisabled: false  },			                    { header   : 'Fecha' ,  				                        		width    : 100, sortable : false, 				                        		hidden:false, dataIndex: 'fechaproceso' ,menuDisabled: false  }		    								];		}else if (this.tipo==5){			this.store = Ext.create('MyDesktop.store.StoreRegistrosProcesados',{				 model: 'MyDesktop.models.ModeloRegistrosProcesados',				proxy: {			        type: 'ajax',			        api: {			            read: '../logproceso/getPlazas??tipotranslado='+me.tipo_translado+'&viaje='+me.viaje+'&tiporegistro=' +me.tiporegistro			        },			        reader: {			                 type: 'json',			                 successProperty: 'success',			                 root : 'proxiArray',			                 messageProperty: 'message',			                 totalProperty : 'totalCount',			        },			        writer: {			            	 type: 'json',			                 writeAllFields: true,			                 encode: false,			                 root: 'proxiArray'			        },			        listeners: {			             exception: function(proxy, response, operation){}			        },			        afterRequest: function (request, success) {},			        readCallback: function (request) {			                 if (!request.operation.success)  {}			             }				},		        sorters: [{		            property: 'ruta',		            direction: 'ASC'		        }]											}) ;			this.selType= 'checkboxmodel';			var sm = Ext.create('Ext.selection.CheckboxModel',{});			this.selModel= sm;			 this.columns = [	                        		{header   : 'Plaza' ,  width    : 150, sortable : false, 	                        		hidden:false, dataIndex: 'viaje' ,menuDisabled: false  }	    								];		}    	       			this.callParent();    },	getRowsSelected:function(){		return this.getView().getSelectionModel().getSelection();	}	});